nohup: ignoring input
[2024-05-03 19:54:13,155] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-05-03 19:54:13,741] torch.distributed.run: [WARNING] 
[2024-05-03 19:54:13,741] torch.distributed.run: [WARNING] *****************************************
[2024-05-03 19:54:13,741] torch.distributed.run: [WARNING] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
[2024-05-03 19:54:13,741] torch.distributed.run: [WARNING] *****************************************
[2024-05-03 19:54:16,337] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[93m [WARNING] [0m async_io requires the dev libaio .so object and headers but these were not found.
[93m [WARNING] [0m async_io: please install the libaio-dev package with apt
[93m [WARNING] [0m If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS environment variables to where it can be found.
[93m [WARNING] [0m Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
[2024-05-03 19:54:16,467] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-05-03 19:54:16,476] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-05-03 19:54:16,480] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[93m [WARNING] [0m async_io requires the dev libaio .so object and headers but these were not found.
[93m [WARNING] [0m async_io requires the dev libaio .so object and headers but these were not found.
[93m [WARNING] [0m async_io requires the dev libaio .so object and headers but these were not found.
[93m [WARNING] [0m async_io: please install the libaio-dev package with apt
[93m [WARNING] [0m If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS environment variables to where it can be found.
[93m [WARNING] [0m Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
[93m [WARNING] [0m async_io: please install the libaio-dev package with apt
[93m [WARNING] [0m If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS environment variables to where it can be found.
[93m [WARNING] [0m Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
[93m [WARNING] [0m async_io: please install the libaio-dev package with apt
[93m [WARNING] [0m If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS environment variables to where it can be found.
[93m [WARNING] [0m Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.2
[93m [WARNING] [0m using untested triton version (2.2.0), only 1.0.0 is known to be compatible
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.2
[93m [WARNING] [0m using untested triton version (2.2.0), only 1.0.0 is known to be compatible
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.2
[93m [WARNING] [0m using untested triton version (2.2.0), only 1.0.0 is known to be compatible
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.2
[93m [WARNING] [0m using untested triton version (2.2.0), only 1.0.0 is known to be compatible
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[2024-05-03 19:54:17,077] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-05-03 19:54:17,149] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-05-03 19:54:17,157] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-05-03 19:54:17,237] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-05-03 19:54:17,237] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
[2024-05-03 19:54:18,742] [INFO] [partition_parameters.py:345:__exit__] finished initializing model - num_params = 291, num_elems = 7.24B
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.89it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.79it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.73it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:00<00:00,  2.30it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:00<00:00,  2.25it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:00<00:00,  2.16it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:02,  1.45s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.56it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.73it/s]
Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.56it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.73it/s]
Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.54it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.70it/s]
Loading checkpoint shards:  67%|██████▋   | 2/3 [00:02<00:01,  1.18s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.06s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.12s/it]
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s][2024-05-03 19:54:22,450] [INFO] [partition_parameters.py:345:__exit__] finished initializing model - num_params = 582, num_elems = 14.48B
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.16it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.10it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  2.03it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:00<00:00,  1.99it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.98it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:01<00:00,  1.94it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:02,  1.49s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.48it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.59it/s]
Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.47it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.59it/s]
Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.46it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:01<00:00,  1.57it/s]
max_length: 600
max_length: 600
max_length: 600
Loading checkpoint shards:  67%|██████▋   | 2/3 [00:02<00:01,  1.20s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.07s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:03<00:00,  1.14s/it]
max_length: 600
DatasetDict({
    train_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19766
    })
    test_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 994
    })
    train_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19958
    })
    test_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
    train_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19996
    })
    test_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
})
DatasetDict({
    train_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19766
    })
    test_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 994
    })
    train_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19958
    })
    test_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
    train_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19996
    })
    test_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
})
DatasetDict({
    train_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19766
    })
    test_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 994
    })
    train_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19958
    })
    test_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
    train_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19996
    })
    test_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
})
Map (num_proc=96):   0%|          | 0/19766 [00:00<?, ? examples/s]Map (num_proc=96):   1%|          | 149/19766 [00:00<00:16, 1168.24 examples/s]Map (num_proc=96):   1%|▏         | 289/19766 [00:00<00:15, 1272.89 examples/s]Map (num_proc=96):  41%|████▏     | 8199/19766 [00:00<00:00, 33450.73 examples/s]Map (num_proc=96):  70%|███████   | 13901/19766 [00:00<00:00, 26521.27 examples/s]Map (num_proc=96):   0%|          | 0/19766 [00:00<?, ? examples/s]Map (num_proc=96):  86%|████████▌ | 16904/19766 [00:00<00:00, 18811.07 examples/s]Map (num_proc=96):   0%|          | 0/19766 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 1/19766 [00:00<35:56,  9.16 examples/s]Map (num_proc=96):   0%|          | 29/19766 [00:00<01:13, 266.80 examples/s]Map (num_proc=96): 100%|██████████| 19766/19766 [00:01<00:00, 18774.54 examples/s]
Map (num_proc=96):   5%|▌         | 1038/19766 [00:00<00:03, 5750.67 examples/s]DatasetDict({
    train_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19766
    })
    test_iteration_1: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 994
    })
    train_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19958
    })
    test_iteration_2: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
    train_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 19996
    })
    test_iteration_3: Dataset({
        features: ['prompt_id', 'prompt', 'chosen', 'rejected', 'all_generated_responses', 'all_rm_scores'],
        num_rows: 1000
    })
})
Map (num_proc=96):  29%|██▉       | 5792/19766 [00:00<00:00, 23412.37 examples/s]Map (num_proc=96):   6%|▌         | 1206/19766 [00:00<00:03, 6112.88 examples/s]Map (num_proc=96):  14%|█▍        | 2724/19766 [00:00<00:01, 9832.24 examples/s]Map (num_proc=96):  41%|████▏     | 8172/19766 [00:00<00:00, 19325.50 examples/s]Map (num_proc=96):  40%|████      | 7932/19766 [00:00<00:00, 22596.97 examples/s]Map (num_proc=96):  79%|███████▉  | 15615/19766 [00:00<00:00, 23899.76 examples/s]Map (num_proc=96):   0%|          | 0/994 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 0/19766 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 75/19766 [00:00<00:32, 612.19 examples/s]Map (num_proc=96):  75%|███████▌  | 14854/19766 [00:01<00:00, 9134.27 examples/s]Map (num_proc=96):   1%|          | 11/994 [00:00<00:25, 38.72 examples/s]Map (num_proc=96):   1%|          | 170/19766 [00:00<00:24, 788.15 examples/s]Map (num_proc=96):  94%|█████████▍| 934/994 [00:00<00:00, 3099.65 examples/s]Map (num_proc=96):  33%|███▎      | 6518/19766 [00:00<00:00, 23390.38 examples/s]Map (num_proc=96):  83%|████████▎ | 16411/19766 [00:01<00:00, 8811.55 examples/s]Map (num_proc=96):  91%|█████████ | 17890/19766 [00:01<00:00, 9395.42 examples/s] Map (num_proc=96): 100%|█████████▉| 19708/19766 [00:01<00:00, 8838.09 examples/s]Map (num_proc=96): 100%|██████████| 19766/19766 [00:01<00:00, 10044.36 examples/s]
Map (num_proc=96): 100%|██████████| 994/994 [00:00<00:00, 1241.92 examples/s]
Map (num_proc=96): 100%|██████████| 19766/19766 [00:01<00:00, 10113.95 examples/s]
Map (num_proc=96):   0%|          | 0/994 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 0/994 [00:00<?, ? examples/s]Map (num_proc=96):  53%|█████▎    | 10380/19766 [00:01<00:01, 4817.69 examples/s]Map (num_proc=96):   1%|          | 11/994 [00:00<00:12, 80.71 examples/s]Map (num_proc=96):   0%|          | 1/994 [00:00<01:52,  8.82 examples/s]Map (num_proc=96):   0%|          | 0/19958 [00:00<?, ? examples/s]Map (num_proc=96):  21%|██        | 208/994 [00:00<00:00, 1020.07 examples/s]Map (num_proc=96):   0%|          | 1/19958 [00:00<36:26,  9.13 examples/s]Map (num_proc=96):   7%|▋         | 1485/19958 [00:00<00:02, 8280.10 examples/s]Map (num_proc=96):  66%|██████▌   | 13007/19766 [00:02<00:01, 5639.82 examples/s]Map (num_proc=96):  39%|███▊      | 383/994 [00:00<00:00, 997.05 examples/s] Map (num_proc=96):   2%|▏         | 24/994 [00:00<00:13, 70.25 examples/s]Map (num_proc=96):  57%|█████▋    | 564/994 [00:00<00:00, 1231.97 examples/s]Map (num_proc=96):  25%|██▌       | 253/994 [00:00<00:01, 727.09 examples/s]Map (num_proc=96):  92%|█████████▏| 18114/19766 [00:02<00:00, 9129.00 examples/s]Map (num_proc=96):  39%|███▉      | 7778/19958 [00:00<00:00, 12438.13 examples/s]Map (num_proc=96):  37%|███▋      | 367/994 [00:01<00:02, 305.03 examples/s]Map (num_proc=96):  71%|███████   | 704/994 [00:01<00:00, 450.48 examples/s] Map (num_proc=96):  61%|██████▏   | 611/994 [00:01<00:00, 585.08 examples/s]Map (num_proc=96): 100%|██████████| 994/994 [00:01<00:00, 768.15 examples/s]Map (num_proc=96): 100%|██████████| 19766/19766 [00:03<00:00, 6306.12 examples/s]
Map (num_proc=96):  84%|████████▎ | 831/994 [00:01<00:00, 834.26 examples/s]Map (num_proc=96): 100%|██████████| 994/994 [00:01<00:00, 690.29 examples/s]
Map (num_proc=96):  85%|████████▍ | 16964/19958 [00:01<00:00, 12716.87 examples/s]Map (num_proc=96): 100%|██████████| 994/994 [00:01<00:00, 638.02 examples/s]
Map (num_proc=96):  91%|█████████▏| 18234/19958 [00:02<00:00, 7830.27 examples/s] Map (num_proc=96): 100%|██████████| 19958/19958 [00:02<00:00, 9158.42 examples/s]
Map (num_proc=96):   0%|          | 0/994 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 0/19958 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 50/19958 [00:00<00:43, 454.80 examples/s]Map (num_proc=96):   3%|▎         | 33/994 [00:00<00:03, 263.31 examples/s]Map (num_proc=96):   7%|▋         | 1399/19958 [00:00<00:02, 7771.88 examples/s]Map (num_proc=96):  10%|▉         | 99/994 [00:00<00:01, 468.59 examples/s]Map (num_proc=96):  40%|███▉      | 393/994 [00:00<00:00, 1517.55 examples/s]Map (num_proc=96):  30%|███       | 5991/19958 [00:00<00:00, 24195.95 examples/s]Map (num_proc=96):  65%|██████▍   | 644/994 [00:00<00:00, 1889.60 examples/s]Map (num_proc=96):  43%|████▎     | 8501/19958 [00:00<00:00, 23741.62 examples/s]Map (num_proc=96):   0%|          | 0/19958 [00:00<?, ? examples/s]Map (num_proc=96):  97%|█████████▋| 964/994 [00:00<00:00, 2343.80 examples/s]Map (num_proc=96):  59%|█████▉    | 11743/19958 [00:00<00:00, 26746.68 examples/s]Map (num_proc=96):   1%|          | 144/19958 [00:00<00:14, 1382.11 examples/s]Map (num_proc=96): 100%|██████████| 994/994 [00:00<00:00, 1608.32 examples/s]
Map (num_proc=96):  99%|█████████▉| 19729/19958 [00:00<00:00, 44238.92 examples/s]Map (num_proc=96):   4%|▍         | 896/19958 [00:00<00:04, 4709.72 examples/s]Map (num_proc=96):  38%|███▊      | 7493/19958 [00:00<00:00, 31491.66 examples/s]Map (num_proc=96): 100%|██████████| 19958/19958 [00:01<00:00, 18701.11 examples/s]
Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<01:53,  8.79 examples/s]Map (num_proc=96):   5%|▌         | 51/1000 [00:00<00:05, 160.31 examples/s]Map (num_proc=96):  22%|██▏       | 220/1000 [00:00<00:01, 634.20 examples/s]Map (num_proc=96):  54%|█████▍    | 10805/19958 [00:01<00:01, 8103.04 examples/s]Map (num_proc=96):  51%|█████     | 508/1000 [00:00<00:00, 1321.06 examples/s]Map (num_proc=96):  99%|█████████▉| 19813/19958 [00:01<00:00, 18039.57 examples/s]Map (num_proc=96):   0%|          | 0/19958 [00:00<?, ? examples/s]Map (num_proc=96):  82%|████████▏ | 819/1000 [00:00<00:00, 1858.65 examples/s]Map (num_proc=96):   2%|▏         | 310/19958 [00:00<00:06, 3079.35 examples/s]Map (num_proc=96): 100%|██████████| 19958/19958 [00:01<00:00, 13273.49 examples/s]
Map (num_proc=96): 100%|██████████| 1000/1000 [00:00<00:00, 1267.68 examples/s]
Map (num_proc=96):   8%|▊         | 1631/19958 [00:00<00:02, 7365.06 examples/s]Map (num_proc=96):  29%|██▉       | 5779/19958 [00:00<00:00, 21076.41 examples/s]Map (num_proc=96):  42%|████▏     | 8443/19958 [00:00<00:00, 23087.87 examples/s]Map (num_proc=96):  60%|█████▉    | 11900/19958 [00:00<00:00, 26625.38 examples/s]Map (num_proc=96):  85%|████████▌ | 17033/19958 [00:00<00:00, 34475.61 examples/s]Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96): 100%|██████████| 19958/19958 [00:00<00:00, 26234.59 examples/s]
Map (num_proc=96):   1%|          | 11/1000 [00:00<00:14, 69.59 examples/s]Map (num_proc=96):  13%|█▎        | 128/1000 [00:00<00:01, 590.71 examples/s]Map (num_proc=96):  23%|██▎       | 231/1000 [00:00<00:01, 767.74 examples/s]Map (num_proc=96):  42%|████▏     | 421/1000 [00:00<00:00, 1178.01 examples/s]Map (num_proc=96):  75%|███████▌  | 750/1000 [00:00<00:00, 1893.49 examples/s]Map (num_proc=96):   0%|          | 0/19996 [00:00<?, ? examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:00<00:00, 1454.90 examples/s]
Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 19/19996 [00:00<01:52, 177.71 examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<01:58,  8.46 examples/s]Map (num_proc=96):  10%|▉         | 1960/19996 [00:00<00:01, 11076.73 examples/s]Map (num_proc=96):   3%|▎         | 29/1000 [00:00<00:06, 156.49 examples/s]Map (num_proc=96):  24%|██▍       | 4838/19996 [00:00<00:00, 18588.25 examples/s]Map (num_proc=96):  26%|██▋       | 264/1000 [00:00<00:00, 1086.26 examples/s]Map (num_proc=96):  34%|███▍      | 6775/19996 [00:00<00:00, 18534.69 examples/s]Map (num_proc=96):  55%|█████▌    | 550/1000 [00:00<00:00, 1747.90 examples/s]Map (num_proc=96):  48%|████▊     | 9682/19996 [00:00<00:00, 21901.44 examples/s]Map (num_proc=96):  79%|███████▉  | 794/1000 [00:00<00:00, 1949.67 examples/s]Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):  99%|█████████▉| 992/1000 [00:00<00:00, 1014.61 examples/s]Map (num_proc=96):   0%|          | 0/19996 [00:00<?, ? examples/s]Map (num_proc=96):  84%|████████▍ | 16839/19996 [00:01<00:00, 15882.07 examples/s]Map (num_proc=96):   1%|          | 11/1000 [00:00<00:14, 68.92 examples/s]Map (num_proc=96):   0%|          | 84/19996 [00:00<00:41, 479.38 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:01<00:00, 829.59 examples/s]
Map (num_proc=96):   7%|▋         | 66/1000 [00:00<00:03, 286.41 examples/s]Map (num_proc=96):  10%|█         | 2003/19996 [00:00<00:02, 8817.87 examples/s]Map (num_proc=96): 100%|██████████| 19996/19996 [00:01<00:00, 14348.32 examples/s]
Map (num_proc=96):  15%|█▌        | 154/1000 [00:00<00:01, 491.53 examples/s]Map (num_proc=96):  16%|█▌        | 3140/19996 [00:00<00:01, 9114.51 examples/s]Map (num_proc=96):  41%|████      | 407/1000 [00:00<00:00, 1186.68 examples/s]Map (num_proc=96):  35%|███▌      | 7097/19996 [00:00<00:00, 18603.21 examples/s]Map (num_proc=96):  62%|██████▏   | 623/1000 [00:00<00:00, 1505.02 examples/s]Map (num_proc=96):   0%|          | 0/19996 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 75/19996 [00:00<00:30, 658.91 examples/s]Map (num_proc=96):  19%|█▊        | 3721/19996 [00:00<00:00, 20564.31 examples/s]Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<01:44,  9.59 examples/s]Map (num_proc=96):  60%|██████    | 12001/19996 [00:01<00:01, 5719.86 examples/s]Map (num_proc=96):   3%|▎         | 31/1000 [00:00<00:10, 88.15 examples/s]Map (num_proc=96):  79%|███████▉  | 790/1000 [00:01<00:00, 315.60 examples/s] Map (num_proc=96):  25%|██▌       | 253/1000 [00:00<00:01, 686.65 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:02<00:00, 484.63 examples/s]
Map (num_proc=96):  57%|█████▋    | 567/1000 [00:00<00:00, 765.71 examples/s]Map (num_proc=96):  86%|████████▋ | 865/1000 [00:00<00:00, 1165.05 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:01<00:00, 911.66 examples/s]
Map (num_proc=96):  38%|███▊      | 7538/19996 [00:01<00:03, 4130.80 examples/s] Map (num_proc=96):  68%|██████▊   | 13515/19996 [00:02<00:01, 3660.75 examples/s]Map (num_proc=96):   0%|          | 0/19996 [00:00<?, ? examples/s]Map (num_proc=96):  81%|████████  | 16179/19996 [00:03<00:01, 3575.74 examples/s]Map (num_proc=96):  45%|████▍     | 8949/19996 [00:02<00:03, 2991.92 examples/s]Map (num_proc=96):   1%|          | 209/19996 [00:00<00:09, 2025.65 examples/s]Map (num_proc=96):  91%|█████████▏| 18269/19996 [00:03<00:00, 4424.81 examples/s]Map (num_proc=96):   8%|▊         | 1580/19996 [00:00<00:02, 8403.65 examples/s]Map (num_proc=96): 100%|██████████| 19996/19996 [00:03<00:00, 5084.87 examples/s]
Map (num_proc=96):  75%|███████▌  | 15092/19996 [00:02<00:00, 6460.09 examples/s]Map (num_proc=96):  12%|█▏        | 2486/19996 [00:00<00:02, 8108.30 examples/s]Map (num_proc=96):  44%|████▍     | 8870/19996 [00:00<00:00, 27930.49 examples/s]Map (num_proc=96): 100%|██████████| 19996/19996 [00:02<00:00, 6763.08 examples/s]
Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<02:43,  6.13 examples/s]Map (num_proc=96):  67%|██████▋   | 13316/19996 [00:01<00:00, 7557.86 examples/s]Map (num_proc=96):  11%|█         | 110/1000 [00:00<00:01, 492.52 examples/s]Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):  37%|███▋      | 373/1000 [00:00<00:00, 1316.53 examples/s]Map (num_proc=96):  77%|███████▋  | 15345/19996 [00:01<00:00, 7406.50 examples/s]Map (num_proc=96):  53%|█████▎    | 529/1000 [00:00<00:00, 1170.30 examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<03:54,  4.26 examples/s]Map (num_proc=96):  85%|████████▍ | 16951/19996 [00:01<00:00, 8298.19 examples/s]Map (num_proc=96):  67%|██████▋   | 669/1000 [00:00<00:00, 1198.42 examples/s]Map (num_proc=96):  19%|█▉        | 190/1000 [00:00<00:01, 714.58 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:00<00:00, 1284.84 examples/s]
Map (num_proc=96):  34%|███▍      | 338/1000 [00:00<00:00, 904.27 examples/s]Map (num_proc=96): 100%|██████████| 19996/19996 [00:02<00:00, 9182.02 examples/s]
Map (num_proc=96):  46%|████▌     | 455/1000 [00:00<00:00, 909.57 examples/s]Map (num_proc=96):  57%|█████▋    | 570/1000 [00:00<00:00, 975.94 examples/s]Map (num_proc=96):  99%|█████████▉| 990/1000 [00:00<00:00, 1913.88 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:00<00:00, 1139.94 examples/s]
Map (num_proc=96):   0%|          | 0/1000 [00:00<?, ? examples/s]Map (num_proc=96):   0%|          | 1/1000 [00:00<02:09,  7.72 examples/s]Map (num_proc=96):   2%|▏         | 20/1000 [00:00<00:09, 102.88 examples/s]Map (num_proc=96):  26%|██▌       | 259/1000 [00:00<00:00, 1079.62 examples/s]Map (num_proc=96):  55%|█████▍    | 549/1000 [00:00<00:00, 1767.40 examples/s]Map (num_proc=96):  86%|████████▌ | 860/1000 [00:00<00:00, 2181.95 examples/s]Map (num_proc=96): 100%|██████████| 1000/1000 [00:00<00:00, 1566.12 examples/s]
Parameter 'function'=<bound method DPOTrainer.tokenize_row of <trl.trainer.dpo_trainer.DPOTrainer object at 0x7f2868584a60>> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Map:   0%|          | 0/19996 [00:00<?, ? examples/s]Map:   0%|          | 21/19996 [00:00<01:49, 183.13 examples/s]Map:   0%|          | 49/19996 [00:00<01:25, 234.35 examples/s]Map:   0%|          | 73/19996 [00:00<01:24, 235.16 examples/s]Map:   1%|          | 101/19996 [00:00<01:22, 241.69 examples/s]Map:   1%|          | 132/19996 [00:00<01:16, 259.14 examples/s]Map:   1%|          | 161/19996 [00:00<01:15, 262.29 examples/s]Map:   1%|          | 188/19996 [00:00<01:16, 259.23 examples/s]Map:   1%|          | 217/19996 [00:00<01:15, 261.19 examples/s]Map:   1%|          | 244/19996 [00:00<01:17, 254.93 examples/s]Map:   1%|▏         | 275/19996 [00:01<01:14, 263.74 examples/s]Map:   2%|▏         | 305/19996 [00:01<01:12, 271.89 examples/s]Map:   2%|▏         | 333/19996 [00:01<01:12, 272.77 examples/s]Map:   2%|▏         | 362/19996 [00:01<01:12, 271.57 examples/s]Map:   2%|▏         | 392/19996 [00:01<01:12, 269.17 examples/s]Map:   2%|▏         | 435/19996 [00:01<01:11, 273.44 examples/s]Map:   2%|▏         | 471/19996 [00:01<01:15, 258.50 examples/s]Map:   3%|▎         | 510/19996 [00:01<01:16, 253.55 examples/s]Map:   3%|▎         | 537/19996 [00:02<01:17, 252.16 examples/s]Map:   3%|▎         | 565/19996 [00:02<01:15, 257.56 examples/s]Map:   3%|▎         | 603/19996 [00:02<01:16, 255.17 examples/s]Map:   3%|▎         | 636/19996 [00:02<01:12, 267.47 examples/s]Map:   3%|▎         | 665/19996 [00:02<01:11, 272.07 examples/s]Map:   4%|▎         | 707/19996 [00:02<01:11, 270.12 examples/s]Map:   4%|▎         | 736/19996 [00:02<01:11, 271.16 examples/s]Map:   4%|▍         | 766/19996 [00:02<01:10, 274.46 examples/s]Map:   4%|▍         | 801/19996 [00:03<01:05, 292.38 examples/s]Map:   4%|▍         | 845/19996 [00:03<01:06, 287.30 examples/s]Map:   4%|▍         | 884/19996 [00:03<01:09, 274.37 examples/s]Map:   5%|▍         | 912/19996 [00:03<01:09, 274.54 examples/s]Map:   5%|▍         | 941/19996 [00:03<01:09, 275.91 examples/s]Map:   5%|▍         | 973/19996 [00:03<01:07, 281.84 examples/s]Map:   5%|▌         | 1011/19996 [00:04<01:57, 161.02 examples/s]Map:   5%|▌         | 1040/19996 [00:04<01:44, 181.16 examples/s]Map:   5%|▌         | 1066/19996 [00:04<01:37, 193.71 examples/s]Map:   5%|▌         | 1095/19996 [00:04<01:29, 211.92 examples/s]Map:   6%|▌         | 1129/19996 [00:04<01:28, 212.62 examples/s]Map:   6%|▌         | 1155/19996 [00:04<01:24, 222.26 examples/s]Map:   6%|▌         | 1191/19996 [00:04<01:14, 252.19 examples/s]Map:   6%|▌         | 1227/19996 [00:04<01:17, 243.05 examples/s]Map:   6%|▋         | 1254/19996 [00:05<01:16, 244.17 examples/s]Map:   6%|▋         | 1281/19996 [00:05<01:15, 247.98 examples/s]Map:   7%|▋         | 1310/19996 [00:05<01:13, 254.68 examples/s]Map:   7%|▋         | 1340/19996 [00:05<01:10, 263.80 examples/s]Map:   7%|▋         | 1382/19996 [00:05<01:10, 264.23 examples/s]Map:   7%|▋         | 1411/19996 [00:05<01:09, 267.79 examples/s]Map:   7%|▋         | 1439/19996 [00:05<01:09, 268.02 examples/s]Map:   7%|▋         | 1469/19996 [00:05<01:07, 274.65 examples/s]Map:   7%|▋         | 1498/19996 [00:05<01:07, 273.68 examples/s]Map:   8%|▊         | 1540/19996 [00:06<01:07, 271.92 examples/s]Map:   8%|▊         | 1580/19996 [00:06<01:08, 268.42 examples/s]Map:   8%|▊         | 1610/19996 [00:06<01:07, 272.13 examples/s]Map:   8%|▊         | 1646/19996 [00:06<01:03, 291.01 examples/s]Map:   8%|▊         | 1681/19996 [00:06<01:09, 264.17 examples/s]Map:   9%|▊         | 1709/19996 [00:06<01:08, 267.33 examples/s]Map:   9%|▊         | 1740/19996 [00:06<01:06, 275.74 examples/s]Map:   9%|▉         | 1770/19996 [00:06<01:06, 275.46 examples/s]Map:   9%|▉         | 1809/19996 [00:07<01:07, 267.81 examples/s]Map:   9%|▉         | 1843/19996 [00:07<01:13, 247.73 examples/s]Map:   9%|▉         | 1875/19996 [00:07<01:09, 262.06 examples/s]Map:  10%|▉         | 1908/19996 [00:07<01:06, 273.93 examples/s]Map:  10%|▉         | 1950/19996 [00:07<01:06, 269.39 examples/s]Map:  10%|▉         | 1981/19996 [00:07<01:05, 276.80 examples/s]Map:  10%|█         | 2013/19996 [00:08<01:52, 160.21 examples/s]Map:  10%|█         | 2041/19996 [00:08<01:40, 179.12 examples/s]Map:  10%|█         | 2078/19996 [00:08<01:31, 196.28 examples/s]Map:  11%|█         | 2104/19996 [00:08<01:26, 206.52 examples/s]Map:  11%|█         | 2132/19996 [00:08<01:20, 221.28 examples/s]Map:  11%|█         | 2167/19996 [00:08<01:20, 222.56 examples/s]Map:  11%|█         | 2201/19996 [00:08<01:21, 219.41 examples/s]Map:  11%|█         | 2227/19996 [00:09<01:19, 224.01 examples/s]Map:  11%|█▏        | 2255/19996 [00:09<01:15, 235.71 examples/s]Map:  11%|█▏        | 2280/19996 [00:09<01:14, 237.23 examples/s]Map:  12%|█▏        | 2308/19996 [00:09<01:12, 245.07 examples/s]Map:  12%|█▏        | 2341/19996 [00:09<01:16, 231.55 examples/s]Map:  12%|█▏        | 2366/19996 [00:09<01:15, 234.83 examples/s]Map:  12%|█▏        | 2399/19996 [00:09<01:08, 256.66 examples/s]Map:  12%|█▏        | 2430/19996 [00:09<01:05, 267.19 examples/s]Map:  12%|█▏        | 2469/19996 [00:09<01:06, 263.04 examples/s]Map:  13%|█▎        | 2510/19996 [00:10<01:06, 262.98 examples/s]Map:  13%|█▎        | 2549/19996 [00:10<01:07, 260.25 examples/s]Map:  13%|█▎        | 2578/19996 [00:10<01:06, 262.68 examples/s]Map:  13%|█▎        | 2606/19996 [00:10<01:05, 264.16 examples/s]Map:  13%|█▎        | 2634/19996 [00:10<01:05, 263.82 examples/s]Map:  13%|█▎        | 2661/19996 [00:10<01:05, 263.42 examples/s]Map:  13%|█▎        | 2690/19996 [00:10<01:04, 268.32 examples/s]Map:  14%|█▎        | 2719/19996 [00:10<01:03, 270.39 examples/s]Map:  14%|█▎        | 2747/19996 [00:10<01:03, 272.37 examples/s]Map:  14%|█▍        | 2776/19996 [00:11<01:02, 274.60 examples/s]Map:  14%|█▍        | 2809/19996 [00:11<01:00, 282.70 examples/s]Map:  14%|█▍        | 2838/19996 [00:11<01:00, 283.88 examples/s]Map:  14%|█▍        | 2879/19996 [00:11<01:02, 273.71 examples/s]Map:  15%|█▍        | 2915/19996 [00:11<01:46, 160.79 examples/s]Map:  15%|█▍        | 2940/19996 [00:11<01:37, 175.66 examples/s]Map:  15%|█▍        | 2968/19996 [00:12<01:27, 194.88 examples/s]Map:  15%|█▌        | 3000/19996 [00:12<02:04, 136.53 examples/s]Map:  15%|█▌        | 3020/19996 [00:12<01:57, 144.29 examples/s]Map:  15%|█▌        | 3046/19996 [00:12<01:43, 163.55 examples/s]Map:  15%|█▌        | 3072/19996 [00:12<01:33, 180.92 examples/s]Map:  15%|█▌        | 3099/19996 [00:12<01:24, 200.12 examples/s]Map:  16%|█▌        | 3130/19996 [00:13<01:15, 222.04 examples/s]Map:  16%|█▌        | 3155/19996 [00:13<01:14, 226.95 examples/s]Map:  16%|█▌        | 3193/19996 [00:13<01:11, 235.01 examples/s]Map:  16%|█▌        | 3224/19996 [00:13<01:06, 252.49 examples/s]Map:  16%|█▋        | 3261/19996 [00:13<01:09, 239.51 examples/s]Map:  16%|█▋        | 3298/19996 [00:13<01:10, 238.13 examples/s]Map:  17%|█▋        | 3329/19996 [00:13<01:06, 251.17 examples/s]Map:  17%|█▋        | 3355/19996 [00:13<01:08, 244.08 examples/s]Map:  17%|█▋        | 3381/19996 [00:14<01:07, 246.63 examples/s]Map:  17%|█▋        | 3419/19996 [00:14<01:16, 215.49 examples/s]Map:  17%|█▋        | 3448/19996 [00:14<01:20, 205.94 examples/s]Map:  17%|█▋        | 3470/19996 [00:14<01:20, 205.34 examples/s]Map:  17%|█▋        | 3495/19996 [00:14<01:17, 212.30 examples/s]Map:  18%|█▊        | 3517/19996 [00:14<01:17, 213.58 examples/s]Map:  18%|█▊        | 3544/19996 [00:14<01:13, 223.69 examples/s]Map:  18%|█▊        | 3579/19996 [00:14<01:15, 216.39 examples/s]Map:  18%|█▊        | 3602/19996 [00:15<01:15, 216.51 examples/s]Map:  18%|█▊        | 3631/19996 [00:15<01:09, 234.04 examples/s]Map:  18%|█▊        | 3660/19996 [00:15<01:15, 216.58 examples/s]Map:  18%|█▊        | 3683/19996 [00:15<01:15, 217.00 examples/s]Map:  19%|█▊        | 3710/19996 [00:15<01:11, 227.37 examples/s]Map:  19%|█▊        | 3738/19996 [00:15<01:08, 238.79 examples/s]Map:  19%|█▉        | 3763/19996 [00:15<01:07, 239.70 examples/s]Map:  19%|█▉        | 3800/19996 [00:15<01:08, 236.90 examples/s]Map:  19%|█▉        | 3825/19996 [00:16<01:08, 234.88 examples/s]Map:  19%|█▉        | 3851/19996 [00:16<01:07, 240.43 examples/s]Map:  19%|█▉        | 3876/19996 [00:16<01:07, 240.17 examples/s]Map:  20%|█▉        | 3901/19996 [00:16<01:07, 239.37 examples/s]Map:  20%|█▉        | 3939/19996 [00:16<01:07, 238.32 examples/s]Map:  20%|█▉        | 3970/19996 [00:16<01:04, 249.23 examples/s]Map:  20%|██        | 4000/19996 [00:17<01:55, 138.51 examples/s]Map:  20%|██        | 4027/19996 [00:17<01:50, 145.16 examples/s]Map:  20%|██        | 4053/19996 [00:17<01:47, 148.54 examples/s]Map:  20%|██        | 4074/19996 [00:17<01:51, 142.19 examples/s]Map:  21%|██        | 4100/19996 [00:17<01:38, 161.98 examples/s]Map:  21%|██        | 4120/19996 [00:17<01:34, 167.65 examples/s]Map:  21%|██        | 4145/19996 [00:17<01:37, 163.04 examples/s]Map:  21%|██        | 4169/19996 [00:18<01:41, 156.50 examples/s]Map:  21%|██        | 4186/19996 [00:18<01:42, 154.20 examples/s]Map:  21%|██        | 4204/19996 [00:18<01:42, 154.61 examples/s]Map:  21%|██        | 4227/19996 [00:18<01:32, 170.61 examples/s]Map:  21%|██        | 4247/19996 [00:18<01:29, 175.41 examples/s]Map:  21%|██▏       | 4268/19996 [00:18<01:26, 181.22 examples/s]Map:  21%|██▏       | 4290/19996 [00:18<01:23, 189.19 examples/s]Map:  22%|██▏       | 4316/19996 [00:18<01:15, 206.63 examples/s]Map:  22%|██▏       | 4344/19996 [00:18<01:10, 222.59 examples/s]Map:  22%|██▏       | 4368/19996 [00:19<01:09, 223.80 examples/s]Map:  22%|██▏       | 4393/19996 [00:19<01:10, 222.59 examples/s]Map:  22%|██▏       | 4417/19996 [00:19<01:10, 221.35 examples/s]Map:  22%|██▏       | 4442/19996 [00:19<01:08, 225.78 examples/s]Map:  22%|██▏       | 4467/19996 [00:19<01:07, 230.57 examples/s]Map:  22%|██▏       | 4492/19996 [00:19<01:07, 230.82 examples/s]Map:  23%|██▎       | 4517/19996 [00:19<01:06, 232.06 examples/s]Map:  23%|██▎       | 4553/19996 [00:19<01:07, 230.44 examples/s]Map:  23%|██▎       | 4585/19996 [00:20<01:08, 223.64 examples/s]Map:  23%|██▎       | 4609/19996 [00:20<01:07, 226.54 examples/s]Map:  23%|██▎       | 4633/19996 [00:20<01:07, 228.85 examples/s]Map:  23%|██▎       | 4658/19996 [00:20<01:06, 232.35 examples/s]Map:  23%|██▎       | 4687/19996 [00:20<01:04, 238.48 examples/s]Map:  24%|██▎       | 4720/19996 [00:20<01:07, 226.29 examples/s]Map:  24%|██▍       | 4756/19996 [00:20<01:07, 227.08 examples/s]Map:  24%|██▍       | 4788/19996 [00:20<01:01, 246.94 examples/s]Map:  24%|██▍       | 4814/19996 [00:20<01:01, 245.39 examples/s]Map:  24%|██▍       | 4847/19996 [00:21<00:57, 264.18 examples/s]Map:  24%|██▍       | 4884/19996 [00:21<00:58, 256.40 examples/s]Map:  25%|██▍       | 4916/19996 [00:21<00:55, 271.01 examples/s]Map:  25%|██▍       | 4951/19996 [00:21<00:59, 252.43 examples/s]Map:  25%|██▍       | 4978/19996 [00:21<00:59, 254.38 examples/s]Map:  25%|██▌       | 5012/19996 [00:22<01:39, 150.66 examples/s]Map:  25%|██▌       | 5033/19996 [00:22<01:35, 156.67 examples/s]Map:  25%|██▌       | 5058/19996 [00:22<01:26, 173.28 examples/s]Map:  25%|██▌       | 5081/19996 [00:22<01:21, 183.85 examples/s]Map:  26%|██▌       | 5103/19996 [00:22<01:17, 190.97 examples/s]Map:  26%|██▌       | 5127/19996 [00:22<01:14, 198.70 examples/s]Map:  26%|██▌       | 5155/19996 [00:22<01:16, 193.03 examples/s]Map:  26%|██▌       | 5182/19996 [00:22<01:11, 207.51 examples/s]Map:  26%|██▌       | 5215/19996 [00:22<01:11, 207.53 examples/s]Map:  26%|██▌       | 5237/19996 [00:23<01:11, 207.05 examples/s]Map:  26%|██▋       | 5261/19996 [00:23<01:09, 211.30 examples/s]Map:  26%|██▋       | 5295/19996 [00:23<01:09, 210.69 examples/s]Map:  27%|██▋       | 5321/19996 [00:23<01:06, 221.88 examples/s]Map:  27%|██▋       | 5351/19996 [00:23<01:02, 234.66 examples/s]Map:  27%|██▋       | 5377/19996 [00:23<01:01, 239.62 examples/s]Map:  27%|██▋       | 5404/19996 [00:23<00:59, 246.59 examples/s]Map:  27%|██▋       | 5440/19996 [00:23<01:00, 239.45 examples/s]Map:  27%|██▋       | 5471/19996 [00:24<01:04, 225.24 examples/s]Map:  28%|██▊       | 5500/19996 [00:24<01:00, 238.18 examples/s]Map:  28%|██▊       | 5529/19996 [00:24<01:07, 215.46 examples/s]Map:  28%|██▊       | 5557/19996 [00:24<01:02, 229.33 examples/s]Map:  28%|██▊       | 5582/19996 [00:24<01:02, 232.38 examples/s]Map:  28%|██▊       | 5607/19996 [00:24<01:02, 230.52 examples/s]Map:  28%|██▊       | 5634/19996 [00:24<00:59, 240.72 examples/s]Map:  28%|██▊       | 5662/19996 [00:24<00:58, 243.72 examples/s]Map:  28%|██▊       | 5691/19996 [00:25<00:57, 249.86 examples/s]Map:  29%|██▊       | 5724/19996 [00:25<01:00, 234.39 examples/s]Map:  29%|██▉       | 5760/19996 [00:25<01:02, 226.05 examples/s]Map:  29%|██▉       | 5790/19996 [00:25<00:58, 242.02 examples/s]Map:  29%|██▉       | 5815/19996 [00:25<01:00, 236.32 examples/s]Map:  29%|██▉       | 5843/19996 [00:25<00:58, 241.92 examples/s]Map:  29%|██▉       | 5868/19996 [00:25<00:58, 240.36 examples/s]Map:  30%|██▉       | 5904/19996 [00:25<00:59, 237.23 examples/s]Map:  30%|██▉       | 5936/19996 [00:26<00:54, 256.14 examples/s]Map:  30%|██▉       | 5973/19996 [00:26<00:56, 246.46 examples/s]Map:  30%|███       | 6000/19996 [00:26<01:36, 145.08 examples/s]Map:  30%|███       | 6022/19996 [00:26<01:29, 155.89 examples/s]Map:  30%|███       | 6049/19996 [00:26<01:28, 157.89 examples/s]Map:  30%|███       | 6075/19996 [00:26<01:19, 175.93 examples/s]Map:  31%|███       | 6099/19996 [00:27<01:13, 187.94 examples/s]Map:  31%|███       | 6122/19996 [00:27<01:10, 196.20 examples/s]Map:  31%|███       | 6144/19996 [00:27<01:10, 197.54 examples/s]Map:  31%|███       | 6178/19996 [00:27<01:07, 205.39 examples/s]Map:  31%|███       | 6201/19996 [00:27<01:06, 208.52 examples/s]Map:  31%|███       | 6224/19996 [00:27<01:05, 211.03 examples/s]Map:  31%|███▏      | 6249/19996 [00:27<01:03, 217.66 examples/s]Map:  31%|███▏      | 6276/19996 [00:27<00:59, 230.24 examples/s]Map:  32%|███▏      | 6301/19996 [00:27<00:58, 234.19 examples/s]Map:  32%|███▏      | 6327/19996 [00:28<00:57, 239.63 examples/s]Map:  32%|███▏      | 6357/19996 [00:28<01:01, 221.56 examples/s]Map:  32%|███▏      | 6387/19996 [00:28<01:06, 204.52 examples/s]Map:  32%|███▏      | 6424/19996 [00:28<01:03, 214.09 examples/s]Map:  32%|███▏      | 6451/19996 [00:28<00:59, 225.82 examples/s]Map:  32%|███▏      | 6482/19996 [00:28<01:03, 212.47 examples/s]Map:  33%|███▎      | 6511/19996 [00:28<01:06, 201.81 examples/s]Map:  33%|███▎      | 6539/19996 [00:29<01:09, 193.74 examples/s]Map:  33%|███▎      | 6562/19996 [00:29<01:08, 195.65 examples/s]Map:  33%|███▎      | 6587/19996 [00:29<01:04, 207.30 examples/s]Map:  33%|███▎      | 6612/19996 [00:29<01:02, 213.55 examples/s]Map:  33%|███▎      | 6637/19996 [00:29<01:00, 219.62 examples/s]Map:  33%|███▎      | 6660/19996 [00:29<01:02, 213.10 examples/s]Map:  33%|███▎      | 6690/19996 [00:29<00:56, 235.56 examples/s]Map:  34%|███▎      | 6715/19996 [00:29<00:57, 229.37 examples/s]Map:  34%|███▎      | 6744/19996 [00:30<00:54, 241.95 examples/s]Map:  34%|███▍      | 6776/19996 [00:30<00:58, 224.66 examples/s]Map:  34%|███▍      | 6802/19996 [00:30<00:58, 226.65 examples/s]Map:  34%|███▍      | 6831/19996 [00:30<00:55, 238.81 examples/s]Map:  34%|███▍      | 6860/19996 [00:30<01:00, 215.35 examples/s]Map:  34%|███▍      | 6885/19996 [00:30<00:59, 220.36 examples/s]Map:  35%|███▍      | 6909/19996 [00:30<00:58, 223.53 examples/s]Map:  35%|███▍      | 6932/19996 [00:30<00:59, 219.18 examples/s]Map:  35%|███▍      | 6957/19996 [00:30<00:57, 226.13 examples/s]Map:  35%|███▍      | 6981/19996 [00:31<00:56, 228.67 examples/s]Map:  35%|███▌      | 7010/19996 [00:31<01:43, 125.50 examples/s]Map:  35%|███▌      | 7036/19996 [00:31<01:28, 146.18 examples/s]Map:  35%|███▌      | 7059/19996 [00:31<01:19, 161.92 examples/s]Map:  35%|███▌      | 7090/19996 [00:31<01:14, 173.33 examples/s]Map:  36%|███▌      | 7111/19996 [00:31<01:11, 179.45 examples/s]Map:  36%|███▌      | 7137/19996 [00:32<01:06, 193.79 examples/s]Map:  36%|███▌      | 7168/19996 [00:32<01:08, 188.60 examples/s]Map:  36%|███▌      | 7191/19996 [00:32<01:06, 191.15 examples/s]Map:  36%|███▌      | 7218/19996 [00:32<01:02, 205.89 examples/s]Map:  36%|███▌      | 7241/19996 [00:32<01:01, 208.15 examples/s]Map:  36%|███▋      | 7268/19996 [00:32<00:57, 222.53 examples/s]Map:  36%|███▋      | 7295/19996 [00:32<00:54, 231.09 examples/s]Map:  37%|███▋      | 7323/19996 [00:32<00:52, 240.76 examples/s]Map:  37%|███▋      | 7351/19996 [00:33<00:51, 245.95 examples/s]Map:  37%|███▋      | 7392/19996 [00:33<00:51, 243.40 examples/s]Map:  37%|███▋      | 7429/19996 [00:33<00:51, 242.93 examples/s]Map:  37%|███▋      | 7459/19996 [00:33<00:55, 226.31 examples/s]Map:  37%|███▋      | 7484/19996 [00:33<00:54, 228.43 examples/s]Map:  38%|███▊      | 7512/19996 [00:33<00:52, 237.40 examples/s]Map:  38%|███▊      | 7541/19996 [00:33<00:50, 248.68 examples/s]Map:  38%|███▊      | 7580/19996 [00:33<00:50, 246.87 examples/s]Map:  38%|███▊      | 7605/19996 [00:34<00:50, 243.20 examples/s]Map:  38%|███▊      | 7641/19996 [00:34<00:51, 238.83 examples/s]Map:  38%|███▊      | 7666/19996 [00:34<00:51, 239.52 examples/s]Map:  39%|███▊      | 7703/19996 [00:34<00:51, 238.16 examples/s]Map:  39%|███▊      | 7739/19996 [00:34<00:53, 229.96 examples/s]Map:  39%|███▉      | 7774/19996 [00:34<00:53, 228.39 examples/s]Map:  39%|███▉      | 7802/19996 [00:34<00:50, 239.44 examples/s]Map:  39%|███▉      | 7827/19996 [00:35<00:50, 239.50 examples/s]Map:  39%|███▉      | 7865/19996 [00:35<00:50, 241.90 examples/s]Map:  39%|███▉      | 7892/19996 [00:35<00:48, 247.92 examples/s]Map:  40%|███▉      | 7930/19996 [00:35<00:49, 245.39 examples/s]Map:  40%|███▉      | 7962/19996 [00:35<00:51, 233.39 examples/s]Map:  40%|███▉      | 7988/19996 [00:35<00:50, 235.66 examples/s]Map:  40%|████      | 8023/19996 [00:36<01:29, 133.44 examples/s]Map:  40%|████      | 8045/19996 [00:36<01:24, 141.93 examples/s]Map:  40%|████      | 8069/19996 [00:36<01:15, 158.89 examples/s]Map:  40%|████      | 8091/19996 [00:36<01:09, 170.43 examples/s]Map:  41%|████      | 8116/19996 [00:36<01:03, 186.50 examples/s]Map:  41%|████      | 8140/19996 [00:36<01:00, 196.87 examples/s]Map:  41%|████      | 8175/19996 [00:36<00:57, 205.29 examples/s]Map:  41%|████      | 8202/19996 [00:37<01:02, 189.81 examples/s]Map:  41%|████      | 8228/19996 [00:37<01:04, 182.25 examples/s]Map:  41%|████▏     | 8251/19996 [00:37<01:02, 187.95 examples/s]Map:  41%|████▏     | 8274/19996 [00:37<01:07, 173.56 examples/s]Map:  41%|████▏     | 8297/19996 [00:37<01:03, 184.35 examples/s]Map:  42%|████▏     | 8322/19996 [00:37<00:58, 198.25 examples/s]Map:  42%|████▏     | 8348/19996 [00:37<00:55, 210.99 examples/s]Map:  42%|████▏     | 8371/19996 [00:37<00:54, 215.06 examples/s]Map:  42%|████▏     | 8397/19996 [00:38<00:52, 222.51 examples/s]Map:  42%|████▏     | 8421/19996 [00:38<00:51, 225.52 examples/s]Map:  42%|████▏     | 8445/19996 [00:38<00:50, 227.14 examples/s]Map:  42%|████▏     | 8479/19996 [00:38<00:51, 222.23 examples/s]Map:  43%|████▎     | 8505/19996 [00:38<00:56, 202.38 examples/s]Map:  43%|████▎     | 8530/19996 [00:38<00:54, 211.53 examples/s]Map:  43%|████▎     | 8556/19996 [00:38<00:51, 222.07 examples/s]Map:  43%|████▎     | 8589/19996 [00:38<00:52, 216.48 examples/s]Map:  43%|████▎     | 8613/19996 [00:39<00:51, 219.64 examples/s]Map:  43%|████▎     | 8639/19996 [00:39<00:50, 225.75 examples/s]Map:  43%|████▎     | 8664/19996 [00:39<00:49, 229.92 examples/s]Map:  43%|████▎     | 8690/19996 [00:39<00:49, 228.79 examples/s]Map:  44%|████▎     | 8715/19996 [00:39<00:48, 233.01 examples/s]Map:  44%|████▎     | 8743/19996 [00:39<00:46, 243.15 examples/s]Map:  44%|████▍     | 8771/19996 [00:39<00:51, 219.12 examples/s]Map:  44%|████▍     | 8805/19996 [00:39<00:50, 219.68 examples/s]Map:  44%|████▍     | 8833/19996 [00:39<00:48, 232.45 examples/s]Map:  44%|████▍     | 8864/19996 [00:40<00:44, 250.15 examples/s]Map:  44%|████▍     | 8896/19996 [00:40<00:41, 264.55 examples/s]Map:  45%|████▍     | 8933/19996 [00:40<00:43, 255.21 examples/s]Map:  45%|████▍     | 8960/19996 [00:40<00:42, 257.18 examples/s]Map:  45%|████▍     | 8995/19996 [00:40<00:44, 244.76 examples/s]Map:  45%|████▌     | 9030/19996 [00:41<01:19, 138.06 examples/s]Map:  45%|████▌     | 9060/19996 [00:41<01:13, 149.77 examples/s]Map:  45%|████▌     | 9086/19996 [00:41<01:05, 167.83 examples/s]Map:  46%|████▌     | 9110/19996 [00:41<01:01, 177.54 examples/s]Map:  46%|████▌     | 9136/19996 [00:41<01:02, 172.44 examples/s]Map:  46%|████▌     | 9166/19996 [00:41<01:01, 176.77 examples/s]Map:  46%|████▌     | 9189/19996 [00:41<00:58, 184.05 examples/s]Map:  46%|████▌     | 9212/19996 [00:41<00:56, 192.26 examples/s]Map:  46%|████▌     | 9237/19996 [00:42<00:53, 200.55 examples/s]Map:  46%|████▋     | 9261/19996 [00:42<00:51, 209.18 examples/s]Map:  46%|████▋     | 9291/19996 [00:42<00:53, 201.87 examples/s]Map:  47%|████▋     | 9315/19996 [00:42<00:51, 207.83 examples/s]Map:  47%|████▋     | 9341/19996 [00:42<00:48, 219.38 examples/s]Map:  47%|████▋     | 9366/19996 [00:42<00:47, 225.12 examples/s]Map:  47%|████▋     | 9390/19996 [00:42<00:47, 223.52 examples/s]Map:  47%|████▋     | 9414/19996 [00:42<00:47, 224.87 examples/s]Map:  47%|████▋     | 9438/19996 [00:42<00:47, 224.07 examples/s]Map:  47%|████▋     | 9462/19996 [00:43<00:47, 220.61 examples/s]Map:  47%|████▋     | 9489/19996 [00:43<00:45, 229.43 examples/s]Map:  48%|████▊     | 9521/19996 [00:43<00:48, 216.76 examples/s]Map:  48%|████▊     | 9547/19996 [00:43<00:46, 225.56 examples/s]Map:  48%|████▊     | 9582/19996 [00:43<00:47, 221.54 examples/s]Map:  48%|████▊     | 9607/19996 [00:43<00:47, 217.11 examples/s]Map:  48%|████▊     | 9630/19996 [00:43<00:48, 214.42 examples/s]Map:  48%|████▊     | 9660/19996 [00:43<00:44, 230.10 examples/s]Map:  48%|████▊     | 9685/19996 [00:44<00:44, 234.03 examples/s]Map:  49%|████▊     | 9710/19996 [00:44<00:43, 233.93 examples/s]Map:  49%|████▊     | 9742/19996 [00:44<00:45, 225.10 examples/s]Map:  49%|████▉     | 9772/19996 [00:44<00:41, 243.97 examples/s]Map:  49%|████▉     | 9799/19996 [00:44<00:47, 212.74 examples/s]Map:  49%|████▉     | 9823/19996 [00:44<00:47, 214.11 examples/s]Map:  49%|████▉     | 9860/19996 [00:44<00:46, 219.85 examples/s]Map:  49%|████▉     | 9886/19996 [00:44<00:44, 227.07 examples/s]Map:  50%|████▉     | 9916/19996 [00:45<00:42, 236.48 examples/s]Map:  50%|████▉     | 9942/19996 [00:45<00:42, 238.58 examples/s]Map:  50%|████▉     | 9976/19996 [00:45<00:43, 230.56 examples/s]Map:  50%|█████     | 10000/19996 [00:45<01:13, 136.47 examples/s]Map:  50%|█████     | 10023/19996 [00:45<01:12, 137.24 examples/s]Map:  50%|█████     | 10043/19996 [00:46<01:07, 147.86 examples/s]Map:  50%|█████     | 10071/19996 [00:46<01:03, 155.31 examples/s]Map:  50%|█████     | 10093/19996 [00:46<00:58, 168.00 examples/s]Map:  51%|█████     | 10115/19996 [00:46<00:55, 178.00 examples/s]Map:  51%|█████     | 10138/19996 [00:46<00:51, 190.26 examples/s]Map:  51%|█████     | 10160/19996 [00:46<00:50, 195.25 examples/s]Map:  51%|█████     | 10194/19996 [00:46<00:48, 202.34 examples/s]Map:  51%|█████     | 10218/19996 [00:46<00:47, 204.88 examples/s]Map:  51%|█████     | 10243/19996 [00:46<00:45, 214.90 examples/s]Map:  51%|█████▏    | 10278/19996 [00:47<00:45, 214.69 examples/s]Map:  52%|█████▏    | 10307/19996 [00:47<00:42, 228.68 examples/s]Map:  52%|█████▏    | 10332/19996 [00:47<00:41, 230.48 examples/s]Map:  52%|█████▏    | 10365/19996 [00:47<00:43, 219.49 examples/s]Map:  52%|█████▏    | 10392/19996 [00:47<00:42, 228.60 examples/s]Map:  52%|█████▏    | 10422/19996 [00:47<00:39, 243.01 examples/s]Map:  52%|█████▏    | 10459/19996 [00:47<00:39, 241.14 examples/s]Map:  52%|█████▏    | 10485/19996 [00:47<00:39, 242.50 examples/s]Map:  53%|█████▎    | 10514/19996 [00:48<00:37, 253.53 examples/s]Map:  53%|█████▎    | 10553/19996 [00:48<00:37, 252.87 examples/s]Map:  53%|█████▎    | 10588/19996 [00:48<00:38, 242.27 examples/s]Map:  53%|█████▎    | 10621/19996 [00:48<00:40, 231.52 examples/s]Map:  53%|█████▎    | 10654/19996 [00:48<00:41, 224.20 examples/s]Map:  53%|█████▎    | 10682/19996 [00:48<00:39, 234.41 examples/s]Map:  54%|█████▎    | 10714/19996 [00:48<00:42, 219.71 examples/s]Map:  54%|█████▎    | 10739/19996 [00:49<00:41, 223.90 examples/s]Map:  54%|█████▍    | 10763/19996 [00:49<00:40, 225.84 examples/s]Map:  54%|█████▍    | 10789/19996 [00:49<00:39, 230.41 examples/s]Map:  54%|█████▍    | 10814/19996 [00:49<00:39, 233.69 examples/s]Map:  54%|█████▍    | 10846/19996 [00:49<00:41, 221.03 examples/s]Map:  54%|█████▍    | 10872/19996 [00:49<00:40, 226.96 examples/s]Map:  54%|█████▍    | 10896/19996 [00:49<00:41, 220.21 examples/s]Map:  55%|█████▍    | 10930/19996 [00:49<00:42, 212.82 examples/s]Map:  55%|█████▍    | 10955/19996 [00:50<00:42, 213.11 examples/s]Map:  55%|█████▍    | 10978/19996 [00:50<00:43, 209.61 examples/s]Map:  55%|█████▌    | 11000/19996 [00:50<01:15, 119.36 examples/s]Map:  55%|█████▌    | 11019/19996 [00:50<01:08, 130.30 examples/s]Map:  55%|█████▌    | 11040/19996 [00:50<01:03, 141.76 examples/s]Map:  55%|█████▌    | 11064/19996 [00:50<00:55, 160.66 examples/s]Map:  55%|█████▌    | 11093/19996 [00:51<00:47, 186.89 examples/s]Map:  56%|█████▌    | 11129/19996 [00:51<00:44, 198.48 examples/s]Map:  56%|█████▌    | 11154/19996 [00:51<00:42, 206.75 examples/s]Map:  56%|█████▌    | 11186/19996 [00:51<00:42, 204.92 examples/s]Map:  56%|█████▌    | 11217/19996 [00:51<00:43, 204.04 examples/s]Map:  56%|█████▌    | 11242/19996 [00:51<00:41, 213.08 examples/s]Map:  56%|█████▋    | 11276/19996 [00:51<00:41, 211.08 examples/s]Map:  57%|█████▋    | 11303/19996 [00:51<00:39, 217.68 examples/s]Map:  57%|█████▋    | 11339/19996 [00:52<00:38, 223.23 examples/s]Map:  57%|█████▋    | 11369/19996 [00:52<00:40, 213.93 examples/s]Map:  57%|█████▋    | 11391/19996 [00:52<00:41, 209.37 examples/s]Map:  57%|█████▋    | 11422/19996 [00:52<00:42, 201.95 examples/s]Map:  57%|█████▋    | 11447/19996 [00:52<00:40, 211.48 examples/s]Map:  57%|█████▋    | 11475/19996 [00:52<00:43, 196.54 examples/s]Map:  58%|█████▊    | 11498/19996 [00:52<00:42, 201.13 examples/s]Map:  58%|█████▊    | 11521/19996 [00:53<00:41, 204.04 examples/s]Map:  58%|█████▊    | 11544/19996 [00:53<00:40, 208.19 examples/s]Map:  58%|█████▊    | 11566/19996 [00:53<00:40, 209.44 examples/s]Map:  58%|█████▊    | 11592/19996 [00:53<00:38, 219.48 examples/s]Map:  58%|█████▊    | 11617/19996 [00:53<00:38, 217.06 examples/s]Map:  58%|█████▊    | 11645/19996 [00:53<00:36, 231.81 examples/s]Map:  58%|█████▊    | 11673/19996 [00:53<00:34, 241.50 examples/s]Map:  59%|█████▊    | 11707/19996 [00:53<00:35, 233.54 examples/s]Map:  59%|█████▊    | 11735/19996 [00:53<00:34, 237.18 examples/s]Map:  59%|█████▉    | 11761/19996 [00:54<00:34, 240.29 examples/s]Map:  59%|█████▉    | 11790/19996 [00:54<00:37, 221.50 examples/s]Map:  59%|█████▉    | 11825/19996 [00:54<00:36, 222.74 examples/s]Map:  59%|█████▉    | 11851/19996 [00:54<00:35, 229.62 examples/s]Map:  59%|█████▉    | 11876/19996 [00:54<00:35, 229.04 examples/s]Map:  60%|█████▉    | 11911/19996 [00:54<00:35, 226.71 examples/s]Map:  60%|█████▉    | 11941/19996 [00:54<00:37, 216.56 examples/s]Map:  60%|█████▉    | 11964/19996 [00:55<00:37, 216.90 examples/s]Map:  60%|█████▉    | 11992/19996 [00:55<00:35, 228.17 examples/s]Map:  60%|██████    | 12025/19996 [00:55<01:07, 118.34 examples/s]Map:  60%|██████    | 12049/19996 [00:55<00:58, 135.73 examples/s]Map:  60%|██████    | 12073/19996 [00:55<00:56, 140.37 examples/s]Map:  61%|██████    | 12099/19996 [00:56<00:55, 142.90 examples/s]Map:  61%|██████    | 12126/19996 [00:56<00:47, 165.43 examples/s]Map:  61%|██████    | 12149/19996 [00:56<00:44, 178.28 examples/s]Map:  61%|██████    | 12171/19996 [00:56<00:42, 184.20 examples/s]Map:  61%|██████    | 12193/19996 [00:56<00:41, 187.86 examples/s]Map:  61%|██████    | 12223/19996 [00:56<00:41, 189.29 examples/s]Map:  61%|██████    | 12243/19996 [00:56<00:40, 191.01 examples/s]Map:  61%|██████▏   | 12265/19996 [00:56<00:39, 194.20 examples/s]Map:  61%|██████▏   | 12288/19996 [00:56<00:38, 198.52 examples/s]Map:  62%|██████▏   | 12310/19996 [00:57<00:37, 202.36 examples/s]Map:  62%|██████▏   | 12342/19996 [00:57<00:32, 234.26 examples/s]Map:  62%|██████▏   | 12368/19996 [00:57<00:32, 231.43 examples/s]Map:  62%|██████▏   | 12394/19996 [00:57<00:32, 235.14 examples/s]Map:  62%|██████▏   | 12423/19996 [00:57<00:35, 213.27 examples/s]Map:  62%|██████▏   | 12458/19996 [00:57<00:35, 213.44 examples/s]Map:  62%|██████▏   | 12483/19996 [00:57<00:34, 220.29 examples/s]Map:  63%|██████▎   | 12510/19996 [00:57<00:32, 227.72 examples/s]Map:  63%|██████▎   | 12534/19996 [00:58<00:33, 222.46 examples/s]Map:  63%|██████▎   | 12563/19996 [00:58<00:31, 238.36 examples/s]Map:  63%|██████▎   | 12592/19996 [00:58<00:34, 216.18 examples/s]Map:  63%|██████▎   | 12622/19996 [00:58<00:35, 205.87 examples/s]Map:  63%|██████▎   | 12645/19996 [00:58<00:35, 207.68 examples/s]Map:  63%|██████▎   | 12669/19996 [00:58<00:34, 213.79 examples/s]Map:  63%|██████▎   | 12696/19996 [00:58<00:32, 225.20 examples/s]Map:  64%|██████▎   | 12721/19996 [00:58<00:31, 227.57 examples/s]Map:  64%|██████▍   | 12750/19996 [00:59<00:29, 241.54 examples/s]Map:  64%|██████▍   | 12777/19996 [00:59<00:29, 247.09 examples/s]Map:  64%|██████▍   | 12804/19996 [00:59<00:28, 251.63 examples/s]Map:  64%|██████▍   | 12833/19996 [00:59<00:28, 250.34 examples/s]Map:  64%|██████▍   | 12860/19996 [00:59<00:28, 254.47 examples/s]Map:  64%|██████▍   | 12897/19996 [00:59<00:29, 241.90 examples/s]Map:  65%|██████▍   | 12931/19996 [00:59<00:30, 230.96 examples/s]Map:  65%|██████▍   | 12956/19996 [00:59<00:30, 233.72 examples/s]Map:  65%|██████▍   | 12990/19996 [01:00<00:31, 223.15 examples/s]Map:  65%|██████▌   | 13020/19996 [01:00<00:55, 124.59 examples/s]Map:  65%|██████▌   | 13042/19996 [01:00<00:50, 137.36 examples/s]Map:  65%|██████▌   | 13064/19996 [01:00<00:45, 151.01 examples/s]Map:  66%|██████▌   | 13098/19996 [01:00<00:40, 169.75 examples/s]Map:  66%|██████▌   | 13125/19996 [01:01<00:51, 133.63 examples/s]Map:  66%|██████▌   | 13149/19996 [01:01<00:45, 149.36 examples/s]Map:  66%|██████▌   | 13171/19996 [01:01<00:42, 162.19 examples/s]Map:  66%|██████▌   | 13193/19996 [01:01<00:39, 173.24 examples/s]Map:  66%|██████▌   | 13216/19996 [01:01<00:36, 183.51 examples/s]Map:  66%|██████▌   | 13243/19996 [01:01<00:33, 201.31 examples/s]Map:  66%|██████▋   | 13277/19996 [01:01<00:33, 200.17 examples/s]Map:  67%|██████▋   | 13301/19996 [01:02<00:32, 205.09 examples/s]Map:  67%|██████▋   | 13327/19996 [01:02<00:31, 214.41 examples/s]Map:  67%|██████▋   | 13354/19996 [01:02<00:29, 222.53 examples/s]Map:  67%|██████▋   | 13380/19996 [01:02<00:28, 231.18 examples/s]Map:  67%|██████▋   | 13415/19996 [01:02<00:28, 227.48 examples/s]Map:  67%|██████▋   | 13447/19996 [01:02<00:30, 218.25 examples/s]Map:  67%|██████▋   | 13470/19996 [01:02<00:30, 217.23 examples/s]Map:  68%|██████▊   | 13498/19996 [01:02<00:28, 227.97 examples/s]Map:  68%|██████▊   | 13529/19996 [01:03<00:29, 220.01 examples/s]Map:  68%|██████▊   | 13563/19996 [01:03<00:29, 215.36 examples/s]Map:  68%|██████▊   | 13589/19996 [01:03<00:29, 218.19 examples/s]Map:  68%|██████▊   | 13613/19996 [01:03<00:28, 222.33 examples/s]Map:  68%|██████▊   | 13636/19996 [01:03<00:28, 222.16 examples/s]Map:  68%|██████▊   | 13666/19996 [01:03<00:26, 237.82 examples/s]Map:  69%|██████▊   | 13698/19996 [01:03<00:24, 256.14 examples/s]Map:  69%|██████▊   | 13729/19996 [01:03<00:26, 232.57 examples/s]Map:  69%|██████▉   | 13754/19996 [01:03<00:26, 235.89 examples/s]Map:  69%|██████▉   | 13785/19996 [01:04<00:24, 253.45 examples/s]Map:  69%|██████▉   | 13824/19996 [01:04<00:24, 253.03 examples/s]Map:  69%|██████▉   | 13851/19996 [01:04<00:24, 253.06 examples/s]Map:  69%|██████▉   | 13878/19996 [01:04<00:24, 254.20 examples/s]Map:  70%|██████▉   | 13907/19996 [01:04<00:23, 257.37 examples/s]Map:  70%|██████▉   | 13944/19996 [01:04<00:24, 247.67 examples/s]Map:  70%|██████▉   | 13971/19996 [01:04<00:23, 252.31 examples/s]Map:  70%|███████   | 14000/19996 [01:05<00:42, 140.77 examples/s]Map:  70%|███████   | 14028/19996 [01:05<00:43, 138.12 examples/s]Map:  70%|███████   | 14057/19996 [01:05<00:40, 146.64 examples/s]Map:  70%|███████   | 14080/19996 [01:05<00:36, 160.50 examples/s]Map:  71%|███████   | 14109/19996 [01:05<00:34, 168.22 examples/s]Map:  71%|███████   | 14138/19996 [01:06<00:30, 190.77 examples/s]Map:  71%|███████   | 14161/19996 [01:06<00:33, 173.22 examples/s]Map:  71%|███████   | 14188/19996 [01:06<00:33, 172.13 examples/s]Map:  71%|███████   | 14212/19996 [01:06<00:31, 182.54 examples/s]Map:  71%|███████   | 14238/19996 [01:06<00:30, 190.79 examples/s]Map:  71%|███████▏  | 14263/19996 [01:06<00:28, 202.64 examples/s]Map:  71%|███████▏  | 14293/19996 [01:06<00:28, 199.69 examples/s]Map:  72%|███████▏  | 14318/19996 [01:06<00:27, 205.38 examples/s]Map:  72%|███████▏  | 14345/19996 [01:07<00:25, 218.49 examples/s]Map:  72%|███████▏  | 14374/19996 [01:07<00:27, 202.43 examples/s]Map:  72%|███████▏  | 14398/19996 [01:07<00:26, 208.73 examples/s]Map:  72%|███████▏  | 14422/19996 [01:07<00:26, 209.73 examples/s]Map:  72%|███████▏  | 14445/19996 [01:07<00:26, 206.34 examples/s]Map:  72%|███████▏  | 14472/19996 [01:07<00:25, 219.27 examples/s]Map:  73%|███████▎  | 14509/19996 [01:07<00:24, 223.85 examples/s]Map:  73%|███████▎  | 14533/19996 [01:07<00:24, 221.68 examples/s]Map:  73%|███████▎  | 14559/19996 [01:08<00:23, 228.60 examples/s]Map:  73%|███████▎  | 14592/19996 [01:08<00:24, 218.92 examples/s]Map:  73%|███████▎  | 14627/19996 [01:08<00:24, 220.84 examples/s]Map:  73%|███████▎  | 14654/19996 [01:08<00:23, 230.37 examples/s]Map:  73%|███████▎  | 14681/19996 [01:08<00:23, 228.17 examples/s]Map:  74%|███████▎  | 14707/19996 [01:08<00:22, 234.29 examples/s]Map:  74%|███████▎  | 14737/19996 [01:08<00:23, 219.32 examples/s]Map:  74%|███████▍  | 14763/19996 [01:08<00:23, 226.15 examples/s]Map:  74%|███████▍  | 14800/19996 [01:09<00:22, 228.14 examples/s]Map:  74%|███████▍  | 14831/19996 [01:09<00:21, 244.20 examples/s]Map:  74%|███████▍  | 14859/19996 [01:09<00:20, 250.49 examples/s]Map:  74%|███████▍  | 14885/19996 [01:09<00:20, 247.56 examples/s]Map:  75%|███████▍  | 14922/19996 [01:09<00:21, 241.35 examples/s]Map:  75%|███████▍  | 14951/19996 [01:09<00:20, 247.28 examples/s]Map:  75%|███████▍  | 14986/19996 [01:09<00:20, 238.73 examples/s]Map:  75%|███████▌  | 15011/19996 [01:10<00:36, 137.24 examples/s]Map:  75%|███████▌  | 15035/19996 [01:10<00:32, 151.48 examples/s]Map:  75%|███████▌  | 15065/19996 [01:10<00:30, 159.92 examples/s]Map:  76%|███████▌  | 15098/19996 [01:10<00:28, 174.91 examples/s]Map:  76%|███████▌  | 15120/19996 [01:10<00:26, 182.83 examples/s]Map:  76%|███████▌  | 15149/19996 [01:10<00:26, 183.99 examples/s]Map:  76%|███████▌  | 15173/19996 [01:11<00:27, 172.72 examples/s]Map:  76%|███████▌  | 15196/19996 [01:11<00:26, 183.42 examples/s]Map:  76%|███████▌  | 15221/19996 [01:11<00:24, 197.48 examples/s]Map:  76%|███████▋  | 15247/19996 [01:11<00:22, 210.07 examples/s]Map:  76%|███████▋  | 15278/19996 [01:11<00:23, 203.98 examples/s]Map:  77%|███████▋  | 15300/19996 [01:11<00:22, 204.89 examples/s]Map:  77%|███████▋  | 15325/19996 [01:11<00:22, 211.22 examples/s]Map:  77%|███████▋  | 15349/19996 [01:11<00:21, 215.52 examples/s]Map:  77%|███████▋  | 15375/19996 [01:12<00:20, 225.43 examples/s]Map:  77%|███████▋  | 15404/19996 [01:12<00:19, 230.01 examples/s]Map:  77%|███████▋  | 15429/19996 [01:12<00:19, 230.94 examples/s]Map:  77%|███████▋  | 15458/19996 [01:12<00:18, 242.85 examples/s]Map:  77%|███████▋  | 15485/19996 [01:12<00:18, 246.01 examples/s]Map:  78%|███████▊  | 15511/19996 [01:12<00:18, 244.12 examples/s]Map:  78%|███████▊  | 15540/19996 [01:12<00:20, 222.54 examples/s]Map:  78%|███████▊  | 15565/19996 [01:12<00:19, 225.76 examples/s]Map:  78%|███████▊  | 15592/19996 [01:12<00:19, 229.52 examples/s]Map:  78%|███████▊  | 15629/19996 [01:13<00:19, 226.72 examples/s]Map:  78%|███████▊  | 15660/19996 [01:13<00:20, 213.45 examples/s]Map:  78%|███████▊  | 15685/19996 [01:13<00:19, 217.37 examples/s]Map:  79%|███████▊  | 15711/19996 [01:13<00:18, 225.76 examples/s]Map:  79%|███████▊  | 15744/19996 [01:13<00:19, 215.89 examples/s]Map:  79%|███████▉  | 15769/19996 [01:13<00:19, 214.43 examples/s]Map:  79%|███████▉  | 15792/19996 [01:13<00:20, 208.16 examples/s]Map:  79%|███████▉  | 15825/19996 [01:13<00:17, 236.57 examples/s]Map:  79%|███████▉  | 15857/19996 [01:14<00:16, 254.70 examples/s]Map:  79%|███████▉  | 15885/19996 [01:14<00:15, 257.93 examples/s]Map:  80%|███████▉  | 15917/19996 [01:14<00:17, 239.89 examples/s]Map:  80%|███████▉  | 15942/19996 [01:14<00:16, 238.50 examples/s]Map:  80%|███████▉  | 15968/19996 [01:14<00:16, 239.80 examples/s]Map:  80%|████████  | 16000/19996 [01:15<00:31, 126.76 examples/s]Map:  80%|████████  | 16019/19996 [01:15<00:29, 134.25 examples/s]Map:  80%|████████  | 16039/19996 [01:15<00:27, 143.12 examples/s]Map:  80%|████████  | 16064/19996 [01:15<00:24, 163.36 examples/s]Map:  80%|████████  | 16089/19996 [01:15<00:21, 178.00 examples/s]Map:  81%|████████  | 16119/19996 [01:15<00:21, 181.13 examples/s]Map:  81%|████████  | 16143/19996 [01:15<00:19, 193.64 examples/s]Map:  81%|████████  | 16172/19996 [01:15<00:20, 189.61 examples/s]Map:  81%|████████  | 16199/19996 [01:16<00:18, 204.78 examples/s]Map:  81%|████████  | 16222/19996 [01:16<00:18, 200.76 examples/s]Map:  81%|████████▏ | 16250/19996 [01:16<00:17, 209.67 examples/s]Map:  81%|████████▏ | 16274/19996 [01:16<00:17, 214.10 examples/s]Map:  82%|████████▏ | 16306/19996 [01:16<00:17, 205.09 examples/s]Map:  82%|████████▏ | 16329/19996 [01:16<00:17, 209.25 examples/s]Map:  82%|████████▏ | 16355/19996 [01:16<00:16, 217.05 examples/s]Map:  82%|████████▏ | 16383/19996 [01:16<00:17, 204.23 examples/s]Map:  82%|████████▏ | 16406/19996 [01:17<00:17, 208.43 examples/s]Map:  82%|████████▏ | 16440/19996 [01:17<00:16, 210.50 examples/s]Map:  82%|████████▏ | 16465/19996 [01:17<00:16, 213.72 examples/s]Map:  82%|████████▏ | 16491/19996 [01:17<00:17, 197.56 examples/s]Map:  83%|████████▎ | 16518/19996 [01:17<00:16, 211.22 examples/s]Map:  83%|████████▎ | 16548/19996 [01:17<00:16, 205.36 examples/s]Map:  83%|████████▎ | 16579/19996 [01:17<00:17, 198.53 examples/s]Map:  83%|████████▎ | 16604/19996 [01:17<00:16, 206.29 examples/s]Map:  83%|████████▎ | 16627/19996 [01:18<00:16, 209.28 examples/s]Map:  83%|████████▎ | 16654/19996 [01:18<00:15, 222.33 examples/s]Map:  83%|████████▎ | 16681/19996 [01:18<00:14, 223.66 examples/s]Map:  84%|████████▎ | 16708/19996 [01:18<00:14, 234.04 examples/s]Map:  84%|████████▎ | 16736/19996 [01:18<00:15, 214.34 examples/s]Map:  84%|████████▍ | 16762/19996 [01:18<00:14, 224.03 examples/s]Map:  84%|████████▍ | 16797/19996 [01:18<00:14, 225.22 examples/s]Map:  84%|████████▍ | 16827/19996 [01:18<00:13, 241.22 examples/s]Map:  84%|████████▍ | 16866/19996 [01:19<00:12, 245.92 examples/s]Map:  84%|████████▍ | 16893/19996 [01:19<00:12, 249.89 examples/s]Map:  85%|████████▍ | 16934/19996 [01:19<00:11, 256.78 examples/s]Map:  85%|████████▍ | 16967/19996 [01:19<00:12, 241.19 examples/s]Map:  85%|████████▍ | 16994/19996 [01:19<00:12, 245.93 examples/s]Map:  85%|████████▌ | 17025/19996 [01:20<00:21, 140.73 examples/s]Map:  85%|████████▌ | 17047/19996 [01:20<00:21, 136.31 examples/s]Map:  85%|████████▌ | 17066/19996 [01:20<00:22, 132.52 examples/s]Map:  85%|████████▌ | 17089/19996 [01:20<00:21, 133.83 examples/s]Map:  86%|████████▌ | 17109/19996 [01:20<00:19, 145.00 examples/s]Map:  86%|████████▌ | 17127/19996 [01:20<00:19, 149.14 examples/s]Map:  86%|████████▌ | 17152/19996 [01:20<00:16, 168.41 examples/s]Map:  86%|████████▌ | 17171/19996 [01:20<00:16, 171.94 examples/s]Map:  86%|████████▌ | 17193/19996 [01:21<00:15, 182.41 examples/s]Map:  86%|████████▌ | 17221/19996 [01:21<00:13, 201.26 examples/s]Map:  86%|████████▋ | 17247/19996 [01:21<00:12, 214.03 examples/s]Map:  86%|████████▋ | 17278/19996 [01:21<00:13, 207.50 examples/s]Map:  87%|████████▋ | 17307/19996 [01:21<00:13, 196.92 examples/s]Map:  87%|████████▋ | 17336/19996 [01:21<00:12, 215.11 examples/s]Map:  87%|████████▋ | 17370/19996 [01:21<00:12, 209.88 examples/s]Map:  87%|████████▋ | 17398/19996 [01:21<00:11, 222.52 examples/s]Map:  87%|████████▋ | 17434/19996 [01:22<00:11, 226.40 examples/s]Map:  87%|████████▋ | 17462/19996 [01:22<00:10, 236.11 examples/s]Map:  87%|████████▋ | 17488/19996 [01:22<00:10, 238.66 examples/s]Map:  88%|████████▊ | 17522/19996 [01:22<00:10, 226.04 examples/s]Map:  88%|████████▊ | 17557/19996 [01:22<00:10, 224.21 examples/s]Map:  88%|████████▊ | 17584/19996 [01:22<00:10, 228.65 examples/s]Map:  88%|████████▊ | 17608/19996 [01:22<00:10, 225.46 examples/s]Map:  88%|████████▊ | 17631/19996 [01:23<00:10, 224.29 examples/s]Map:  88%|████████▊ | 17666/19996 [01:23<00:10, 224.10 examples/s]Map:  89%|████████▊ | 17700/19996 [01:23<00:10, 221.76 examples/s]Map:  89%|████████▊ | 17726/19996 [01:23<00:09, 227.44 examples/s]Map:  89%|████████▉ | 17756/19996 [01:23<00:10, 212.05 examples/s]Map:  89%|████████▉ | 17787/19996 [01:23<00:10, 201.46 examples/s]Map:  89%|████████▉ | 17818/19996 [01:23<00:09, 223.64 examples/s]Map:  89%|████████▉ | 17848/19996 [01:23<00:08, 240.50 examples/s]Map:  89%|████████▉ | 17877/19996 [01:24<00:08, 248.91 examples/s]Map:  90%|████████▉ | 17903/19996 [01:24<00:08, 237.40 examples/s]Map:  90%|████████▉ | 17930/19996 [01:24<00:08, 243.11 examples/s]Map:  90%|████████▉ | 17963/19996 [01:24<00:08, 230.79 examples/s]Map:  90%|█████████ | 17997/19996 [01:24<00:08, 223.29 examples/s]Map:  90%|█████████ | 18020/19996 [01:25<00:15, 125.99 examples/s]Map:  90%|█████████ | 18039/19996 [01:25<00:14, 131.11 examples/s]Map:  90%|█████████ | 18062/19996 [01:25<00:13, 147.02 examples/s]Map:  90%|█████████ | 18086/19996 [01:25<00:12, 148.26 examples/s]Map:  91%|█████████ | 18116/19996 [01:25<00:11, 158.49 examples/s]Map:  91%|█████████ | 18143/19996 [01:25<00:10, 180.68 examples/s]Map:  91%|█████████ | 18170/19996 [01:25<00:09, 199.20 examples/s]Map:  91%|█████████ | 18195/19996 [01:25<00:08, 210.48 examples/s]Map:  91%|█████████ | 18226/19996 [01:26<00:08, 204.85 examples/s]Map:  91%|█████████▏| 18262/19996 [01:26<00:08, 211.88 examples/s]Map:  91%|█████████▏| 18285/19996 [01:26<00:07, 215.14 examples/s]Map:  92%|█████████▏| 18309/19996 [01:26<00:07, 213.75 examples/s]Map:  92%|█████████▏| 18333/19996 [01:26<00:07, 218.59 examples/s]Map:  92%|█████████▏| 18357/19996 [01:26<00:07, 222.29 examples/s]Map:  92%|█████████▏| 18382/19996 [01:26<00:07, 225.98 examples/s]Map:  92%|█████████▏| 18406/19996 [01:26<00:06, 227.46 examples/s]Map:  92%|█████████▏| 18430/19996 [01:26<00:06, 229.39 examples/s]Map:  92%|█████████▏| 18463/19996 [01:27<00:07, 215.30 examples/s]Map:  92%|█████████▏| 18492/19996 [01:27<00:07, 206.80 examples/s]Map:  93%|█████████▎| 18518/19996 [01:27<00:06, 217.09 examples/s]Map:  93%|█████████▎| 18544/19996 [01:27<00:06, 226.70 examples/s]Map:  93%|█████████▎| 18578/19996 [01:27<00:06, 221.44 examples/s]Map:  93%|█████████▎| 18615/19996 [01:27<00:06, 226.09 examples/s]Map:  93%|█████████▎| 18641/19996 [01:27<00:05, 230.66 examples/s]Map:  93%|█████████▎| 18673/19996 [01:28<00:05, 220.71 examples/s]Map:  94%|█████████▎| 18704/19996 [01:28<00:06, 212.06 examples/s]Map:  94%|█████████▎| 18737/19996 [01:28<00:06, 209.46 examples/s]Map:  94%|█████████▍| 18759/19996 [01:28<00:05, 206.81 examples/s]Map:  94%|█████████▍| 18791/19996 [01:28<00:05, 204.48 examples/s]Map:  94%|█████████▍| 18818/19996 [01:28<00:05, 215.41 examples/s]Map:  94%|█████████▍| 18840/19996 [01:28<00:05, 210.01 examples/s]Map:  94%|█████████▍| 18874/19996 [01:29<00:05, 209.46 examples/s]Map:  95%|█████████▍| 18904/19996 [01:29<00:05, 203.83 examples/s]Map:  95%|█████████▍| 18933/19996 [01:29<00:04, 223.18 examples/s]Map:  95%|█████████▍| 18956/19996 [01:29<00:04, 224.08 examples/s]Map:  95%|█████████▍| 18987/19996 [01:29<00:04, 215.53 examples/s]Map:  95%|█████████▌| 19020/19996 [01:30<00:07, 122.02 examples/s]Map:  95%|█████████▌| 19038/19996 [01:30<00:07, 124.47 examples/s]Map:  95%|█████████▌| 19064/19996 [01:30<00:07, 131.75 examples/s]Map:  95%|█████████▌| 19082/19996 [01:30<00:06, 139.67 examples/s]Map:  96%|█████████▌| 19107/19996 [01:30<00:06, 143.70 examples/s]Map:  96%|█████████▌| 19128/19996 [01:30<00:06, 139.48 examples/s]Map:  96%|█████████▌| 19148/19996 [01:30<00:06, 135.36 examples/s]Map:  96%|█████████▌| 19165/19996 [01:31<00:05, 141.82 examples/s]Map:  96%|█████████▌| 19185/19996 [01:31<00:05, 151.91 examples/s]Map:  96%|█████████▌| 19209/19996 [01:31<00:04, 172.59 examples/s]Map:  96%|█████████▌| 19234/19996 [01:31<00:04, 190.30 examples/s]Map:  96%|█████████▋| 19258/19996 [01:31<00:03, 200.32 examples/s]Map:  96%|█████████▋| 19280/19996 [01:31<00:03, 199.00 examples/s]Map:  97%|█████████▋| 19309/19996 [01:31<00:03, 218.01 examples/s]Map:  97%|█████████▋| 19333/19996 [01:31<00:03, 216.08 examples/s]Map:  97%|█████████▋| 19368/19996 [01:31<00:02, 211.99 examples/s]Map:  97%|█████████▋| 19391/19996 [01:32<00:02, 215.25 examples/s]Map:  97%|█████████▋| 19414/19996 [01:32<00:02, 215.65 examples/s]Map:  97%|█████████▋| 19447/19996 [01:32<00:02, 213.45 examples/s]Map:  97%|█████████▋| 19469/19996 [01:32<00:02, 212.10 examples/s]Map:  97%|█████████▋| 19492/19996 [01:32<00:02, 213.44 examples/s]Map:  98%|█████████▊| 19521/19996 [01:32<00:02, 233.09 examples/s]Map:  98%|█████████▊| 19547/19996 [01:32<00:01, 238.75 examples/s]Map:  98%|█████████▊| 19575/19996 [01:32<00:01, 216.20 examples/s]Map:  98%|█████████▊| 19602/19996 [01:33<00:01, 226.72 examples/s]Map:  98%|█████████▊| 19628/19996 [01:33<00:01, 234.84 examples/s]Map:  98%|█████████▊| 19659/19996 [01:33<00:01, 219.75 examples/s]Map:  98%|█████████▊| 19685/19996 [01:33<00:01, 227.80 examples/s]Map:  99%|█████████▊| 19723/19996 [01:33<00:01, 231.14 examples/s]Map:  99%|█████████▉| 19752/19996 [01:33<00:01, 242.81 examples/s]Map:  99%|█████████▉| 19781/19996 [01:33<00:00, 250.97 examples/s]Map:  99%|█████████▉| 19820/19996 [01:33<00:00, 251.32 examples/s]Map:  99%|█████████▉| 19850/19996 [01:34<00:00, 258.89 examples/s]Map:  99%|█████████▉| 19879/19996 [01:34<00:00, 258.03 examples/s]Map: 100%|█████████▉| 19907/19996 [01:34<00:00, 256.67 examples/s]Map: 100%|█████████▉| 19935/19996 [01:34<00:00, 256.51 examples/s]Map: 100%|█████████▉| 19965/19996 [01:34<00:00, 225.17 examples/s]Map: 100%|█████████▉| 19990/19996 [01:34<00:00, 231.23 examples/s]Map: 100%|██████████| 19996/19996 [01:35<00:00, 210.11 examples/s]
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map:   2%|▏         | 17/1000 [00:00<00:06, 145.47 examples/s]Map:   4%|▍         | 38/1000 [00:00<00:05, 177.50 examples/s]Map:   7%|▋         | 67/1000 [00:00<00:04, 214.03 examples/s]Map:   9%|▉         | 90/1000 [00:00<00:04, 216.28 examples/s]Map:  11%|█         | 112/1000 [00:00<00:04, 212.31 examples/s]Map:  14%|█▎        | 136/1000 [00:00<00:04, 214.27 examples/s]Map:  17%|█▋        | 167/1000 [00:00<00:04, 206.27 examples/s]Map:  19%|█▉        | 189/1000 [00:00<00:03, 207.48 examples/s]Map:  21%|██        | 212/1000 [00:01<00:03, 207.81 examples/s]Map:  23%|██▎       | 234/1000 [00:01<00:03, 203.59 examples/s]Map:  26%|██▌       | 262/1000 [00:01<00:03, 191.83 examples/s]Map:  29%|██▉       | 288/1000 [00:01<00:03, 208.04 examples/s]Map:  31%|███▏      | 313/1000 [00:01<00:03, 217.39 examples/s]Map:  34%|███▍      | 339/1000 [00:01<00:02, 226.49 examples/s]Map:  36%|███▋      | 364/1000 [00:01<00:02, 227.66 examples/s]Map:  39%|███▉      | 388/1000 [00:01<00:02, 223.34 examples/s]Map:  42%|████▏     | 420/1000 [00:02<00:02, 206.77 examples/s]Map:  45%|████▌     | 450/1000 [00:02<00:02, 225.63 examples/s]Map:  48%|████▊     | 479/1000 [00:02<00:02, 238.52 examples/s]Map:  51%|█████     | 511/1000 [00:02<00:02, 225.01 examples/s]Map:  54%|█████▍    | 543/1000 [00:02<00:02, 215.90 examples/s]Map:  58%|█████▊    | 578/1000 [00:02<00:01, 211.34 examples/s]Map:  60%|██████    | 604/1000 [00:02<00:01, 219.51 examples/s]Map:  63%|██████▎   | 632/1000 [00:02<00:01, 225.62 examples/s]Map:  66%|██████▌   | 657/1000 [00:03<00:01, 231.04 examples/s]Map:  69%|██████▉   | 692/1000 [00:03<00:01, 221.90 examples/s]Map:  73%|███████▎  | 731/1000 [00:03<00:01, 232.24 examples/s]Map:  77%|███████▋  | 768/1000 [00:03<00:01, 229.96 examples/s]Map:  79%|███████▉  | 794/1000 [00:03<00:00, 233.52 examples/s]Map:  82%|████████▏ | 820/1000 [00:03<00:00, 236.84 examples/s]Map:  85%|████████▌ | 851/1000 [00:03<00:00, 252.26 examples/s]Map:  88%|████████▊ | 883/1000 [00:04<00:00, 234.01 examples/s]Map:  92%|█████████▏| 916/1000 [00:04<00:00, 225.93 examples/s]Map:  94%|█████████▍| 945/1000 [00:04<00:00, 234.61 examples/s]Map:  98%|█████████▊| 981/1000 [00:04<00:00, 232.52 examples/s]Map: 100%|██████████| 1000/1000 [00:04<00:00, 207.45 examples/s]
Parameter 'function'=<bound method DPOTrainer.tokenize_row of <trl.trainer.dpo_trainer.DPOTrainer object at 0x7fdf347136d0>> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Parameter 'function'=<bound method DPOTrainer.tokenize_row of <trl.trainer.dpo_trainer.DPOTrainer object at 0x7f5943ca28f0>> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Map:   0%|          | 0/19996 [00:00<?, ? examples/s]Parameter 'function'=<bound method DPOTrainer.tokenize_row of <trl.trainer.dpo_trainer.DPOTrainer object at 0x7fa51e23fdf0>> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Map:   0%|          | 0/19996 [00:00<?, ? examples/s]Map:   0%|          | 0/19996 [00:00<?, ? examples/s][2024-05-03 19:56:27,311] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed info: version=0.14.2, git-hash=unknown, git-branch=unknown
[2024-05-03 19:56:27,322] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Flops Profiler Enabled: False
[2024-05-03 19:56:27,323] [INFO] [logging.py:96:log_dist] [Rank 0] Creating ZeRO Offload
Map:   0%|          | 28/19996 [00:00<01:21, 243.81 examples/s]Map:   0%|          | 28/19996 [00:00<01:22, 243.11 examples/s]Map:   0%|          | 29/19996 [00:00<01:20, 248.12 examples/s][2024-05-03 19:56:27,450] [INFO] [utils.py:779:see_memory_usage] DeepSpeedZeRoOffload initialize [begin]
[2024-05-03 19:56:27,451] [INFO] [utils.py:780:see_memory_usage] MA 8.24 GB         Max_MA 9.42 GB         CA 9.96 GB         Max_CA 10 GB 
[2024-05-03 19:56:27,451] [INFO] [utils.py:787:see_memory_usage] CPU Virtual Memory:  used = 17.82 GB, percent = 2.1%
Parameter Offload: Total persistent parameters: 266240 in 65 params
Map:   0%|          | 55/19996 [00:00<01:18, 253.21 examples/s]Map:   0%|          | 56/19996 [00:00<01:17, 258.51 examples/s]Map:   0%|          | 55/19996 [00:00<01:18, 253.78 examples/s][2024-05-03 19:56:27,564] [INFO] [utils.py:779:see_memory_usage] DeepSpeedZeRoOffload initialize [end]
[2024-05-03 19:56:27,565] [INFO] [utils.py:780:see_memory_usage] MA 8.24 GB         Max_MA 8.24 GB         CA 9.96 GB         Max_CA 10 GB 
[2024-05-03 19:56:27,565] [INFO] [utils.py:787:see_memory_usage] CPU Virtual Memory:  used = 17.84 GB, percent = 2.1%
[2024-05-03 19:56:27,566] [INFO] [config.py:996:print] DeepSpeedEngine configuration:
[2024-05-03 19:56:27,566] [INFO] [config.py:1000:print]   activation_checkpointing_config  {
    "partition_activations": false, 
    "contiguous_memory_optimization": false, 
    "cpu_checkpointing": false, 
    "number_checkpoints": null, 
    "synchronize_checkpoint_boundary": false, 
    "profile": false
}
[2024-05-03 19:56:27,566] [INFO] [config.py:1000:print]   aio_config ................... {'block_size': 1048576, 'queue_depth': 8, 'thread_count': 1, 'single_submit': False, 'overlap_events': True}
[2024-05-03 19:56:27,566] [INFO] [config.py:1000:print]   amp_enabled .................. False
[2024-05-03 19:56:27,566] [INFO] [config.py:1000:print]   amp_params ................... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   autotuning_config ............ {
    "enabled": false, 
    "start_step": null, 
    "end_step": null, 
    "metric_path": null, 
    "arg_mappings": null, 
    "metric": "throughput", 
    "model_info": null, 
    "results_dir": "autotuning_results", 
    "exps_dir": "autotuning_exps", 
    "overwrite": true, 
    "fast": true, 
    "start_profile_step": 3, 
    "end_profile_step": 5, 
    "tuner_type": "gridsearch", 
    "tuner_early_stopping": 5, 
    "tuner_num_trials": 50, 
    "model_info_path": null, 
    "mp_size": 1, 
    "max_train_batch_size": null, 
    "min_train_batch_size": 1, 
    "max_train_micro_batch_size_per_gpu": 1.024000e+03, 
    "min_train_micro_batch_size_per_gpu": 1, 
    "num_tuning_micro_batch_sizes": 3
}
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   bfloat16_enabled ............. True
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   bfloat16_immediate_grad_update  False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   checkpoint_parallel_write_pipeline  False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   checkpoint_tag_validation_enabled  True
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   checkpoint_tag_validation_fail  False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   comms_config ................. <deepspeed.comm.config.DeepSpeedCommsConfig object at 0x7f282d17f640>
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   communication_data_type ...... None
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   compile_config ............... enabled=False backend='inductor' kwargs={}
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   compression_config ........... {'weight_quantization': {'shared_parameters': {'enabled': False, 'quantizer_kernel': False, 'schedule_offset': 0, 'quantize_groups': 1, 'quantize_verbose': False, 'quantization_type': 'symmetric', 'quantize_weight_in_forward': False, 'rounding': 'nearest', 'fp16_mixed_quantize': False, 'quantize_change_ratio': 0.001}, 'different_groups': {}}, 'activation_quantization': {'shared_parameters': {'enabled': False, 'quantization_type': 'symmetric', 'range_calibration': 'dynamic', 'schedule_offset': 1000}, 'different_groups': {}}, 'sparse_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'row_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'head_pruning': {'shared_parameters': {'enabled': False, 'method': 'topk', 'schedule_offset': 1000}, 'different_groups': {}}, 'channel_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'layer_reduction': {'enabled': False}}
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   curriculum_enabled_legacy .... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   curriculum_params_legacy ..... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   data_efficiency_config ....... {'enabled': False, 'seed': 1234, 'data_sampling': {'enabled': False, 'num_epochs': 1000, 'num_workers': 0, 'curriculum_learning': {'enabled': False}}, 'data_routing': {'enabled': False, 'random_ltd': {'enabled': False, 'layer_token_lr_schedule': {'enabled': False}}}}
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   data_efficiency_enabled ...... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   dataloader_drop_last ......... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   disable_allgather ............ False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   dump_state ................... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   dynamic_loss_scale_args ...... None
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_enabled ........... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_gas_boundary_resolution  1
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_layer_name ........ bert.encoder.layer
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_layer_num ......... 0
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_max_iter .......... 100
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_stability ......... 1e-06
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_tol ............... 0.01
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   eigenvalue_verbose ........... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   elasticity_enabled ........... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   flops_profiler_config ........ {
    "enabled": false, 
    "recompute_fwd_factor": 0.0, 
    "profile_step": 1, 
    "module_depth": -1, 
    "top_modules": 1, 
    "detailed": true, 
    "output_file": null
}
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   fp16_auto_cast ............... None
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   fp16_enabled ................. False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   fp16_master_weights_and_gradients  False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   global_rank .................. 0
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   grad_accum_dtype ............. None
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   gradient_accumulation_steps .. 8
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   gradient_clipping ............ 0.0
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   gradient_predivide_factor .... 1.0
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   graph_harvesting ............. False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   hybrid_engine ................ enabled=False max_out_tokens=512 inference_tp_size=1 release_inference_cache=False pin_parameters=True tp_gather_partition_size=8
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   initial_dynamic_scale ........ 1
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   load_universal_checkpoint .... False
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   loss_scale ................... 1.0
[2024-05-03 19:56:27,567] [INFO] [config.py:1000:print]   memory_breakdown ............. False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   mics_hierarchial_params_gather  False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   mics_shard_size .............. -1
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   monitor_config ............... tensorboard=TensorBoardConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') wandb=WandbConfig(enabled=False, group=None, team=None, project='deepspeed') csv_monitor=CSVConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') enabled=False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   nebula_config ................ {
    "enabled": false, 
    "persistent_storage_path": null, 
    "persistent_time_interval": 100, 
    "num_of_version_in_retention": 2, 
    "enable_nebula_load": true, 
    "load_path": null
}
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   optimizer_legacy_fusion ...... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   optimizer_name ............... None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   optimizer_params ............. None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   pipeline ..................... {'stages': 'auto', 'partition': 'best', 'seed_layers': False, 'activation_checkpoint_interval': 0, 'pipe_partitioned': True, 'grad_partitioned': True}
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   pld_enabled .................. False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   pld_params ................... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   prescale_gradients ........... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   scheduler_name ............... None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   scheduler_params ............. None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   seq_parallel_communication_data_type  torch.float32
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   sparse_attention ............. None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   sparse_gradients_enabled ..... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   steps_per_print .............. inf
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   train_batch_size ............. 128
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   train_micro_batch_size_per_gpu  4
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   use_data_before_expert_parallel_  False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   use_node_local_storage ....... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   wall_clock_breakdown ......... False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   weight_quantization_config ... None
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   world_size ................... 4
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   zero_allow_untested_optimizer  False
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   zero_config .................. stage=3 contiguous_gradients=True reduce_scatter=True reduce_bucket_size=500,000,000 use_multi_rank_bucket_allreduce=True allgather_partitions=True allgather_bucket_size=500,000,000 overlap_comm=True load_from_fp32_weights=True elastic_checkpoint=False offload_param=DeepSpeedZeroOffloadParamConfig(device='none', nvme_path=None, buffer_count=5, buffer_size=100,000,000, max_in_cpu=1,000,000,000, pin_memory=False) offload_optimizer=DeepSpeedZeroOffloadOptimizerConfig(device='none', nvme_path=None, buffer_count=4, pin_memory=False, pipeline=False, pipeline_read=False, pipeline_write=False, fast_init=False, ratio=1.0) sub_group_size=1,000,000,000 cpu_offload_param=None cpu_offload_use_pin_memory=None cpu_offload=None prefetch_bucket_size=50,000,000 param_persistence_threshold=100,000 model_persistence_threshold=sys.maxsize max_live_parameters=1,000,000,000 max_reuse_distance=1,000,000,000 gather_16bit_weights_on_model_save=True stage3_gather_fp16_weights_on_model_save=False ignore_unused_parameters=True legacy_stage1=False round_robin_gradients=False zero_hpz_partition_size=1 zero_quantized_weights=False zero_quantized_nontrainable_weights=False zero_quantized_gradients=False mics_shard_size=-1 mics_hierarchical_params_gather=False memory_efficient_linear=True pipeline_loading_checkpoint=False override_module_apply=True
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   zero_enabled ................. True
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   zero_force_ds_cpu_optimizer .. True
[2024-05-03 19:56:27,568] [INFO] [config.py:1000:print]   zero_optimization_stage ...... 3
[2024-05-03 19:56:27,568] [INFO] [config.py:986:print_user_config]   json = {
    "train_batch_size": 128, 
    "train_micro_batch_size_per_gpu": 4, 
    "gradient_accumulation_steps": 8, 
    "zero_optimization": {
        "stage": 3, 
        "offload_optimizer": {
            "device": "none", 
            "nvme_path": null
        }, 
        "offload_param": {
            "device": "none", 
            "nvme_path": null
        }, 
        "stage3_gather_16bit_weights_on_model_save": true
    }, 
    "steps_per_print": inf, 
    "bf16": {
        "enabled": true
    }, 
    "fp16": {
        "enabled": false
    }, 
    "zero_optimization.reduce_bucket_size": 1.677722e+07, 
    "zero_optimization.stage3_param_persistence_threshold": 4.096000e+04, 
    "zero_optimization.stage3_prefetch_bucket_size": 1.509949e+07
}
Map:   0%|          | 82/19996 [00:00<01:17, 256.26 examples/s]Map:   0%|          | 82/19996 [00:00<01:17, 257.20 examples/s]Map:   0%|          | 84/19996 [00:00<01:16, 261.75 examples/s]Map:   1%|          | 113/19996 [00:00<01:14, 267.32 examples/s]Map:   1%|          | 111/19996 [00:00<01:16, 261.36 examples/s]Map:   1%|          | 111/19996 [00:00<01:15, 261.93 examples/s]Map:   1%|          | 141/19996 [00:00<01:12, 272.46 examples/s]Map:   1%|          | 141/19996 [00:00<01:12, 272.73 examples/s]Map:   1%|          | 144/19996 [00:00<01:11, 277.08 examples/s]Parameter Offload: Total persistent parameters: 266240 in 65 params
Map:   1%|          | 169/19996 [00:00<01:14, 266.62 examples/s]Map:   1%|          | 169/19996 [00:00<01:14, 267.20 examples/s]Map:   1%|          | 183/19996 [00:00<01:13, 268.44 examples/s]Map:   1%|          | 211/19996 [00:00<01:13, 268.91 examples/s]Map:   1%|          | 210/19996 [00:00<01:13, 268.09 examples/s]Map:   1%|          | 210/19996 [00:00<01:14, 267.17 examples/s]Map:   1%|▏         | 250/19996 [00:00<01:15, 261.90 examples/s]Map:   1%|          | 248/19996 [00:00<01:16, 259.36 examples/s]Map:   1%|          | 249/19996 [00:00<01:15, 260.93 examples/s]Map:   1%|▏         | 276/19996 [00:01<01:15, 262.11 examples/s]Map:   1%|▏         | 276/19996 [00:01<01:15, 261.76 examples/s]Map:   1%|▏         | 278/19996 [00:01<01:15, 260.38 examples/s]Map:   2%|▏         | 308/19996 [00:01<01:12, 270.60 examples/s]Map:   2%|▏         | 309/19996 [00:01<01:14, 264.65 examples/s]Map:   2%|▏         | 309/19996 [00:01<01:14, 264.38 examples/s]Map:   2%|▏         | 337/19996 [00:01<01:12, 272.10 examples/s]Map:   2%|▏         | 340/19996 [00:01<01:11, 273.53 examples/s]Map:   2%|▏         | 341/19996 [00:01<01:13, 267.51 examples/s]Map:   2%|▏         | 366/19996 [00:01<01:11, 272.68 examples/s]Map:   2%|▏         | 369/19996 [00:01<01:11, 273.32 examples/s]Map:   2%|▏         | 373/19996 [00:01<01:10, 277.18 examples/s]Map:   2%|▏         | 397/19996 [00:01<01:12, 271.51 examples/s]Map:   2%|▏         | 402/19996 [00:01<01:11, 274.82 examples/s]Map:   2%|▏         | 410/19996 [00:01<01:10, 279.45 examples/s]Map:   2%|▏         | 441/19996 [00:01<01:11, 272.02 examples/s]Map:   2%|▏         | 443/19996 [00:01<01:12, 270.45 examples/s]Map:   2%|▏         | 451/19996 [00:01<01:12, 269.17 examples/s]Map:   2%|▏         | 477/19996 [00:01<01:16, 253.65 examples/s]Map:   2%|▏         | 477/19996 [00:01<01:17, 250.63 examples/s]Map:   2%|▏         | 481/19996 [00:01<01:20, 243.42 examples/s]Map:   3%|▎         | 504/19996 [00:01<01:17, 252.20 examples/s]Map:   3%|▎         | 504/19996 [00:01<01:18, 249.66 examples/s]Map:   3%|▎         | 510/19996 [00:01<01:17, 252.62 examples/s]Map:   3%|▎         | 533/19996 [00:02<01:15, 259.22 examples/s]Map:   3%|▎         | 533/19996 [00:02<01:15, 256.82 examples/s]Map:   3%|▎         | 537/19996 [00:02<01:16, 253.02 examples/s]Map:   3%|▎         | 560/19996 [00:02<01:15, 257.76 examples/s]Map:   3%|▎         | 571/19996 [00:02<01:11, 270.32 examples/s]Map:   3%|▎         | 575/19996 [00:02<01:14, 260.23 examples/s]Map:   3%|▎         | 590/19996 [00:02<01:13, 263.60 examples/s]Map:   3%|▎         | 613/19996 [00:02<01:11, 269.23 examples/s]Map:   3%|▎         | 616/19996 [00:02<01:13, 263.04 examples/s]Map:   3%|▎         | 617/19996 [00:02<01:14, 261.09 examples/s]Map:   3%|▎         | 642/19996 [00:02<01:11, 271.65 examples/s]Map:   3%|▎         | 650/19996 [00:02<01:09, 279.13 examples/s]Map:   3%|▎         | 650/19996 [00:02<01:09, 279.06 examples/s]Map:   3%|▎         | 674/19996 [00:02<01:09, 278.15 examples/s]Map:   3%|▎         | 690/19996 [00:02<01:11, 271.53 examples/s]Map:   3%|▎         | 688/19996 [00:02<01:11, 268.44 examples/s]Map:   4%|▎         | 721/19996 [00:02<01:07, 283.61 examples/s]Map:   4%|▎         | 723/19996 [00:02<01:07, 285.15 examples/s]Map:   4%|▎         | 722/19996 [00:02<01:07, 285.23 examples/s]Map:   4%|▍         | 765/19996 [00:02<01:09, 278.69 examples/s]Map:   4%|▍         | 766/19996 [00:02<01:08, 281.52 examples/s]Map:   4%|▍         | 765/19996 [00:02<01:08, 280.67 examples/s]Map:   4%|▍         | 800/19996 [00:02<01:05, 292.61 examples/s]Map:   4%|▍         | 801/19996 [00:02<01:04, 297.91 examples/s]Map:   4%|▍         | 800/19996 [00:02<01:04, 295.63 examples/s]Map:   4%|▍         | 830/19996 [00:03<01:06, 287.52 examples/s]Map:   4%|▍         | 845/19996 [00:03<01:05, 290.92 examples/s]Map:   4%|▍         | 845/19996 [00:03<01:06, 288.91 examples/s]Map:   4%|▍         | 871/19996 [00:03<01:08, 280.48 examples/s]Map:   4%|▍         | 884/19996 [00:03<01:08, 278.17 examples/s]Map:   4%|▍         | 884/19996 [00:03<01:09, 276.20 examples/s]Map:   5%|▍         | 912/19996 [00:03<01:08, 277.27 examples/s]Map:   5%|▍         | 927/19996 [00:03<01:08, 277.98 examples/s]Map:   5%|▍         | 927/19996 [00:03<01:08, 276.37 examples/s]Map:   5%|▍         | 942/19996 [00:03<01:08, 280.07 examples/s]Map:   5%|▍         | 958/19996 [00:03<01:07, 281.06 examples/s]Map:   5%|▍         | 958/19996 [00:03<01:08, 279.88 examples/s]Map:   5%|▍         | 973/19996 [00:03<01:06, 284.75 examples/s]Map:   5%|▍         | 989/19996 [00:03<01:06, 286.61 examples/s]Map:   5%|▍         | 989/19996 [00:03<01:06, 285.14 examples/s]Map:   5%|▌         | 1012/19996 [00:03<01:52, 168.13 examples/s]Map:   5%|▌         | 1030/19996 [00:04<01:52, 168.19 examples/s]Map:   5%|▌         | 1030/19996 [00:04<01:52, 168.99 examples/s]Map:   5%|▌         | 1043/19996 [00:04<01:39, 190.84 examples/s]Map:   5%|▌         | 1057/19996 [00:04<01:42, 184.63 examples/s]Map:   5%|▌         | 1057/19996 [00:04<01:42, 184.87 examples/s]Map:   5%|▌         | 1069/19996 [00:04<01:33, 202.92 examples/s]Map:   5%|▌         | 1084/19996 [00:04<01:34, 199.42 examples/s]Map:   5%|▌         | 1084/19996 [00:04<01:34, 199.35 examples/s]Map:   5%|▌         | 1097/19996 [00:04<01:26, 218.55 examples/s]Map:   6%|▌         | 1121/19996 [00:04<01:30, 208.77 examples/s]Map:   6%|▌         | 1120/19996 [00:04<01:30, 208.48 examples/s]Map:   6%|▌         | 1132/19996 [00:04<01:27, 216.70 examples/s]Map:   6%|▌         | 1149/19996 [00:04<01:26, 218.77 examples/s]Map:   6%|▌         | 1149/19996 [00:04<01:27, 216.36 examples/s]Map:   6%|▌         | 1165/19996 [00:04<01:19, 238.19 examples/s]Map:   6%|▌         | 1180/19996 [00:04<01:18, 238.45 examples/s]Map:   6%|▌         | 1182/19996 [00:04<01:18, 239.41 examples/s]Map:   6%|▌         | 1196/19996 [00:04<01:13, 255.36 examples/s]Map:   6%|▌         | 1210/19996 [00:04<01:15, 248.92 examples/s]Map:   6%|▌         | 1210/19996 [00:04<01:16, 246.67 examples/s]Map:   6%|▌         | 1231/19996 [00:04<01:18, 238.82 examples/s]Map:   6%|▌         | 1245/19996 [00:04<01:18, 237.58 examples/s]Map:   6%|▌         | 1245/19996 [00:04<01:20, 233.61 examples/s]Map:   6%|▋         | 1264/19996 [00:04<01:13, 254.26 examples/s]Map:   6%|▋         | 1276/19996 [00:05<01:15, 247.47 examples/s]Map:   6%|▋         | 1276/19996 [00:05<01:16, 243.50 examples/s]Map:   6%|▋         | 1293/19996 [00:05<01:14, 252.25 examples/s]Map:   7%|▋         | 1308/19996 [00:05<01:12, 258.14 examples/s]Map:   7%|▋         | 1308/19996 [00:05<01:13, 254.57 examples/s]Map:   7%|▋         | 1322/19996 [00:05<01:12, 259.27 examples/s]Map:   7%|▋         | 1338/19996 [00:05<01:09, 266.55 examples/s]Map:   7%|▋         | 1337/19996 [00:05<01:11, 262.56 examples/s]Map:   7%|▋         | 1359/19996 [00:05<01:13, 253.48 examples/s]Map:   7%|▋         | 1380/19996 [00:05<01:09, 267.55 examples/s]Map:   7%|▋         | 1378/19996 [00:05<01:10, 263.26 examples/s]Map:   7%|▋         | 1392/19996 [00:05<01:08, 269.82 examples/s]Map:   7%|▋         | 1411/19996 [00:05<01:07, 275.92 examples/s]Map:   7%|▋         | 1420/19996 [00:05<01:08, 270.98 examples/s]Map:   7%|▋         | 1409/19996 [00:05<01:08, 271.39 examples/s]Map:   7%|▋         | 1448/19996 [00:05<01:08, 269.19 examples/s]Map:   7%|▋         | 1437/19996 [00:05<01:09, 268.31 examples/s]Map:   7%|▋         | 1451/19996 [00:05<01:08, 269.61 examples/s]Map:   7%|▋         | 1482/19996 [00:05<01:04, 287.02 examples/s]Map:   7%|▋         | 1468/19996 [00:05<01:06, 277.13 examples/s]Map:   7%|▋         | 1485/19996 [00:05<01:04, 285.23 examples/s]Map:   7%|▋         | 1498/19996 [00:05<01:06, 277.88 examples/s]Map:   8%|▊         | 1524/19996 [00:05<01:06, 279.61 examples/s]Map:   8%|▊         | 1527/19996 [00:05<01:05, 280.44 examples/s]Map:   8%|▊         | 1527/19996 [00:05<01:06, 278.84 examples/s]Map:   8%|▊         | 1554/19996 [00:06<01:05, 281.07 examples/s]Map:   8%|▊         | 1556/19996 [00:06<01:06, 278.98 examples/s]Map:   8%|▊         | 1570/19996 [00:06<01:06, 276.78 examples/s]Map:   8%|▊         | 1595/19996 [00:06<01:06, 275.48 examples/s]Map:   8%|▊         | 1597/19996 [00:06<01:07, 273.77 examples/s]Map:   8%|▊         | 1629/19996 [00:06<01:03, 290.53 examples/s]Map:   8%|▊         | 1615/19996 [00:06<01:05, 281.31 examples/s]Map:   8%|▊         | 1633/19996 [00:06<01:02, 293.99 examples/s]Map:   8%|▊         | 1662/19996 [00:06<01:02, 295.30 examples/s]Map:   8%|▊         | 1650/19996 [00:06<01:02, 295.67 examples/s]Map:   8%|▊         | 1664/19996 [00:06<01:02, 293.39 examples/s]Map:   9%|▊         | 1704/19996 [00:06<01:04, 284.05 examples/s]Map:   8%|▊         | 1689/19996 [00:06<01:05, 278.46 examples/s]Map:   9%|▊         | 1705/19996 [00:06<01:06, 275.15 examples/s]Map:   9%|▊         | 1719/19996 [00:06<01:05, 280.41 examples/s]Map:   9%|▊         | 1734/19996 [00:06<01:05, 277.03 examples/s]Map:   9%|▊         | 1735/19996 [00:06<01:05, 278.88 examples/s]Map:   9%|▊         | 1748/19996 [00:06<01:07, 270.66 examples/s]Map:   9%|▉         | 1776/19996 [00:06<01:07, 271.40 examples/s]Map:   9%|▉         | 1776/19996 [00:06<01:06, 275.06 examples/s]Map:   9%|▉         | 1776/19996 [00:06<01:07, 269.48 examples/s]Map:   9%|▉         | 1806/19996 [00:06<01:07, 270.10 examples/s]Map:   9%|▉         | 1805/19996 [00:06<01:06, 273.86 examples/s]Map:   9%|▉         | 1805/19996 [00:06<01:08, 266.99 examples/s]Map:   9%|▉         | 1839/19996 [00:07<01:12, 249.23 examples/s]Map:   9%|▉         | 1836/19996 [00:07<01:12, 249.03 examples/s]Map:   9%|▉         | 1836/19996 [00:07<01:14, 242.33 examples/s]Map:   9%|▉         | 1871/19996 [00:07<01:08, 265.06 examples/s]Map:   9%|▉         | 1869/19996 [00:07<01:08, 264.54 examples/s]Map:   9%|▉         | 1869/19996 [00:07<01:09, 260.53 examples/s]Map:   9%|▉         | 1899/19996 [00:07<01:06, 273.33 examples/s]Map:  10%|▉         | 1903/19996 [00:07<01:05, 274.47 examples/s]Map:   9%|▉         | 1899/19996 [00:07<01:07, 269.76 examples/s]Map:  10%|▉         | 1927/19996 [00:07<01:06, 273.37 examples/s]Map:  10%|▉         | 1932/19996 [00:07<01:05, 274.34 examples/s]Map:  10%|▉         | 1927/19996 [00:07<01:06, 270.22 examples/s]Map:  10%|▉         | 1957/19996 [00:07<01:04, 279.82 examples/s]Map:  10%|▉         | 1964/19996 [00:07<01:03, 281.96 examples/s]Map:  10%|▉         | 1956/19996 [00:07<01:05, 273.83 examples/s]Map:  10%|▉         | 1985/19996 [00:07<01:06, 270.23 examples/s]Map:  10%|█         | 2000/19996 [00:07<01:51, 161.93 examples/s]Map:  10%|█         | 2000/19996 [00:07<01:49, 164.10 examples/s]Map:  10%|█         | 2028/19996 [00:08<01:38, 181.67 examples/s]Map:  10%|█         | 2028/19996 [00:08<01:38, 183.05 examples/s]Map:  10%|█         | 2014/19996 [00:08<01:57, 152.98 examples/s]Map:  10%|█         | 2054/19996 [00:08<01:31, 195.37 examples/s]Map:  10%|█         | 2054/19996 [00:08<01:31, 196.21 examples/s]Map:  10%|█         | 2042/19996 [00:08<01:43, 173.25 examples/s]Map:  10%|█         | 2083/19996 [00:08<01:24, 213.05 examples/s]Map:  10%|█         | 2083/19996 [00:08<01:23, 214.04 examples/s]Map:  10%|█         | 2068/19996 [00:08<01:34, 189.81 examples/s]Map:  11%|█         | 2109/19996 [00:08<01:20, 222.52 examples/s]Map:  10%|█         | 2095/19996 [00:08<01:27, 205.48 examples/s]Map:  11%|█         | 2123/19996 [00:08<01:18, 228.13 examples/s]Map:  11%|█         | 2137/19996 [00:08<01:15, 236.54 examples/s]Map:  11%|█         | 2124/19996 [00:08<01:19, 225.31 examples/s]Map:  11%|█         | 2149/19996 [00:08<01:16, 233.54 examples/s]Map:  11%|█         | 2163/19996 [00:08<01:14, 238.62 examples/s]Map:  11%|█         | 2163/19996 [00:08<01:16, 231.86 examples/s]Map:  11%|█         | 2182/19996 [00:08<01:18, 228.14 examples/s]Map:  11%|█         | 2200/19996 [00:08<01:15, 234.33 examples/s]Map:  11%|█         | 2207/19996 [00:08<01:16, 232.68 examples/s]Map:  11%|█         | 2200/19996 [00:08<01:16, 232.29 examples/s]Map:  11%|█         | 2225/19996 [00:08<01:15, 235.11 examples/s]Map:  11%|█         | 2225/19996 [00:08<01:16, 233.14 examples/s]Map:  11%|█         | 2247/19996 [00:08<01:13, 240.10 examples/s]Map:  11%|█▏        | 2255/19996 [00:08<01:11, 247.95 examples/s]Map:  11%|█▏        | 2253/19996 [00:08<01:13, 240.91 examples/s]Map:  11%|█▏        | 2274/19996 [00:09<01:12, 244.55 examples/s]Map:  11%|█▏        | 2281/19996 [00:09<01:11, 248.05 examples/s]Map:  11%|█▏        | 2279/19996 [00:09<01:13, 241.98 examples/s]Map:  12%|█▏        | 2302/19996 [00:09<01:10, 251.80 examples/s]Map:  12%|█▏        | 2308/19996 [00:09<01:09, 252.71 examples/s]Map:  12%|█▏        | 2307/19996 [00:09<01:10, 250.63 examples/s]Map:  12%|█▏        | 2334/19996 [00:09<01:10, 251.57 examples/s]Map:  12%|█▏        | 2337/19996 [00:09<01:14, 238.55 examples/s]Map:  12%|█▏        | 2341/19996 [00:09<01:14, 236.60 examples/s]Map:  12%|█▏        | 2362/19996 [00:09<01:13, 240.06 examples/s]Map:  12%|█▏        | 2371/19996 [00:09<01:12, 241.79 examples/s]Map:  12%|█▏        | 2369/19996 [00:09<01:11, 246.00 examples/s]Map:  12%|█▏        | 2396/19996 [00:09<01:06, 265.13 examples/s]Map:  12%|█▏        | 2407/19996 [00:09<01:05, 268.91 examples/s]Map:  12%|█▏        | 2402/19996 [00:09<01:06, 263.36 examples/s]Map:  12%|█▏        | 2429/19996 [00:09<01:03, 274.92 examples/s]Map:  12%|█▏        | 2436/19996 [00:09<01:04, 271.62 examples/s]Map:  12%|█▏        | 2434/19996 [00:09<01:03, 274.82 examples/s]Map:  12%|█▏        | 2467/19996 [00:09<01:06, 261.97 examples/s]Map:  12%|█▏        | 2473/19996 [00:09<01:08, 255.34 examples/s]Map:  12%|█▏        | 2471/19996 [00:09<01:08, 256.51 examples/s]Map:  12%|█▏        | 2495/19996 [00:09<01:08, 255.67 examples/s]Map:  13%|█▎        | 2500/19996 [00:09<01:08, 256.21 examples/s]Map:  13%|█▎        | 2527/19996 [00:09<01:08, 255.63 examples/s]Map:  13%|█▎        | 2509/19996 [00:09<01:09, 252.28 examples/s]Map:  13%|█▎        | 2535/19996 [00:10<01:08, 256.24 examples/s]Map:  13%|█▎        | 2562/19996 [00:10<01:07, 258.04 examples/s]Map:  13%|█▎        | 2566/19996 [00:10<01:08, 254.83 examples/s]Map:  13%|█▎        | 2546/19996 [00:10<01:10, 246.44 examples/s]Map:  13%|█▎        | 2594/19996 [00:10<01:07, 259.22 examples/s]Map:  13%|█▎        | 2574/19996 [00:10<01:09, 251.74 examples/s]Map:  13%|█▎        | 2602/19996 [00:10<01:07, 257.91 examples/s]Map:  13%|█▎        | 2602/19996 [00:10<01:07, 256.82 examples/s]Map:  13%|█▎        | 2628/19996 [00:10<01:07, 256.19 examples/s]Map:  13%|█▎        | 2634/19996 [00:10<01:07, 258.24 examples/s]Map:  13%|█▎        | 2655/19996 [00:10<01:07, 256.64 examples/s]Map:  13%|█▎        | 2662/19996 [00:10<01:06, 259.90 examples/s]Map:  13%|█▎        | 2642/19996 [00:10<01:07, 257.42 examples/s]Map:  13%|█▎        | 2684/19996 [00:10<01:06, 260.39 examples/s]Map:  13%|█▎        | 2690/19996 [00:10<01:05, 263.65 examples/s]Map:  13%|█▎        | 2684/19996 [00:10<01:07, 257.60 examples/s]Map:  14%|█▎        | 2715/19996 [00:10<01:03, 271.74 examples/s]Map:  14%|█▎        | 2720/19996 [00:10<01:05, 264.93 examples/s]Map:  14%|█▎        | 2715/19996 [00:10<01:04, 268.49 examples/s]Map:  14%|█▎        | 2749/19996 [00:10<01:04, 267.83 examples/s]Map:  14%|█▍        | 2758/19996 [00:10<01:04, 267.96 examples/s]Map:  14%|█▍        | 2780/19996 [00:10<01:02, 275.84 examples/s]Map:  14%|█▍        | 2757/19996 [00:10<01:04, 267.02 examples/s]Map:  14%|█▍        | 2792/19996 [00:10<01:00, 282.47 examples/s]Map:  14%|█▍        | 2809/19996 [00:11<01:01, 278.00 examples/s]Map:  14%|█▍        | 2789/19996 [00:11<01:02, 275.78 examples/s]Map:  14%|█▍        | 2823/19996 [00:11<00:59, 286.94 examples/s]Map:  14%|█▍        | 2840/19996 [00:11<01:00, 284.55 examples/s]Map:  14%|█▍        | 2820/19996 [00:11<01:01, 280.91 examples/s]Map:  14%|█▍        | 2866/19996 [00:11<01:01, 280.26 examples/s]Map:  14%|█▍        | 2884/19996 [00:11<01:00, 280.80 examples/s]Map:  14%|█▍        | 2863/19996 [00:11<01:01, 278.69 examples/s]Map:  14%|█▍        | 2899/19996 [00:11<00:58, 289.97 examples/s]Map:  14%|█▍        | 2898/19996 [00:11<00:59, 287.68 examples/s]Map:  15%|█▍        | 2939/19996 [00:11<01:03, 269.95 examples/s]Map:  15%|█▍        | 2937/19996 [00:11<01:03, 268.01 examples/s]Map:  15%|█▍        | 2915/19996 [00:11<01:33, 183.49 examples/s]Map:  15%|█▍        | 2945/19996 [00:11<01:23, 204.81 examples/s]Map:  15%|█▍        | 2976/19996 [00:11<01:27, 193.62 examples/s]Map:  15%|█▍        | 2975/19996 [00:11<01:16, 221.89 examples/s]Map:  15%|█▍        | 2976/19996 [00:11<01:27, 195.25 examples/s]Map:  15%|█▌        | 3000/19996 [00:12<02:03, 137.14 examples/s]Map:  15%|█▌        | 3011/19996 [00:12<01:54, 148.92 examples/s]Map:  15%|█▌        | 3000/19996 [00:12<02:02, 138.76 examples/s]Map:  15%|█▌        | 3020/19996 [00:12<01:56, 145.92 examples/s]Map:  15%|█▌        | 3035/19996 [00:12<01:44, 162.33 examples/s]Map:  15%|█▌        | 3020/19996 [00:12<01:54, 147.67 examples/s]Map:  15%|█▌        | 3047/19996 [00:12<01:42, 165.78 examples/s]Map:  15%|█▌        | 3064/19996 [00:12<01:32, 182.10 examples/s]Map:  15%|█▌        | 3047/19996 [00:12<01:40, 167.96 examples/s]Map:  15%|█▌        | 3072/19996 [00:12<01:32, 182.56 examples/s]Map:  15%|█▌        | 3090/19996 [00:12<01:25, 196.84 examples/s]Map:  15%|█▌        | 3072/19996 [00:12<01:33, 181.87 examples/s]Map:  15%|█▌        | 3097/19996 [00:12<01:26, 195.46 examples/s]Map:  16%|█▌        | 3118/19996 [00:12<01:19, 212.88 examples/s]Map:  15%|█▌        | 3099/19996 [00:12<01:24, 200.03 examples/s]Map:  16%|█▌        | 3127/19996 [00:12<01:16, 219.88 examples/s]Map:  16%|█▌        | 3147/19996 [00:12<01:13, 229.45 examples/s]Map:  16%|█▌        | 3130/19996 [00:12<01:15, 223.68 examples/s]Map:  16%|█▌        | 3152/19996 [00:12<01:14, 227.39 examples/s]Map:  16%|█▌        | 3173/19996 [00:12<01:11, 234.65 examples/s]Map:  16%|█▌        | 3156/19996 [00:12<01:13, 228.14 examples/s]Map:  16%|█▌        | 3178/19996 [00:12<01:12, 232.76 examples/s]Map:  16%|█▌        | 3199/19996 [00:12<01:09, 240.93 examples/s]Map:  16%|█▌        | 3184/19996 [00:12<01:10, 239.42 examples/s]Map:  16%|█▌        | 3207/19996 [00:12<01:08, 245.71 examples/s]Map:  16%|█▌        | 3231/19996 [00:13<01:04, 260.18 examples/s]Map:  16%|█▌        | 3214/19996 [00:13<01:05, 255.09 examples/s]Map:  16%|█▌        | 3236/19996 [00:13<01:07, 248.32 examples/s]Map:  16%|█▋        | 3262/19996 [00:13<01:07, 247.73 examples/s]Map:  16%|█▋        | 3268/19996 [00:13<01:06, 250.01 examples/s]Map:  16%|█▋        | 3250/19996 [00:13<01:08, 243.60 examples/s]Map:  16%|█▋        | 3277/19996 [00:13<01:07, 248.09 examples/s]Map:  17%|█▋        | 3300/19996 [00:13<01:09, 239.30 examples/s]Map:  17%|█▋        | 3304/19996 [00:13<01:08, 243.06 examples/s]Map:  17%|█▋        | 3332/19996 [00:13<01:04, 258.65 examples/s]Map:  17%|█▋        | 3335/19996 [00:13<01:05, 253.39 examples/s]Map:  17%|█▋        | 3320/19996 [00:13<01:04, 257.94 examples/s]Map:  17%|█▋        | 3369/19996 [00:13<01:06, 251.37 examples/s]Map:  17%|█▋        | 3373/19996 [00:13<01:06, 250.40 examples/s]Map:  17%|█▋        | 3357/19996 [00:13<01:06, 251.88 examples/s]Map:  17%|█▋        | 3383/19996 [00:13<01:05, 252.25 examples/s]Map:  17%|█▋        | 3403/19996 [00:13<01:11, 232.38 examples/s]Map:  17%|█▋        | 3404/19996 [00:13<01:12, 229.32 examples/s]Map:  17%|█▋        | 3416/19996 [00:13<01:11, 232.17 examples/s]Map:  17%|█▋        | 3436/19996 [00:13<01:14, 220.81 examples/s]Map:  17%|█▋        | 3436/19996 [00:13<01:14, 222.31 examples/s]Map:  17%|█▋        | 3459/19996 [00:14<01:14, 221.09 examples/s]Map:  17%|█▋        | 3449/19996 [00:14<01:14, 222.64 examples/s]Map:  17%|█▋        | 3470/19996 [00:14<01:16, 216.87 examples/s]Map:  17%|█▋        | 3483/19996 [00:14<01:13, 223.73 examples/s]Map:  17%|█▋        | 3496/19996 [00:14<01:12, 226.20 examples/s]Map:  17%|█▋        | 3482/19996 [00:14<01:16, 216.99 examples/s]Map:  18%|█▊        | 3511/19996 [00:14<01:10, 234.88 examples/s]Map:  18%|█▊        | 3511/19996 [00:14<01:11, 229.78 examples/s]Map:  18%|█▊        | 3536/19996 [00:14<01:09, 237.22 examples/s]Map:  18%|█▊        | 3535/19996 [00:14<01:10, 234.16 examples/s]Map:  18%|█▊        | 3536/19996 [00:14<01:11, 231.11 examples/s]Map:  18%|█▊        | 3560/19996 [00:14<01:13, 224.23 examples/s]Map:  18%|█▊        | 3573/19996 [00:14<01:12, 226.62 examples/s]Map:  18%|█▊        | 3568/19996 [00:14<01:14, 221.85 examples/s]Map:  18%|█▊        | 3585/19996 [00:14<01:12, 226.50 examples/s]Map:  18%|█▊        | 3607/19996 [00:14<01:12, 225.49 examples/s]Map:  18%|█▊        | 3609/19996 [00:14<01:11, 228.39 examples/s]Map:  18%|█▊        | 3602/19996 [00:14<01:15, 216.89 examples/s]Map:  18%|█▊        | 3635/19996 [00:14<01:10, 230.65 examples/s]Map:  18%|█▊        | 3635/19996 [00:14<01:10, 230.99 examples/s]Map:  18%|█▊        | 3631/19996 [00:14<01:10, 232.25 examples/s]Map:  18%|█▊        | 3668/19996 [00:14<01:12, 224.69 examples/s]Map:  18%|█▊        | 3668/19996 [00:14<01:12, 223.98 examples/s]Map:  18%|█▊        | 3661/19996 [00:15<01:14, 217.93 examples/s]Map:  19%|█▊        | 3705/19996 [00:15<01:11, 226.95 examples/s]Map:  19%|█▊        | 3704/19996 [00:15<01:12, 225.92 examples/s]Map:  18%|█▊        | 3685/19996 [00:15<01:14, 220.31 examples/s]Map:  19%|█▊        | 3737/19996 [00:15<01:07, 241.85 examples/s]Map:  19%|█▊        | 3714/19996 [00:15<01:09, 232.94 examples/s]Map:  19%|█▊        | 3737/19996 [00:15<01:07, 242.11 examples/s]Map:  19%|█▉        | 3763/19996 [00:15<01:06, 244.31 examples/s]Map:  19%|█▊        | 3745/19996 [00:15<01:04, 250.72 examples/s]Map:  19%|█▉        | 3763/19996 [00:15<01:06, 244.73 examples/s]Map:  19%|█▉        | 3788/19996 [00:15<01:07, 238.86 examples/s]Map:  19%|█▉        | 3788/19996 [00:15<01:07, 239.14 examples/s]Map:  19%|█▉        | 3780/19996 [00:15<01:08, 237.27 examples/s]Map:  19%|█▉        | 3815/19996 [00:15<01:06, 242.67 examples/s]Map:  19%|█▉        | 3814/19996 [00:15<01:07, 240.84 examples/s]Map:  19%|█▉        | 3818/19996 [00:15<01:07, 237.96 examples/s]Map:  19%|█▉        | 3852/19996 [00:15<01:06, 243.04 examples/s]Map:  19%|█▉        | 3852/19996 [00:15<01:06, 244.12 examples/s]Map:  19%|█▉        | 3843/19996 [00:15<01:08, 236.95 examples/s]Map:  19%|█▉        | 3890/19996 [00:15<01:06, 243.88 examples/s]Map:  19%|█▉        | 3890/19996 [00:15<01:05, 245.11 examples/s]Map:  19%|█▉        | 3880/19996 [00:15<01:07, 237.72 examples/s]Map:  20%|█▉        | 3925/19996 [00:16<01:07, 236.48 examples/s]Map:  20%|█▉        | 3925/19996 [00:16<01:07, 237.71 examples/s]Map:  20%|█▉        | 3916/19996 [00:16<01:08, 233.74 examples/s]Map:  20%|█▉        | 3953/19996 [00:16<01:06, 242.77 examples/s]Map:  20%|█▉        | 3953/19996 [00:16<01:05, 243.98 examples/s]Map:  20%|█▉        | 3945/19996 [00:16<01:05, 243.49 examples/s]Map:  20%|█▉        | 3984/19996 [00:16<01:02, 257.62 examples/s]Map:  20%|█▉        | 3984/19996 [00:16<01:01, 258.57 examples/s]Map:  20%|█▉        | 3974/19996 [00:16<01:03, 254.13 examples/s]Map:  20%|██        | 4025/19996 [00:16<01:48, 146.82 examples/s]Map:  20%|██        | 4025/19996 [00:16<01:48, 147.02 examples/s]Map:  20%|██        | 4000/19996 [00:16<01:57, 136.48 examples/s]Map:  20%|██        | 4050/19996 [00:16<01:38, 162.68 examples/s]Map:  20%|██        | 4050/19996 [00:16<01:38, 162.37 examples/s]Map:  20%|██        | 4025/19996 [00:16<01:43, 154.42 examples/s]Map:  20%|██        | 4050/19996 [00:16<01:32, 172.10 examples/s]Map:  20%|██        | 4076/19996 [00:16<01:37, 163.11 examples/s]Map:  20%|██        | 4075/19996 [00:17<01:38, 162.24 examples/s]Map:  21%|██        | 4102/19996 [00:17<01:28, 179.61 examples/s]Map:  21%|██        | 4101/19996 [00:17<01:28, 179.36 examples/s]Map:  20%|██        | 4076/19996 [00:17<01:33, 169.83 examples/s]Map:  21%|██        | 4127/19996 [00:17<01:23, 189.52 examples/s]Map:  21%|██        | 4102/19996 [00:17<01:25, 186.41 examples/s]Map:  21%|██        | 4136/19996 [00:17<01:24, 187.67 examples/s]Map:  21%|██        | 4150/19996 [00:17<01:20, 197.54 examples/s]Map:  21%|██        | 4127/19996 [00:17<01:21, 195.28 examples/s]Map:  21%|██        | 4161/19996 [00:17<01:20, 195.89 examples/s]Map:  21%|██        | 4173/19996 [00:17<01:18, 200.99 examples/s]Map:  21%|██        | 4150/19996 [00:17<01:18, 201.99 examples/s]Map:  21%|██        | 4184/19996 [00:17<01:18, 201.28 examples/s]Map:  21%|██        | 4196/19996 [00:17<01:16, 206.56 examples/s]Map:  21%|██        | 4172/19996 [00:17<01:18, 201.88 examples/s]Map:  21%|██        | 4219/19996 [00:17<01:16, 206.21 examples/s]Map:  21%|██        | 4219/19996 [00:17<01:16, 205.46 examples/s]Map:  21%|██        | 4205/19996 [00:17<01:18, 201.58 examples/s]Map:  21%|██        | 4241/19996 [00:17<01:16, 206.93 examples/s]Map:  21%|██        | 4241/19996 [00:17<01:17, 203.46 examples/s]Map:  21%|██        | 4232/19996 [00:17<01:13, 215.25 examples/s]Map:  21%|██▏       | 4265/19996 [00:17<01:15, 207.83 examples/s]Map:  21%|██▏       | 4264/19996 [00:17<01:15, 209.68 examples/s]Map:  21%|██▏       | 4265/19996 [00:17<01:16, 204.41 examples/s]Map:  22%|██▏       | 4300/19996 [00:18<01:13, 214.82 examples/s]Map:  21%|██▏       | 4297/19996 [00:18<01:15, 208.96 examples/s]Map:  21%|██▏       | 4287/19996 [00:18<01:16, 206.07 examples/s]Map:  22%|██▏       | 4327/19996 [00:18<01:09, 223.95 examples/s]Map:  22%|██▏       | 4323/19996 [00:18<01:11, 218.87 examples/s]Map:  22%|██▏       | 4313/19996 [00:18<01:12, 217.77 examples/s]Map:  22%|██▏       | 4352/19996 [00:18<01:08, 227.98 examples/s]Map:  22%|██▏       | 4348/19996 [00:18<01:09, 223.65 examples/s]Map:  22%|██▏       | 4341/19996 [00:18<01:07, 230.28 examples/s]Map:  22%|██▏       | 4379/19996 [00:18<01:05, 236.89 examples/s]Map:  22%|██▏       | 4374/19996 [00:18<01:07, 232.92 examples/s]Map:  22%|██▏       | 4367/19996 [00:18<01:06, 233.77 examples/s]Map:  22%|██▏       | 4398/19996 [00:18<01:06, 232.86 examples/s]Map:  22%|██▏       | 4415/19996 [00:18<01:08, 228.29 examples/s]Map:  22%|██▏       | 4400/19996 [00:18<01:08, 227.12 examples/s]Map:  22%|██▏       | 4433/19996 [00:18<01:08, 226.21 examples/s]Map:  22%|██▏       | 4453/19996 [00:18<01:06, 234.00 examples/s]Map:  22%|██▏       | 4459/19996 [00:18<01:07, 231.60 examples/s]Map:  22%|██▏       | 4434/19996 [00:18<01:09, 224.51 examples/s]Map:  22%|██▏       | 4477/19996 [00:18<01:06, 234.55 examples/s]Map:  22%|██▏       | 4483/19996 [00:18<01:07, 229.27 examples/s]Map:  22%|██▏       | 4460/19996 [00:18<01:07, 230.03 examples/s]Map:  23%|██▎       | 4501/19996 [00:18<01:06, 234.06 examples/s]Map:  22%|██▏       | 4484/19996 [00:18<01:06, 231.68 examples/s]Map:  23%|██▎       | 4507/19996 [00:18<01:08, 227.65 examples/s]Map:  23%|██▎       | 4526/19996 [00:18<01:07, 230.44 examples/s]Map:  23%|██▎       | 4533/19996 [00:19<01:09, 221.10 examples/s]Map:  23%|██▎       | 4553/19996 [00:19<01:04, 239.06 examples/s]Map:  23%|██▎       | 4521/19996 [00:19<01:06, 231.65 examples/s]Map:  23%|██▎       | 4560/19996 [00:19<01:06, 232.81 examples/s]Map:  23%|██▎       | 4548/19996 [00:19<01:07, 229.44 examples/s]Map:  23%|██▎       | 4589/19996 [00:19<01:06, 231.67 examples/s]Map:  23%|██▎       | 4590/19996 [00:19<01:03, 241.35 examples/s]Map:  23%|██▎       | 4577/19996 [00:19<01:05, 235.92 examples/s]Map:  23%|██▎       | 4614/19996 [00:19<01:06, 232.38 examples/s]Map:  23%|██▎       | 4604/19996 [00:19<01:03, 244.13 examples/s]Map:  23%|██▎       | 4623/19996 [00:19<01:06, 231.26 examples/s]Map:  23%|██▎       | 4640/19996 [00:19<01:04, 236.98 examples/s]Map:  23%|██▎       | 4648/19996 [00:19<01:05, 233.75 examples/s]Map:  23%|██▎       | 4667/19996 [00:19<01:02, 243.71 examples/s]Map:  23%|██▎       | 4634/19996 [00:19<01:08, 225.52 examples/s]Map:  23%|██▎       | 4674/19996 [00:19<01:04, 236.40 examples/s]Map:  23%|██▎       | 4693/19996 [00:19<01:02, 246.61 examples/s]Map:  23%|██▎       | 4660/19996 [00:19<01:06, 231.93 examples/s]Map:  23%|██▎       | 4699/19996 [00:19<01:04, 237.83 examples/s]Map:  23%|██▎       | 4687/19996 [00:19<01:04, 236.12 examples/s]Map:  24%|██▎       | 4726/19996 [00:19<01:06, 227.97 examples/s]Map:  24%|██▎       | 4723/19996 [00:19<01:07, 225.87 examples/s]Map:  24%|██▎       | 4711/19996 [00:19<01:05, 232.72 examples/s]Map:  24%|██▍       | 4750/19996 [00:19<01:06, 229.85 examples/s]Map:  24%|██▎       | 4748/19996 [00:19<01:06, 229.59 examples/s]Map:  24%|██▎       | 4736/19996 [00:20<01:08, 222.94 examples/s]Map:  24%|██▍       | 4780/19996 [00:20<01:01, 247.64 examples/s]Map:  24%|██▍       | 4780/19996 [00:20<01:00, 252.47 examples/s]Map:  24%|██▍       | 4769/19996 [00:20<01:01, 247.16 examples/s]Map:  24%|██▍       | 4810/19996 [00:20<00:58, 258.49 examples/s]Map:  24%|██▍       | 4810/19996 [00:20<00:57, 261.86 examples/s]Map:  24%|██▍       | 4797/19996 [00:20<00:59, 253.63 examples/s]Map:  24%|██▍       | 4841/19996 [00:20<00:56, 268.40 examples/s]Map:  24%|██▍       | 4841/19996 [00:20<00:55, 271.53 examples/s]Map:  24%|██▍       | 4825/19996 [00:20<00:59, 256.09 examples/s]Map:  24%|██▍       | 4870/19996 [00:20<00:56, 269.46 examples/s]Map:  24%|██▍       | 4870/19996 [00:20<00:55, 270.31 examples/s]Map:  24%|██▍       | 4856/19996 [00:20<00:56, 268.35 examples/s]Map:  24%|██▍       | 4899/19996 [00:20<00:56, 269.58 examples/s]Map:  24%|██▍       | 4899/19996 [00:20<00:55, 270.28 examples/s]Map:  25%|██▍       | 4928/19996 [00:20<00:55, 270.69 examples/s]Map:  24%|██▍       | 4892/19996 [00:20<00:58, 256.09 examples/s]Map:  25%|██▍       | 4927/19996 [00:20<00:55, 271.07 examples/s]Map:  25%|██▍       | 4923/19996 [00:20<00:56, 267.20 examples/s]Map:  25%|██▍       | 4965/19996 [00:20<00:57, 259.57 examples/s]Map:  25%|██▍       | 4965/19996 [00:20<00:57, 260.57 examples/s]Map:  25%|██▍       | 4994/19996 [00:20<00:56, 263.55 examples/s]Map:  25%|██▍       | 4961/19996 [00:20<00:58, 258.88 examples/s]Map:  25%|██▍       | 4994/19996 [00:20<00:56, 264.43 examples/s]Map:  25%|██▌       | 5026/19996 [00:21<01:38, 151.33 examples/s]Map:  25%|██▌       | 5026/19996 [00:21<01:39, 150.30 examples/s]Map:  25%|██▌       | 5000/19996 [00:21<01:35, 157.22 examples/s]Map:  25%|██▌       | 5048/19996 [00:21<01:32, 160.90 examples/s]Map:  25%|██▌       | 5048/19996 [00:21<01:33, 159.47 examples/s]Map:  25%|██▌       | 5026/19996 [00:21<01:27, 170.99 examples/s]Map:  25%|██▌       | 5071/19996 [00:21<01:26, 172.74 examples/s]Map:  25%|██▌       | 5070/19996 [00:21<01:27, 170.48 examples/s]Map:  25%|██▌       | 5097/19996 [00:21<01:18, 190.53 examples/s]Map:  25%|██▌       | 5058/19996 [00:21<01:22, 180.86 examples/s]Map:  25%|██▌       | 5096/19996 [00:21<01:19, 188.44 examples/s]Map:  25%|██▌       | 5081/19996 [00:21<01:19, 188.78 examples/s]Map:  26%|██▌       | 5130/19996 [00:21<01:15, 197.64 examples/s]Map:  26%|██▌       | 5130/19996 [00:21<01:15, 196.11 examples/s]Map:  26%|██▌       | 5104/19996 [00:21<01:16, 195.52 examples/s]Map:  26%|██▌       | 5167/19996 [00:21<01:11, 206.77 examples/s]Map:  26%|██▌       | 5127/19996 [00:21<01:13, 201.76 examples/s]Map:  26%|██▌       | 5167/19996 [00:21<01:12, 204.92 examples/s]Map:  26%|██▌       | 5191/19996 [00:21<01:09, 212.79 examples/s]Map:  26%|██▌       | 5191/19996 [00:22<01:10, 210.83 examples/s]Map:  26%|██▌       | 5162/19996 [00:22<01:11, 208.03 examples/s]Map:  26%|██▌       | 5222/19996 [00:22<01:10, 208.99 examples/s]Map:  26%|██▌       | 5187/19996 [00:22<01:08, 215.06 examples/s]Map:  26%|██▌       | 5222/19996 [00:22<01:11, 205.65 examples/s]Map:  26%|██▋       | 5249/19996 [00:22<01:08, 216.47 examples/s]Map:  26%|██▋       | 5249/19996 [00:22<01:09, 213.23 examples/s]Map:  26%|██▌       | 5219/19996 [00:22<01:10, 210.57 examples/s]Map:  26%|██▋       | 5279/19996 [00:22<01:10, 207.48 examples/s]Map:  26%|██▌       | 5242/19996 [00:22<01:09, 212.52 examples/s]Map:  26%|██▋       | 5279/19996 [00:22<01:11, 204.65 examples/s]Map:  27%|██▋       | 5309/19996 [00:22<01:04, 226.69 examples/s]Map:  26%|██▋       | 5264/19996 [00:22<01:09, 211.77 examples/s]Map:  27%|██▋       | 5307/19996 [00:22<01:06, 219.73 examples/s]Map:  27%|██▋       | 5333/19996 [00:22<01:04, 226.55 examples/s]Map:  27%|██▋       | 5331/19996 [00:22<01:05, 223.35 examples/s]Map:  27%|██▋       | 5299/19996 [00:22<01:08, 215.37 examples/s]Map:  27%|██▋       | 5360/19996 [00:22<01:01, 237.42 examples/s]Map:  27%|██▋       | 5360/19996 [00:22<01:01, 236.88 examples/s]Map:  27%|██▋       | 5325/19996 [00:22<01:05, 223.06 examples/s]Map:  27%|██▋       | 5389/19996 [00:22<00:58, 249.54 examples/s]Map:  27%|██▋       | 5389/19996 [00:22<00:58, 248.44 examples/s]Map:  27%|██▋       | 5355/19996 [00:22<01:01, 239.47 examples/s]Map:  27%|██▋       | 5417/19996 [00:22<00:58, 248.38 examples/s]Map:  27%|██▋       | 5382/19996 [00:22<00:59, 245.27 examples/s]Map:  27%|██▋       | 5415/19996 [00:22<00:59, 247.08 examples/s]Map:  27%|██▋       | 5451/19996 [00:23<01:01, 236.57 examples/s]Map:  27%|██▋       | 5407/19996 [00:23<01:00, 242.78 examples/s]Map:  27%|██▋       | 5449/19996 [00:23<01:02, 232.71 examples/s]Map:  27%|██▋       | 5487/19996 [00:23<01:02, 232.37 examples/s]Map:  27%|██▋       | 5441/19996 [00:23<01:02, 233.82 examples/s]Map:  27%|██▋       | 5485/19996 [00:23<01:03, 228.00 examples/s]Map:  28%|██▊       | 5519/19996 [00:23<01:04, 224.65 examples/s]Map:  27%|██▋       | 5471/19996 [00:23<01:05, 220.76 examples/s]Map:  28%|██▊       | 5519/19996 [00:23<01:04, 224.66 examples/s]Map:  28%|██▊       | 5501/19996 [00:23<01:01, 235.63 examples/s]Map:  28%|██▊       | 5550/19996 [00:23<01:06, 218.04 examples/s]Map:  28%|██▊       | 5549/19996 [00:23<01:07, 213.88 examples/s]Map:  28%|██▊       | 5578/19996 [00:23<01:02, 229.29 examples/s]Map:  28%|██▊       | 5527/19996 [00:23<01:08, 212.58 examples/s]Map:  28%|██▊       | 5577/19996 [00:23<01:03, 228.38 examples/s]Map:  28%|██▊       | 5549/19996 [00:23<01:08, 211.98 examples/s]Map:  28%|██▊       | 5611/19996 [00:23<01:04, 224.12 examples/s]Map:  28%|██▊       | 5578/19996 [00:23<01:02, 229.80 examples/s]Map:  28%|██▊       | 5611/19996 [00:23<01:04, 224.04 examples/s]Map:  28%|██▊       | 5638/19996 [00:23<01:02, 231.30 examples/s]Map:  28%|██▊       | 5602/19996 [00:23<01:03, 226.47 examples/s]Map:  28%|██▊       | 5638/19996 [00:23<01:02, 230.49 examples/s]Map:  28%|██▊       | 5663/19996 [00:24<01:01, 234.13 examples/s]Map:  28%|██▊       | 5627/19996 [00:24<01:02, 230.32 examples/s]Map:  28%|██▊       | 5664/19996 [00:24<01:01, 234.63 examples/s]Map:  28%|██▊       | 5691/19996 [00:24<00:59, 240.43 examples/s]Map:  28%|██▊       | 5651/19996 [00:24<01:02, 230.79 examples/s]Map:  28%|██▊       | 5691/19996 [00:24<00:58, 242.51 examples/s]Map:  29%|██▊       | 5724/19996 [00:24<01:02, 229.38 examples/s]Map:  28%|██▊       | 5680/19996 [00:24<00:58, 245.77 examples/s]Map:  29%|██▊       | 5722/19996 [00:24<01:02, 228.33 examples/s]Map:  29%|██▊       | 5712/19996 [00:24<01:02, 227.39 examples/s]Map:  29%|██▉       | 5758/19996 [00:24<01:05, 217.93 examples/s]Map:  29%|██▉       | 5758/19996 [00:24<01:03, 225.01 examples/s]Map:  29%|██▉       | 5785/19996 [00:24<01:01, 229.56 examples/s]Map:  29%|██▉       | 5785/19996 [00:24<01:00, 235.36 examples/s]Map:  29%|██▊       | 5743/19996 [00:24<01:07, 211.56 examples/s]Map:  29%|██▉       | 5819/19996 [00:24<01:03, 223.81 examples/s]Map:  29%|██▉       | 5774/19996 [00:24<01:01, 231.85 examples/s]Map:  29%|██▉       | 5815/19996 [00:24<01:04, 220.88 examples/s]Map:  29%|██▉       | 5845/19996 [00:24<01:01, 231.22 examples/s]Map:  29%|██▉       | 5804/19996 [00:24<01:05, 217.50 examples/s]Map:  29%|██▉       | 5842/19996 [00:24<01:02, 226.66 examples/s]Map:  29%|██▉       | 5879/19996 [00:24<01:02, 224.44 examples/s]Map:  29%|██▉       | 5830/19996 [00:24<01:03, 224.02 examples/s]Map:  29%|██▉       | 5875/19996 [00:25<01:03, 223.39 examples/s]Map:  30%|██▉       | 5904/19996 [00:25<01:01, 227.83 examples/s]Map:  29%|██▉       | 5855/19996 [00:25<01:02, 226.15 examples/s]Map:  30%|██▉       | 5900/19996 [00:25<01:01, 227.44 examples/s]Map:  30%|██▉       | 5935/19996 [00:25<00:56, 247.47 examples/s]Map:  29%|██▉       | 5880/19996 [00:25<01:01, 231.15 examples/s]Map:  30%|██▉       | 5935/19996 [00:25<00:55, 251.69 examples/s]Map:  30%|██▉       | 5905/19996 [00:25<01:00, 233.27 examples/s]Map:  30%|██▉       | 5973/19996 [00:25<00:58, 241.54 examples/s]Map:  30%|██▉       | 5935/19996 [00:25<00:56, 248.08 examples/s]Map:  30%|██▉       | 5971/19996 [00:25<00:58, 239.14 examples/s]Map:  30%|███       | 5999/19996 [00:25<00:57, 245.40 examples/s]Map:  30%|██▉       | 5972/19996 [00:25<00:59, 236.12 examples/s]Map:  30%|███       | 6000/19996 [00:25<01:38, 141.62 examples/s]Map:  30%|███       | 6023/19996 [00:25<01:30, 154.73 examples/s]Map:  30%|███       | 6000/19996 [00:25<01:39, 140.70 examples/s]Map:  30%|███       | 6031/19996 [00:25<01:41, 137.50 examples/s]Map:  30%|███       | 6050/19996 [00:26<01:27, 159.20 examples/s]Map:  30%|███       | 6023/19996 [00:26<01:30, 154.38 examples/s]Map:  30%|███       | 6076/19996 [00:26<01:18, 176.50 examples/s]Map:  30%|███       | 6063/19996 [00:26<01:31, 152.02 examples/s]Map:  31%|███       | 6101/19996 [00:26<01:13, 189.93 examples/s]Map:  30%|███       | 6050/19996 [00:26<01:27, 159.04 examples/s]Map:  30%|███       | 6087/19996 [00:26<01:24, 165.55 examples/s]Map:  31%|███       | 6124/19996 [00:26<01:10, 197.81 examples/s]Map:  30%|███       | 6077/19996 [00:26<01:17, 178.49 examples/s]Map:  31%|███       | 6112/19996 [00:26<01:16, 180.48 examples/s]Map:  31%|███       | 6146/19996 [00:26<01:09, 200.11 examples/s]Map:  31%|███       | 6101/19996 [00:26<01:13, 189.86 examples/s]Map:  31%|███       | 6144/19996 [00:26<01:13, 188.76 examples/s]Map:  31%|███       | 6168/19996 [00:26<01:07, 204.59 examples/s]Map:  31%|███       | 6124/19996 [00:26<01:10, 195.84 examples/s]Map:  31%|███       | 6193/19996 [00:26<01:04, 215.66 examples/s]Map:  31%|███       | 6178/19996 [00:26<01:09, 197.66 examples/s]Map:  31%|███       | 6154/19996 [00:26<01:12, 191.52 examples/s]Map:  31%|███       | 6218/19996 [00:26<01:03, 217.69 examples/s]Map:  31%|███       | 6203/19996 [00:26<01:06, 206.55 examples/s]Map:  31%|███       | 6183/19996 [00:26<01:05, 212.21 examples/s]Map:  31%|███       | 6242/19996 [00:26<01:03, 216.07 examples/s]Map:  31%|███       | 6237/19996 [00:26<01:05, 209.81 examples/s]Map:  31%|███       | 6208/19996 [00:26<01:02, 219.56 examples/s]Map:  31%|███▏      | 6272/19996 [00:26<00:57, 236.74 examples/s]Map:  31%|███▏      | 6264/19996 [00:27<01:01, 223.19 examples/s]Map:  31%|███▏      | 6297/19996 [00:27<00:57, 238.64 examples/s]Map:  31%|███       | 6244/19996 [00:27<01:01, 222.28 examples/s]Map:  31%|███▏      | 6290/19996 [00:27<00:59, 229.82 examples/s]Map:  32%|███▏      | 6322/19996 [00:27<00:57, 237.73 examples/s]Map:  31%|███▏      | 6273/19996 [00:27<00:58, 236.42 examples/s]Map:  32%|███▏      | 6314/19996 [00:27<00:59, 231.71 examples/s]Map:  32%|███▏      | 6348/19996 [00:27<00:56, 239.64 examples/s]Map:  32%|███▏      | 6339/19996 [00:27<00:58, 232.37 examples/s]Map:  32%|███▏      | 6311/19996 [00:27<00:57, 238.74 examples/s]Map:  32%|███▏      | 6375/19996 [00:27<01:03, 213.11 examples/s]Map:  32%|███▏      | 6338/19996 [00:27<00:56, 242.29 examples/s]Map:  32%|███▏      | 6368/19996 [00:27<01:04, 211.23 examples/s]Map:  32%|███▏      | 6399/19996 [00:27<01:04, 211.90 examples/s]Map:  32%|███▏      | 6364/19996 [00:27<01:04, 212.76 examples/s]Map:  32%|███▏      | 6400/19996 [00:27<01:05, 207.42 examples/s]Map:  32%|███▏      | 6425/19996 [00:27<01:01, 220.02 examples/s]Map:  32%|███▏      | 6387/19996 [00:27<01:05, 207.79 examples/s]Map:  32%|███▏      | 6425/19996 [00:27<01:02, 216.06 examples/s]Map:  32%|███▏      | 6452/19996 [00:27<00:58, 231.52 examples/s]Map:  32%|███▏      | 6452/19996 [00:27<00:59, 226.78 examples/s]Map:  32%|███▏      | 6424/19996 [00:27<01:02, 217.75 examples/s]Map:  32%|███▏      | 6483/19996 [00:27<01:01, 218.02 examples/s]Map:  32%|███▏      | 6452/19996 [00:28<00:59, 227.22 examples/s]Map:  32%|███▏      | 6482/19996 [00:28<01:03, 213.32 examples/s]Map:  33%|███▎      | 6511/19996 [00:28<01:06, 204.24 examples/s]Map:  32%|███▏      | 6484/19996 [00:28<01:02, 216.61 examples/s]Map:  33%|███▎      | 6511/19996 [00:28<01:06, 202.77 examples/s]Map:  33%|███▎      | 6541/19996 [00:28<01:07, 198.96 examples/s]Map:  33%|███▎      | 6512/19996 [00:28<01:06, 203.08 examples/s]Map:  33%|███▎      | 6540/19996 [00:28<01:08, 197.42 examples/s]Map:  33%|███▎      | 6562/19996 [00:28<01:06, 200.53 examples/s]Map:  33%|███▎      | 6533/19996 [00:28<01:07, 199.94 examples/s]Map:  33%|███▎      | 6562/19996 [00:28<01:07, 199.89 examples/s]Map:  33%|███▎      | 6589/19996 [00:28<01:03, 211.62 examples/s]Map:  33%|███▎      | 6589/19996 [00:28<01:03, 209.65 examples/s]Map:  33%|███▎      | 6615/19996 [00:28<01:00, 219.76 examples/s]Map:  33%|███▎      | 6564/19996 [00:28<01:06, 200.90 examples/s]Map:  33%|███▎      | 6615/19996 [00:28<01:01, 218.55 examples/s]Map:  33%|███▎      | 6641/19996 [00:28<00:58, 227.17 examples/s]Map:  33%|███▎      | 6589/19996 [00:28<01:04, 209.06 examples/s]Map:  33%|███▎      | 6641/19996 [00:28<00:58, 226.65 examples/s]Map:  33%|███▎      | 6666/19996 [00:28<00:58, 228.95 examples/s]Map:  33%|███▎      | 6615/19996 [00:28<01:01, 218.31 examples/s]Map:  33%|███▎      | 6666/19996 [00:28<00:58, 228.78 examples/s]Map:  33%|███▎      | 6697/19996 [00:28<00:53, 249.36 examples/s]Map:  33%|███▎      | 6641/19996 [00:28<00:58, 226.50 examples/s]Map:  33%|███▎      | 6698/19996 [00:28<00:53, 250.58 examples/s]Map:  34%|███▎      | 6723/19996 [00:28<00:53, 247.11 examples/s]Map:  33%|███▎      | 6666/19996 [00:29<00:58, 227.84 examples/s]Map:  34%|███▍      | 6750/19996 [00:29<00:52, 250.81 examples/s]Map:  33%|███▎      | 6696/19996 [00:29<00:54, 245.90 examples/s]Map:  34%|███▎      | 6738/19996 [00:29<00:52, 251.95 examples/s]Map:  34%|███▎      | 6723/19996 [00:29<00:54, 243.82 examples/s]Map:  34%|███▍      | 6782/19996 [00:29<00:58, 226.11 examples/s]Map:  34%|███▍      | 6772/19996 [00:29<00:55, 236.41 examples/s]Map:  34%|███▍      | 6750/19996 [00:29<00:53, 247.84 examples/s]Map:  34%|███▍      | 6812/19996 [00:29<00:54, 242.54 examples/s]Map:  34%|███▍      | 6812/19996 [00:29<00:55, 238.80 examples/s]Map:  34%|███▍      | 6782/19996 [00:29<00:59, 222.85 examples/s]Map:  34%|███▍      | 6848/19996 [00:29<00:56, 232.59 examples/s]Map:  34%|███▍      | 6837/19996 [00:29<00:54, 239.58 examples/s]Map:  34%|███▍      | 6810/19996 [00:29<00:56, 235.42 examples/s]Map:  34%|███▍      | 6874/19996 [00:29<00:56, 233.26 examples/s]Map:  34%|███▍      | 6836/19996 [00:29<00:55, 237.80 examples/s]Map:  34%|███▍      | 6871/19996 [00:29<00:56, 231.51 examples/s]Map:  35%|███▍      | 6902/19996 [00:29<00:53, 244.22 examples/s]Map:  34%|███▍      | 6897/19996 [00:29<00:55, 237.48 examples/s]Map:  34%|███▍      | 6871/19996 [00:29<00:57, 229.90 examples/s]Map:  35%|███▍      | 6933/19996 [00:29<00:57, 227.74 examples/s]Map:  35%|███▍      | 6923/19996 [00:29<00:54, 240.93 examples/s]Map:  34%|███▍      | 6895/19996 [00:29<00:56, 230.58 examples/s]Map:  35%|███▍      | 6960/19996 [00:30<00:56, 232.61 examples/s]Map:  35%|███▍      | 6923/19996 [00:30<00:54, 238.26 examples/s]Map:  35%|███▍      | 6960/19996 [00:30<00:56, 229.26 examples/s]Map:  35%|███▍      | 6985/19996 [00:30<00:55, 235.22 examples/s]Map:  35%|███▍      | 6985/19996 [00:30<00:56, 231.15 examples/s]Map:  35%|███▍      | 6959/19996 [00:30<00:55, 234.13 examples/s]Map:  35%|███▍      | 6992/19996 [00:30<00:57, 226.52 examples/s]Map:  35%|███▌      | 7009/19996 [00:30<01:41, 128.00 examples/s]Map:  35%|███▌      | 7034/19996 [00:30<01:27, 147.84 examples/s]Map:  35%|███▌      | 7010/19996 [00:30<01:40, 129.04 examples/s]Map:  35%|███▌      | 7059/19996 [00:30<01:18, 165.18 examples/s]Map:  35%|███▌      | 7037/19996 [00:30<01:26, 150.45 examples/s]Map:  35%|███▌      | 7021/19996 [00:30<01:37, 132.57 examples/s]Map:  35%|███▌      | 7060/19996 [00:30<01:18, 164.27 examples/s]Map:  35%|███▌      | 7089/19996 [00:30<01:13, 174.94 examples/s]Map:  35%|███▌      | 7044/19996 [00:30<01:28, 146.92 examples/s]Map:  36%|███▌      | 7111/19996 [00:31<01:10, 182.82 examples/s]Map:  35%|███▌      | 7091/19996 [00:31<01:14, 173.96 examples/s]Map:  35%|███▌      | 7071/19996 [00:31<01:16, 167.96 examples/s]Map:  36%|███▌      | 7137/19996 [00:31<01:05, 197.38 examples/s]Map:  36%|███▌      | 7113/19996 [00:31<01:11, 181.37 examples/s]Map:  36%|███▌      | 7104/19996 [00:31<01:11, 179.21 examples/s]Map:  36%|███▌      | 7138/19996 [00:31<01:07, 191.67 examples/s]Map:  36%|███▌      | 7168/19996 [00:31<01:06, 192.29 examples/s]Map:  36%|███▌      | 7128/19996 [00:31<01:07, 190.32 examples/s]Map:  36%|███▌      | 7169/19996 [00:31<01:06, 193.88 examples/s]Map:  36%|███▌      | 7191/19996 [00:31<01:05, 195.32 examples/s]Map:  36%|███▌      | 7159/19996 [00:31<01:08, 188.50 examples/s]Map:  36%|███▌      | 7218/19996 [00:31<01:00, 210.46 examples/s]Map:  36%|███▌      | 7191/19996 [00:31<01:05, 194.50 examples/s]Map:  36%|███▌      | 7180/19996 [00:31<01:08, 188.46 examples/s]Map:  36%|███▌      | 7217/19996 [00:31<01:01, 207.93 examples/s]Map:  36%|███▌      | 7241/19996 [00:31<01:00, 211.64 examples/s]Map:  36%|███▌      | 7206/19996 [00:31<01:03, 201.74 examples/s]Map:  36%|███▋      | 7270/19996 [00:31<00:55, 229.72 examples/s]Map:  36%|███▌      | 7240/19996 [00:31<01:00, 209.96 examples/s]Map:  36%|███▌      | 7229/19996 [00:31<01:02, 205.37 examples/s]Map:  36%|███▋      | 7268/19996 [00:31<00:56, 225.74 examples/s]Map:  36%|███▋      | 7298/19996 [00:31<00:53, 237.79 examples/s]Map:  36%|███▋      | 7257/19996 [00:31<00:57, 222.32 examples/s]Map:  36%|███▋      | 7296/19996 [00:31<00:54, 235.09 examples/s]Map:  37%|███▋      | 7328/19996 [00:31<00:50, 250.77 examples/s]Map:  37%|███▋      | 7326/19996 [00:32<00:50, 251.36 examples/s]Map:  36%|███▋      | 7283/19996 [00:32<00:55, 227.96 examples/s]Map:  37%|███▋      | 7357/19996 [00:32<00:48, 259.16 examples/s]Map:  37%|███▋      | 7311/19996 [00:32<00:52, 239.61 examples/s]Map:  37%|███▋      | 7354/19996 [00:32<00:49, 255.72 examples/s]Map:  37%|███▋      | 7393/19996 [00:32<00:51, 246.14 examples/s]Map:  37%|███▋      | 7340/19996 [00:32<00:50, 251.65 examples/s]Map:  37%|███▋      | 7392/19996 [00:32<00:50, 248.47 examples/s]Map:  37%|███▋      | 7422/19996 [00:32<00:50, 250.47 examples/s]Map:  37%|███▋      | 7375/19996 [00:32<00:52, 241.01 examples/s]Map:  37%|███▋      | 7421/19996 [00:32<00:49, 252.01 examples/s]Map:  37%|███▋      | 7452/19996 [00:32<00:55, 226.50 examples/s]Map:  37%|███▋      | 7405/19996 [00:32<00:50, 251.53 examples/s]Map:  37%|███▋      | 7478/19996 [00:32<00:53, 232.59 examples/s]Map:  37%|███▋      | 7451/19996 [00:32<00:55, 225.65 examples/s]Map:  37%|███▋      | 7438/19996 [00:32<00:53, 234.59 examples/s]Map:  38%|███▊      | 7508/19996 [00:32<00:50, 246.96 examples/s]Map:  37%|███▋      | 7476/19996 [00:32<00:54, 227.87 examples/s]Map:  38%|███▊      | 7535/19996 [00:32<00:49, 251.36 examples/s]Map:  38%|███▊      | 7504/19996 [00:32<00:51, 240.25 examples/s]Map:  37%|███▋      | 7476/19996 [00:32<00:54, 231.72 examples/s]Map:  38%|███▊      | 7561/19996 [00:32<00:49, 250.33 examples/s]Map:  38%|███▊      | 7530/19996 [00:32<00:51, 243.66 examples/s]Map:  38%|███▊      | 7504/19996 [00:32<00:51, 242.24 examples/s]Map:  38%|███▊      | 7559/19996 [00:32<00:49, 251.70 examples/s]Map:  38%|███▊      | 7589/19996 [00:32<00:49, 251.11 examples/s]Map:  38%|███▊      | 7530/19996 [00:33<00:50, 245.16 examples/s]Map:  38%|███▊      | 7587/19996 [00:33<00:48, 254.71 examples/s]Map:  38%|███▊      | 7559/19996 [00:33<00:49, 253.51 examples/s]Map:  38%|███▊      | 7626/19996 [00:33<00:50, 245.95 examples/s]Map:  38%|███▊      | 7587/19996 [00:33<00:48, 255.37 examples/s]Map:  38%|███▊      | 7651/19996 [00:33<00:50, 242.39 examples/s]Map:  38%|███▊      | 7622/19996 [00:33<00:51, 242.23 examples/s]Map:  38%|███▊      | 7676/19996 [00:33<00:50, 242.19 examples/s]Map:  38%|███▊      | 7647/19996 [00:33<00:51, 241.81 examples/s]Map:  38%|███▊      | 7622/19996 [00:33<00:51, 241.77 examples/s]Map:  39%|███▊      | 7702/19996 [00:33<00:50, 245.34 examples/s]Map:  38%|███▊      | 7674/19996 [00:33<00:50, 243.04 examples/s]Map:  38%|███▊      | 7647/19996 [00:33<00:51, 240.02 examples/s]Map:  39%|███▊      | 7701/19996 [00:33<00:49, 247.93 examples/s]Map:  38%|███▊      | 7674/19996 [00:33<00:51, 238.02 examples/s]Map:  39%|███▊      | 7740/19996 [00:33<00:54, 226.49 examples/s]Map:  39%|███▊      | 7701/19996 [00:33<00:50, 245.75 examples/s]Map:  39%|███▉      | 7769/19996 [00:33<00:51, 237.44 examples/s]Map:  39%|███▊      | 7740/19996 [00:33<00:54, 226.88 examples/s]Map:  39%|███▉      | 7798/19996 [00:33<00:49, 248.77 examples/s]Map:  39%|███▉      | 7768/19996 [00:33<00:51, 238.01 examples/s]Map:  39%|███▊      | 7732/19996 [00:33<00:54, 225.87 examples/s]Map:  39%|███▉      | 7827/19996 [00:33<00:47, 255.47 examples/s]Map:  39%|███▉      | 7797/19996 [00:33<00:48, 249.18 examples/s]Map:  39%|███▉      | 7758/19996 [00:33<00:53, 230.57 examples/s]Map:  39%|███▉      | 7827/19996 [00:34<00:47, 257.22 examples/s]Map:  39%|███▉      | 7787/19996 [00:34<00:50, 243.40 examples/s]Map:  39%|███▉      | 7867/19996 [00:34<00:47, 254.69 examples/s]Map:  39%|███▉      | 7817/19996 [00:34<00:47, 254.33 examples/s]Map:  39%|███▉      | 7896/19996 [00:34<00:46, 259.28 examples/s]Map:  39%|███▉      | 7866/19996 [00:34<00:47, 255.34 examples/s]Map:  39%|███▉      | 7844/19996 [00:34<00:47, 256.65 examples/s]Map:  39%|███▉      | 7896/19996 [00:34<00:46, 261.26 examples/s]Map:  40%|███▉      | 7933/19996 [00:34<00:48, 246.36 examples/s]Map:  39%|███▉      | 7884/19996 [00:34<00:48, 251.26 examples/s]Map:  40%|███▉      | 7933/19996 [00:34<00:48, 247.13 examples/s]Map:  40%|███▉      | 7967/19996 [00:34<00:50, 236.12 examples/s]Map:  40%|███▉      | 7920/19996 [00:34<00:49, 245.18 examples/s]Map:  40%|███▉      | 7997/19996 [00:34<00:48, 247.14 examples/s]Map:  40%|███▉      | 7966/19996 [00:34<00:51, 235.28 examples/s]Map:  40%|███▉      | 7945/19996 [00:34<00:49, 243.02 examples/s]Map:  40%|███▉      | 7995/19996 [00:34<00:48, 246.39 examples/s]Map:  40%|███▉      | 7980/19996 [00:34<00:51, 233.63 examples/s]Map:  40%|████      | 8025/19996 [00:35<01:27, 136.71 examples/s]Map:  40%|████      | 8049/19996 [00:35<01:19, 151.20 examples/s]Map:  40%|████      | 8025/19996 [00:35<01:27, 137.49 examples/s]Map:  40%|████      | 8072/19996 [00:35<01:12, 163.61 examples/s]Map:  40%|████      | 8046/19996 [00:35<01:20, 148.44 examples/s]Map:  40%|████      | 8012/19996 [00:35<01:27, 137.54 examples/s]Map:  41%|████      | 8099/19996 [00:35<01:04, 185.15 examples/s]Map:  40%|████      | 8072/19996 [00:35<01:12, 163.40 examples/s]Map:  40%|████      | 8039/19996 [00:35<01:16, 157.18 examples/s]Map:  41%|████      | 8126/19996 [00:35<00:58, 203.62 examples/s]Map:  41%|████      | 8099/19996 [00:35<01:04, 183.28 examples/s]Map:  40%|████      | 8070/19996 [00:35<01:10, 168.41 examples/s]Map:  41%|████      | 8126/19996 [00:35<00:59, 201.11 examples/s]Map:  41%|████      | 8158/19996 [00:35<00:58, 202.49 examples/s]Map:  40%|████      | 8095/19996 [00:35<01:05, 181.48 examples/s]Map:  41%|████      | 8182/19996 [00:35<00:56, 209.63 examples/s]Map:  41%|████      | 8158/19996 [00:35<00:58, 200.96 examples/s]Map:  41%|████      | 8122/19996 [00:35<00:59, 199.35 examples/s]Map:  41%|████      | 8182/19996 [00:35<00:56, 208.21 examples/s]Map:  41%|████      | 8145/19996 [00:35<00:58, 204.33 examples/s]Map:  41%|████      | 8213/19996 [00:35<00:58, 202.66 examples/s]Map:  41%|████      | 8169/19996 [00:36<00:56, 210.94 examples/s]Map:  41%|████      | 8236/19996 [00:36<00:56, 208.31 examples/s]Map:  41%|████      | 8213/19996 [00:36<00:58, 200.99 examples/s]Map:  41%|████      | 8193/19996 [00:36<00:56, 207.72 examples/s]Map:  41%|████▏     | 8258/19996 [00:36<00:58, 199.96 examples/s]Map:  41%|████      | 8236/19996 [00:36<00:56, 206.96 examples/s]Map:  41%|████      | 8223/19996 [00:36<00:58, 200.40 examples/s]Map:  41%|████▏     | 8258/19996 [00:36<00:59, 198.35 examples/s]Map:  41%|████▏     | 8286/19996 [00:36<01:01, 189.41 examples/s]Map:  41%|████      | 8246/19996 [00:36<00:57, 203.22 examples/s]Map:  42%|████▏     | 8313/19996 [00:36<00:56, 205.19 examples/s]Map:  41%|████▏     | 8286/19996 [00:36<01:02, 187.76 examples/s]Map:  42%|████▏     | 8341/19996 [00:36<00:52, 221.28 examples/s]Map:  42%|████▏     | 8311/19996 [00:36<00:58, 199.15 examples/s]Map:  41%|████▏     | 8274/19996 [00:36<01:03, 185.38 examples/s]Map:  42%|████▏     | 8366/19996 [00:36<00:53, 218.78 examples/s]Map:  42%|████▏     | 8340/19996 [00:36<00:53, 219.86 examples/s]Map:  41%|████▏     | 8298/19996 [00:36<00:59, 195.23 examples/s]Map:  42%|████▏     | 8393/19996 [00:36<00:51, 227.40 examples/s]Map:  42%|████▏     | 8365/19996 [00:36<00:52, 223.55 examples/s]Map:  42%|████▏     | 8325/19996 [00:36<00:55, 210.20 examples/s]Map:  42%|████▏     | 8353/19996 [00:36<00:51, 225.53 examples/s]Map:  42%|████▏     | 8426/19996 [00:36<00:52, 220.94 examples/s]Map:  42%|████▏     | 8402/19996 [00:36<00:51, 226.19 examples/s]Map:  42%|████▏     | 8452/19996 [00:37<00:50, 229.39 examples/s]Map:  42%|████▏     | 8388/19996 [00:37<00:51, 223.78 examples/s]Map:  42%|████▏     | 8440/19996 [00:37<00:50, 228.51 examples/s]Map:  42%|████▏     | 8412/19996 [00:37<00:51, 223.81 examples/s]Map:  42%|████▏     | 8484/19996 [00:37<00:52, 219.57 examples/s]Map:  42%|████▏     | 8472/19996 [00:37<00:52, 220.94 examples/s]Map:  42%|████▏     | 8440/19996 [00:37<00:50, 230.38 examples/s]Map:  43%|████▎     | 8520/19996 [00:37<00:51, 221.23 examples/s]Map:  43%|████▎     | 8504/19996 [00:37<00:54, 211.22 examples/s]Map:  42%|████▏     | 8472/19996 [00:37<00:52, 221.20 examples/s]Map:  43%|████▎     | 8543/19996 [00:37<00:51, 220.65 examples/s]Map:  43%|████▎     | 8530/19996 [00:37<00:52, 218.72 examples/s]Map:  43%|████▎     | 8570/19996 [00:37<00:49, 231.44 examples/s]Map:  43%|████▎     | 8503/19996 [00:37<00:55, 208.60 examples/s]Map:  43%|████▎     | 8556/19996 [00:37<00:50, 227.06 examples/s]Map:  43%|████▎     | 8603/19996 [00:37<00:50, 224.97 examples/s]Map:  43%|████▎     | 8530/19996 [00:37<00:52, 218.06 examples/s]Map:  43%|████▎     | 8582/19996 [00:37<00:48, 234.05 examples/s]Map:  43%|████▎     | 8556/19996 [00:37<00:50, 226.61 examples/s]Map:  43%|████▎     | 8606/19996 [00:37<00:49, 229.17 examples/s]Map:  43%|████▎     | 8639/19996 [00:37<00:50, 226.46 examples/s]Map:  43%|████▎     | 8582/19996 [00:37<00:49, 232.47 examples/s]Map:  43%|████▎     | 8666/19996 [00:37<00:48, 235.49 examples/s]Map:  43%|████▎     | 8640/19996 [00:38<00:50, 226.11 examples/s]Map:  43%|████▎     | 8606/19996 [00:38<00:49, 228.83 examples/s]Map:  43%|████▎     | 8690/19996 [00:38<00:48, 231.99 examples/s]Map:  43%|████▎     | 8667/19996 [00:38<00:47, 236.20 examples/s]Map:  44%|████▎     | 8715/19996 [00:38<00:47, 235.55 examples/s]Map:  43%|████▎     | 8640/19996 [00:38<00:50, 225.44 examples/s]Map:  44%|████▎     | 8703/19996 [00:38<00:48, 233.15 examples/s]Map:  44%|████▎     | 8743/19996 [00:38<00:45, 247.02 examples/s]Map:  43%|████▎     | 8667/19996 [00:38<00:48, 234.84 examples/s]Map:  44%|████▎     | 8732/19996 [00:38<00:46, 241.73 examples/s]Map:  44%|████▎     | 8702/19996 [00:38<00:48, 230.86 examples/s]Map:  44%|████▍     | 8775/19996 [00:38<00:49, 225.06 examples/s]Map:  44%|████▍     | 8757/19996 [00:38<00:46, 241.38 examples/s]Map:  44%|████▎     | 8729/19996 [00:38<00:47, 236.46 examples/s]Map:  44%|████▍     | 8813/19996 [00:38<00:48, 228.96 examples/s]Map:  44%|████▍     | 8786/19996 [00:38<00:52, 213.92 examples/s]Map:  44%|████▍     | 8755/19996 [00:38<00:46, 240.83 examples/s]Map:  44%|████▍     | 8842/19996 [00:38<00:46, 241.79 examples/s]Map:  44%|████▍     | 8815/19996 [00:38<00:48, 230.51 examples/s]Map:  44%|████▍     | 8784/19996 [00:38<00:50, 220.57 examples/s]Map:  44%|████▍     | 8874/19996 [00:38<00:42, 260.18 examples/s]Map:  44%|████▍     | 8844/19996 [00:38<00:46, 241.79 examples/s]Map:  44%|████▍     | 8807/19996 [00:38<00:50, 220.15 examples/s]Map:  45%|████▍     | 8904/19996 [00:38<00:41, 267.45 examples/s]Map:  44%|████▍     | 8878/19996 [00:38<00:41, 265.10 examples/s]Map:  44%|████▍     | 8833/19996 [00:39<00:48, 230.35 examples/s]Map:  45%|████▍     | 8941/19996 [00:39<00:43, 255.67 examples/s]Map:  44%|████▍     | 8864/19996 [00:39<00:44, 248.38 examples/s]Map:  45%|████▍     | 8920/19996 [00:39<00:42, 263.30 examples/s]Map:  45%|████▍     | 8969/19996 [00:39<00:42, 258.69 examples/s]Map:  44%|████▍     | 8896/19996 [00:39<00:42, 263.20 examples/s]Map:  45%|████▍     | 8959/19996 [00:39<00:42, 259.63 examples/s]Map:  45%|████▍     | 8923/19996 [00:39<00:42, 258.44 examples/s]Map:  45%|████▍     | 8995/19996 [00:39<00:43, 250.88 examples/s]Map:  45%|████▍     | 8963/19996 [00:39<00:42, 256.85 examples/s]Map:  45%|████▌     | 9000/19996 [00:39<01:16, 143.56 examples/s]Map:  45%|████▌     | 8999/19996 [00:39<00:44, 246.39 examples/s]Map:  45%|████▌     | 9031/19996 [00:39<01:10, 156.25 examples/s]Map:  45%|████▌     | 9030/19996 [00:39<01:15, 144.64 examples/s]Map:  45%|████▌     | 9061/19996 [00:39<01:06, 164.87 examples/s]Map:  45%|████▌     | 9086/19996 [00:40<01:01, 178.26 examples/s]Map:  45%|████▌     | 9057/19996 [00:40<01:12, 150.75 examples/s]Map:  45%|████▌     | 9029/19996 [00:40<01:22, 133.62 examples/s]Map:  46%|████▌     | 9107/19996 [00:40<00:59, 183.05 examples/s]Map:  45%|████▌     | 9084/19996 [00:40<01:04, 168.64 examples/s]Map:  46%|████▌     | 9130/19996 [00:40<00:58, 185.78 examples/s]Map:  46%|████▌     | 9106/19996 [00:40<01:01, 176.23 examples/s]Map:  45%|████▌     | 9061/19996 [00:40<01:13, 148.39 examples/s]Map:  45%|████▌     | 9089/19996 [00:40<01:05, 167.15 examples/s]Map:  46%|████▌     | 9157/19996 [00:40<00:59, 182.65 examples/s]Map:  46%|████▌     | 9133/19996 [00:40<01:02, 172.94 examples/s]Map:  46%|████▌     | 9178/19996 [00:40<00:57, 187.17 examples/s]Map:  46%|████▌     | 9120/19996 [00:40<01:02, 173.39 examples/s]Map:  46%|████▌     | 9164/19996 [00:40<00:59, 180.55 examples/s]Map:  46%|████▌     | 9204/19996 [00:40<00:53, 202.47 examples/s]Map:  46%|████▌     | 9188/19996 [00:40<00:56, 192.55 examples/s]Map:  46%|████▌     | 9147/19996 [00:40<01:02, 173.18 examples/s]Map:  46%|████▌     | 9226/19996 [00:40<00:52, 205.73 examples/s]Map:  46%|████▌     | 9212/19996 [00:40<00:53, 200.20 examples/s]Map:  46%|████▌     | 9168/19996 [00:40<01:00, 180.04 examples/s]Map:  46%|████▋     | 9254/19996 [00:40<00:47, 224.23 examples/s]Map:  46%|████▌     | 9235/19996 [00:40<00:52, 204.28 examples/s]Map:  46%|████▌     | 9192/19996 [00:40<00:56, 191.98 examples/s]Map:  46%|████▋     | 9285/19996 [00:41<00:51, 207.23 examples/s]Map:  46%|████▋     | 9261/19996 [00:41<00:50, 211.87 examples/s]Map:  46%|████▌     | 9217/19996 [00:41<00:53, 202.85 examples/s]Map:  47%|████▋     | 9309/19996 [00:41<00:50, 213.59 examples/s]Map:  46%|████▌     | 9241/19996 [00:41<00:51, 210.04 examples/s]Map:  46%|████▋     | 9291/19996 [00:41<00:52, 204.08 examples/s]Map:  47%|████▋     | 9335/19996 [00:41<00:47, 223.17 examples/s]Map:  46%|████▋     | 9264/19996 [00:41<00:51, 206.77 examples/s]Map:  47%|████▋     | 9315/19996 [00:41<00:50, 210.06 examples/s]Map:  47%|████▋     | 9362/19996 [00:41<00:46, 229.73 examples/s]Map:  47%|████▋     | 9341/19996 [00:41<00:48, 221.91 examples/s]Map:  46%|████▋     | 9298/19996 [00:41<00:50, 212.37 examples/s]Map:  47%|████▋     | 9386/19996 [00:41<00:46, 229.59 examples/s]Map:  47%|████▋     | 9368/19996 [00:41<00:45, 231.82 examples/s]Map:  47%|████▋     | 9322/19996 [00:41<00:49, 216.16 examples/s]Map:  47%|████▋     | 9412/19996 [00:41<00:44, 235.78 examples/s]Map:  47%|████▋     | 9347/19996 [00:41<00:49, 216.49 examples/s]Map:  47%|████▋     | 9404/19996 [00:41<00:46, 229.78 examples/s]Map:  47%|████▋     | 9448/19996 [00:41<00:44, 234.94 examples/s]Map:  47%|████▋     | 9375/19996 [00:41<00:45, 231.58 examples/s]Map:  47%|████▋     | 9428/19996 [00:41<00:45, 231.45 examples/s]Map:  47%|████▋     | 9472/19996 [00:41<00:45, 233.59 examples/s]Map:  47%|████▋     | 9400/19996 [00:41<00:44, 235.89 examples/s]Map:  47%|████▋     | 9498/19996 [00:41<00:44, 236.26 examples/s]Map:  47%|████▋     | 9462/19996 [00:41<00:47, 222.75 examples/s]Map:  47%|████▋     | 9425/19996 [00:41<00:44, 235.17 examples/s]Map:  47%|████▋     | 9490/19996 [00:42<00:45, 231.64 examples/s]Map:  48%|████▊     | 9530/19996 [00:42<00:47, 219.15 examples/s]Map:  47%|████▋     | 9458/19996 [00:42<00:46, 225.11 examples/s]Map:  48%|████▊     | 9555/19996 [00:42<00:46, 225.36 examples/s]Map:  48%|████▊     | 9521/19996 [00:42<00:47, 220.08 examples/s]Map:  47%|████▋     | 9486/19996 [00:42<00:44, 234.34 examples/s]Map:  48%|████▊     | 9578/19996 [00:42<00:46, 224.99 examples/s]Map:  48%|████▊     | 9547/19996 [00:42<00:46, 226.81 examples/s]Map:  48%|████▊     | 9518/19996 [00:42<00:47, 220.61 examples/s]Map:  48%|████▊     | 9602/19996 [00:42<00:46, 224.92 examples/s]Map:  48%|████▊     | 9583/19996 [00:42<00:46, 226.30 examples/s]Map:  48%|████▊     | 9625/19996 [00:42<00:46, 223.30 examples/s]Map:  48%|████▊     | 9555/19996 [00:42<00:47, 221.13 examples/s]Map:  48%|████▊     | 9607/19996 [00:42<00:47, 218.16 examples/s]Map:  48%|████▊     | 9662/19996 [00:42<00:45, 228.55 examples/s]Map:  48%|████▊     | 9630/19996 [00:42<00:47, 217.09 examples/s]Map:  48%|████▊     | 9590/19996 [00:42<00:47, 221.32 examples/s]Map:  48%|████▊     | 9689/19996 [00:42<00:43, 238.39 examples/s]Map:  48%|████▊     | 9659/19996 [00:42<00:44, 231.81 examples/s]Map:  48%|████▊     | 9613/19996 [00:42<00:47, 219.48 examples/s]Map:  49%|████▊     | 9722/19996 [00:42<00:44, 229.60 examples/s]Map:  48%|████▊     | 9683/19996 [00:42<00:44, 232.66 examples/s]Map:  48%|████▊     | 9645/19996 [00:42<00:48, 213.08 examples/s]Map:  49%|████▊     | 9708/19996 [00:43<00:43, 236.32 examples/s]Map:  49%|████▊     | 9746/19996 [00:43<00:44, 229.82 examples/s]Map:  48%|████▊     | 9676/19996 [00:43<00:44, 233.46 examples/s]Map:  49%|████▉     | 9775/19996 [00:43<00:43, 236.46 examples/s]Map:  49%|████▊     | 9744/19996 [00:43<00:43, 235.83 examples/s]Map:  49%|████▊     | 9701/19996 [00:43<00:43, 236.91 examples/s]Map:  49%|████▉     | 9775/19996 [00:43<00:41, 246.27 examples/s]Map:  49%|████▉     | 9807/19996 [00:43<00:45, 221.63 examples/s]Map:  49%|████▊     | 9735/19996 [00:43<00:44, 228.72 examples/s]Map:  49%|████▉     | 9832/19996 [00:43<00:44, 226.72 examples/s]Map:  49%|████▉     | 9765/19996 [00:43<00:41, 244.47 examples/s]Map:  49%|████▉     | 9804/19996 [00:43<00:46, 217.21 examples/s]Map:  49%|████▉     | 9866/19996 [00:43<00:45, 223.28 examples/s]Map:  49%|████▉     | 9827/19996 [00:43<00:46, 219.13 examples/s]Map:  49%|████▉     | 9795/19996 [00:43<00:47, 215.79 examples/s]Map:  49%|████▉     | 9893/19996 [00:43<00:43, 233.71 examples/s]Map:  49%|████▉     | 9853/19996 [00:43<00:45, 224.29 examples/s]Map:  49%|████▉     | 9820/19996 [00:43<00:45, 221.32 examples/s]Map:  50%|████▉     | 9919/19996 [00:43<00:42, 237.70 examples/s]Map:  49%|████▉     | 9878/19996 [00:43<00:44, 229.67 examples/s]Map:  50%|████▉     | 9945/19996 [00:43<00:41, 240.52 examples/s]Map:  50%|████▉     | 9906/19996 [00:43<00:41, 241.80 examples/s]Map:  49%|████▉     | 9855/19996 [00:43<00:45, 222.23 examples/s]Map:  49%|████▉     | 9880/19996 [00:43<00:44, 225.73 examples/s]Map:  50%|████▉     | 9981/19996 [00:44<00:42, 237.53 examples/s]Map:  50%|████▉     | 9945/19996 [00:44<00:41, 243.82 examples/s]Map:  50%|████▉     | 9911/19996 [00:44<00:42, 237.85 examples/s]Map:  50%|████▉     | 9981/19996 [00:44<00:41, 239.91 examples/s]Map:  50%|████▉     | 9936/19996 [00:44<00:42, 236.68 examples/s]Map:  50%|████▉     | 9973/19996 [00:44<00:42, 236.18 examples/s]Map:  50%|█████     | 10011/19996 [00:44<01:10, 140.81 examples/s]Map:  50%|█████     | 10038/19996 [00:44<01:06, 149.34 examples/s]Map:  50%|█████     | 10011/19996 [00:44<01:10, 142.17 examples/s]Map:  50%|█████     | 10068/19996 [00:44<01:02, 158.78 examples/s]Map:  50%|█████     | 10042/19996 [00:44<01:05, 151.76 examples/s]Map:  50%|█████     | 10000/19996 [00:44<01:12, 138.17 examples/s]Map:  50%|█████     | 10091/19996 [00:44<00:57, 171.43 examples/s]Map:  50%|█████     | 10023/19996 [00:44<01:08, 146.49 examples/s]Map:  50%|█████     | 10071/19996 [00:44<01:02, 158.30 examples/s]Map:  51%|█████     | 10111/19996 [00:44<00:56, 176.06 examples/s]Map:  50%|█████     | 10045/19996 [00:45<01:03, 157.27 examples/s]Map:  50%|█████     | 10094/19996 [00:45<00:58, 170.63 examples/s]Map:  51%|█████     | 10135/19996 [00:45<00:51, 189.73 examples/s]Map:  51%|█████     | 10115/19996 [00:45<00:56, 175.50 examples/s]Map:  51%|█████     | 10157/19996 [00:45<00:51, 192.11 examples/s]Map:  50%|█████     | 10072/19996 [00:45<01:01, 160.49 examples/s]Map:  51%|█████     | 10140/19996 [00:45<00:51, 190.93 examples/s]Map:  51%|█████     | 10179/19996 [00:45<00:50, 196.09 examples/s]Map:  50%|█████     | 10095/19996 [00:45<00:57, 172.99 examples/s]Map:  51%|█████     | 10164/19996 [00:45<00:49, 199.84 examples/s]Map:  51%|█████     | 10204/19996 [00:45<00:47, 206.39 examples/s]Map:  51%|█████     | 10118/19996 [00:45<00:54, 181.26 examples/s]Map:  51%|█████     | 10230/19996 [00:45<00:44, 217.34 examples/s]Map:  51%|█████     | 10145/19996 [00:45<00:50, 194.12 examples/s]Map:  51%|█████     | 10197/19996 [00:45<00:48, 202.47 examples/s]Map:  51%|█████▏    | 10253/19996 [00:45<00:44, 217.20 examples/s]Map:  51%|█████     | 10171/19996 [00:45<00:47, 206.61 examples/s]Map:  51%|█████     | 10222/19996 [00:45<00:47, 206.93 examples/s]Map:  51%|█████▏    | 10278/19996 [00:45<00:43, 221.82 examples/s]Map:  51%|█████     | 10193/19996 [00:45<00:47, 207.02 examples/s]Map:  51%|█████▏    | 10249/19996 [00:45<00:44, 221.24 examples/s]Map:  52%|█████▏    | 10307/19996 [00:45<00:40, 237.06 examples/s]Map:  51%|█████     | 10218/19996 [00:45<00:45, 213.44 examples/s]Map:  51%|█████▏    | 10273/19996 [00:45<00:43, 222.20 examples/s]Map:  52%|█████▏    | 10332/19996 [00:45<00:40, 239.05 examples/s]Map:  51%|█████▏    | 10297/19996 [00:45<00:43, 224.10 examples/s]Map:  51%|█████     | 10246/19996 [00:45<00:42, 226.87 examples/s]Map:  52%|█████▏    | 10326/19996 [00:46<00:40, 238.64 examples/s]Map:  51%|█████▏    | 10272/19996 [00:46<00:42, 228.20 examples/s]Map:  52%|█████▏    | 10365/19996 [00:46<00:42, 226.79 examples/s]Map:  52%|█████▏    | 10393/19996 [00:46<00:40, 239.59 examples/s]Map:  52%|█████▏    | 10355/19996 [00:46<00:44, 215.23 examples/s]Map:  52%|█████▏    | 10308/19996 [00:46<00:42, 225.59 examples/s]Map:  52%|█████▏    | 10422/19996 [00:46<00:37, 252.41 examples/s]Map:  52%|█████▏    | 10385/19996 [00:46<00:40, 234.88 examples/s]Map:  52%|█████▏    | 10335/19996 [00:46<00:41, 234.64 examples/s]Map:  52%|█████▏    | 10411/19996 [00:46<00:39, 241.09 examples/s]Map:  52%|█████▏    | 10461/19996 [00:46<00:38, 250.55 examples/s]Map:  52%|█████▏    | 10367/19996 [00:46<00:43, 222.20 examples/s]Map:  52%|█████▏    | 10436/19996 [00:46<00:39, 239.24 examples/s]Map:  52%|█████▏    | 10395/19996 [00:46<00:41, 233.45 examples/s]Map:  53%|█████▎    | 10501/19996 [00:46<00:38, 247.04 examples/s]Map:  52%|█████▏    | 10464/19996 [00:46<00:38, 250.08 examples/s]Map:  53%|█████▎    | 10531/19996 [00:46<00:36, 257.96 examples/s]Map:  52%|█████▏    | 10423/19996 [00:46<00:40, 237.45 examples/s]Map:  53%|█████▎    | 10501/19996 [00:46<00:38, 243.69 examples/s]Map:  52%|█████▏    | 10450/19996 [00:46<00:39, 242.67 examples/s]Map:  53%|█████▎    | 10569/19996 [00:46<00:37, 252.53 examples/s]Map:  53%|█████▎    | 10531/19996 [00:46<00:36, 256.09 examples/s]Map:  52%|█████▏    | 10480/19996 [00:46<00:37, 251.68 examples/s]Map:  53%|█████▎    | 10606/19996 [00:47<00:38, 244.35 examples/s]Map:  53%|█████▎    | 10506/19996 [00:47<00:37, 253.53 examples/s]Map:  53%|█████▎    | 10569/19996 [00:47<00:37, 251.20 examples/s]Map:  53%|█████▎    | 10534/19996 [00:47<00:36, 259.24 examples/s]Map:  53%|█████▎    | 10639/19996 [00:47<00:41, 227.55 examples/s]Map:  53%|█████▎    | 10604/19996 [00:47<00:39, 239.49 examples/s]Map:  53%|█████▎    | 10568/19996 [00:47<00:38, 243.90 examples/s]Map:  53%|█████▎    | 10664/19996 [00:47<00:40, 227.66 examples/s]Map:  53%|█████▎    | 10635/19996 [00:47<00:41, 223.58 examples/s]Map:  53%|█████▎    | 10693/19996 [00:47<00:39, 233.44 examples/s]Map:  53%|█████▎    | 10604/19996 [00:47<00:39, 237.95 examples/s]Map:  53%|█████▎    | 10658/19996 [00:47<00:41, 223.49 examples/s]Map:  54%|█████▎    | 10720/19996 [00:47<00:43, 210.83 examples/s]Map:  53%|█████▎    | 10688/19996 [00:47<00:39, 236.58 examples/s]Map:  53%|█████▎    | 10632/19996 [00:47<00:42, 218.81 examples/s]Map:  54%|█████▎    | 10747/19996 [00:47<00:42, 218.53 examples/s]Map:  53%|█████▎    | 10656/19996 [00:47<00:42, 217.31 examples/s]Map:  54%|█████▎    | 10714/19996 [00:47<00:43, 213.98 examples/s]Map:  54%|█████▍    | 10777/19996 [00:47<00:40, 230.03 examples/s]Map:  53%|█████▎    | 10684/19996 [00:47<00:40, 230.07 examples/s]Map:  54%|█████▎    | 10738/19996 [00:47<00:42, 218.44 examples/s]Map:  54%|█████▍    | 10801/19996 [00:47<00:40, 225.93 examples/s]Map:  54%|█████▍    | 10763/19996 [00:47<00:41, 222.85 examples/s]Map:  54%|█████▎    | 10714/19996 [00:47<00:43, 214.33 examples/s]Map:  54%|█████▍    | 10828/19996 [00:48<00:38, 235.54 examples/s]Map:  54%|█████▍    | 10789/19996 [00:48<00:40, 229.19 examples/s]Map:  54%|█████▎    | 10739/19996 [00:48<00:42, 219.38 examples/s]Map:  54%|█████▍    | 10814/19996 [00:48<00:39, 234.24 examples/s]Map:  54%|█████▍    | 10861/19996 [00:48<00:40, 227.98 examples/s]Map:  54%|█████▍    | 10763/19996 [00:48<00:41, 222.81 examples/s]Map:  54%|█████▍    | 10887/19996 [00:48<00:39, 230.18 examples/s]Map:  54%|█████▍    | 10789/19996 [00:48<00:40, 228.88 examples/s]Map:  54%|█████▍    | 10847/19996 [00:48<00:40, 223.67 examples/s]Map:  54%|█████▍    | 10814/19996 [00:48<00:39, 233.76 examples/s]Map:  54%|█████▍    | 10874/19996 [00:48<00:38, 234.89 examples/s]Map:  55%|█████▍    | 10918/19996 [00:48<00:41, 219.16 examples/s]Map:  55%|█████▍    | 10941/19996 [00:48<00:41, 216.50 examples/s]Map:  54%|█████▍    | 10846/19996 [00:48<00:41, 220.77 examples/s]Map:  55%|█████▍    | 10906/19996 [00:48<00:41, 220.38 examples/s]Map:  54%|█████▍    | 10871/19996 [00:48<00:40, 225.22 examples/s]Map:  55%|█████▍    | 10930/19996 [00:48<00:40, 222.02 examples/s]Map:  55%|█████▍    | 10972/19996 [00:48<00:42, 210.68 examples/s]Map:  54%|█████▍    | 10896/19996 [00:48<00:41, 219.83 examples/s]Map:  55%|█████▍    | 10955/19996 [00:48<00:40, 221.89 examples/s]Map:  55%|█████▍    | 10997/19996 [00:48<00:41, 217.09 examples/s]Map:  55%|█████▍    | 10923/19996 [00:48<00:39, 230.24 examples/s]Map:  55%|█████▍    | 10984/19996 [00:48<00:42, 210.27 examples/s]Map:  55%|█████▍    | 10955/19996 [00:49<00:41, 216.90 examples/s]Map:  55%|█████▍    | 10984/19996 [00:49<00:43, 207.67 examples/s]Map:  55%|█████▌    | 11020/19996 [00:49<01:14, 120.94 examples/s]Map:  55%|█████▌    | 11042/19996 [00:49<01:05, 136.12 examples/s]Map:  55%|█████▌    | 11007/19996 [00:49<01:14, 119.96 examples/s]Map:  55%|█████▌    | 11067/19996 [00:49<00:56, 157.27 examples/s]Map:  55%|█████▌    | 11029/19996 [00:49<01:06, 134.31 examples/s]Map:  55%|█████▌    | 11095/19996 [00:49<00:49, 179.85 examples/s]Map:  55%|█████▌    | 11052/19996 [00:49<00:59, 150.01 examples/s]Map:  55%|█████▌    | 11007/19996 [00:49<01:15, 119.16 examples/s]Map:  56%|█████▌    | 11117/19996 [00:49<00:47, 188.00 examples/s]Map:  55%|█████▌    | 11077/19996 [00:49<00:52, 169.76 examples/s]Map:  55%|█████▌    | 11029/19996 [00:49<01:07, 133.50 examples/s]Map:  56%|█████▌    | 11143/19996 [00:49<00:43, 203.73 examples/s]Map:  56%|█████▌    | 11100/19996 [00:49<00:49, 178.89 examples/s]Map:  55%|█████▌    | 11052/19996 [00:49<00:59, 151.00 examples/s]Map:  56%|█████▌    | 11167/19996 [00:49<00:42, 208.21 examples/s]Map:  56%|█████▌    | 11129/19996 [00:49<00:43, 202.67 examples/s]Map:  55%|█████▌    | 11078/19996 [00:49<00:51, 172.26 examples/s]Map:  56%|█████▌    | 11190/19996 [00:49<00:41, 212.46 examples/s]Map:  56%|█████▌    | 11155/19996 [00:50<00:41, 214.30 examples/s]Map:  56%|█████▌    | 11100/19996 [00:50<00:50, 177.19 examples/s]Map:  56%|█████▌    | 11226/19996 [00:50<00:40, 217.23 examples/s]Map:  56%|█████▌    | 11129/19996 [00:50<00:44, 200.88 examples/s]Map:  56%|█████▌    | 11186/19996 [00:50<00:42, 209.35 examples/s]Map:  56%|█████▌    | 11154/19996 [00:50<00:42, 210.04 examples/s]Map:  56%|█████▋    | 11261/19996 [00:50<00:41, 212.29 examples/s]Map:  56%|█████▌    | 11216/19996 [00:50<00:43, 202.73 examples/s]Map:  56%|█████▋    | 11283/19996 [00:50<00:42, 206.79 examples/s]Map:  56%|█████▌    | 11187/19996 [00:50<00:42, 205.91 examples/s]Map:  56%|█████▌    | 11242/19996 [00:50<00:41, 211.02 examples/s]Map:  57%|█████▋    | 11308/19996 [00:50<00:40, 215.47 examples/s]Map:  56%|█████▌    | 11216/19996 [00:50<00:43, 199.97 examples/s]Map:  56%|█████▋    | 11273/19996 [00:50<00:42, 205.69 examples/s]Map:  57%|█████▋    | 11330/19996 [00:50<00:41, 208.60 examples/s]Map:  56%|█████▌    | 11242/19996 [00:50<00:41, 210.52 examples/s]Map:  56%|█████▋    | 11296/19996 [00:50<00:41, 208.03 examples/s]Map:  57%|█████▋    | 11357/19996 [00:50<00:41, 210.49 examples/s]Map:  57%|█████▋    | 11318/19996 [00:50<00:41, 206.65 examples/s]Map:  56%|█████▋    | 11274/19996 [00:50<00:41, 207.77 examples/s]Map:  57%|█████▋    | 11380/19996 [00:50<00:41, 209.17 examples/s]Map:  57%|█████▋    | 11343/19996 [00:50<00:40, 214.20 examples/s]Map:  56%|█████▋    | 11296/19996 [00:50<00:41, 207.23 examples/s]Map:  57%|█████▋    | 11365/19996 [00:51<00:40, 212.66 examples/s]Map:  57%|█████▋    | 11408/19996 [00:51<00:43, 196.83 examples/s]Map:  57%|█████▋    | 11318/19996 [00:51<00:42, 206.18 examples/s]Map:  57%|█████▋    | 11432/19996 [00:51<00:42, 203.54 examples/s]Map:  57%|█████▋    | 11342/19996 [00:51<00:41, 210.70 examples/s]Map:  57%|█████▋    | 11397/19996 [00:51<00:41, 207.35 examples/s]Map:  57%|█████▋    | 11454/19996 [00:51<00:41, 203.78 examples/s]Map:  57%|█████▋    | 11371/19996 [00:51<00:42, 204.03 examples/s]Map:  57%|█████▋    | 11426/19996 [00:51<00:43, 199.16 examples/s]Map:  57%|█████▋    | 11481/19996 [00:51<00:44, 191.76 examples/s]Map:  57%|█████▋    | 11395/19996 [00:51<00:41, 209.16 examples/s]Map:  57%|█████▋    | 11451/19996 [00:51<00:40, 209.68 examples/s]Map:  58%|█████▊    | 11503/19996 [00:51<00:43, 196.74 examples/s]Map:  57%|█████▋    | 11425/19996 [00:51<00:42, 201.22 examples/s]Map:  57%|█████▋    | 11474/19996 [00:51<00:45, 186.23 examples/s]Map:  58%|█████▊    | 11535/19996 [00:51<00:42, 200.29 examples/s]Map:  57%|█████▋    | 11451/19996 [00:51<00:40, 213.54 examples/s]Map:  57%|█████▋    | 11496/19996 [00:51<00:44, 191.76 examples/s]Map:  58%|█████▊    | 11559/19996 [00:51<00:40, 205.99 examples/s]Map:  58%|█████▊    | 11519/19996 [00:51<00:42, 199.80 examples/s]Map:  57%|█████▋    | 11475/19996 [00:51<00:44, 190.80 examples/s]Map:  58%|█████▊    | 11583/19996 [00:51<00:39, 211.92 examples/s]Map:  58%|█████▊    | 11541/19996 [00:51<00:41, 202.07 examples/s]Map:  58%|█████▊    | 11498/19996 [00:51<00:42, 198.22 examples/s]Map:  58%|█████▊    | 11605/19996 [00:51<00:39, 213.62 examples/s]Map:  58%|█████▊    | 11564/19996 [00:52<00:41, 203.01 examples/s]Map:  58%|█████▊    | 11521/19996 [00:52<00:42, 200.30 examples/s]Map:  58%|█████▊    | 11633/19996 [00:52<00:37, 225.22 examples/s]Map:  58%|█████▊    | 11592/19996 [00:52<00:38, 216.35 examples/s]Map:  58%|█████▊    | 11544/19996 [00:52<00:41, 204.99 examples/s]Map:  58%|█████▊    | 11662/19996 [00:52<00:35, 234.29 examples/s]Map:  58%|█████▊    | 11617/19996 [00:52<00:39, 211.35 examples/s]Map:  58%|█████▊    | 11565/19996 [00:52<00:41, 204.84 examples/s]Map:  58%|█████▊    | 11691/19996 [00:52<00:35, 234.30 examples/s]Map:  58%|█████▊    | 11645/19996 [00:52<00:36, 226.25 examples/s]Map:  58%|█████▊    | 11590/19996 [00:52<00:39, 214.62 examples/s]Map:  58%|█████▊    | 11673/19996 [00:52<00:34, 237.86 examples/s]Map:  59%|█████▊    | 11726/19996 [00:52<00:36, 228.02 examples/s]Map:  58%|█████▊    | 11615/19996 [00:52<00:37, 223.32 examples/s]Map:  59%|█████▉    | 11752/19996 [00:52<00:35, 232.55 examples/s]Map:  59%|█████▊    | 11704/19996 [00:52<00:36, 224.71 examples/s]Map:  58%|█████▊    | 11646/19996 [00:52<00:38, 214.42 examples/s]Map:  59%|█████▉    | 11778/19996 [00:52<00:36, 227.41 examples/s]Map:  59%|█████▊    | 11729/19996 [00:52<00:35, 230.53 examples/s]Map:  58%|█████▊    | 11677/19996 [00:52<00:35, 234.19 examples/s]Map:  59%|█████▉    | 11755/19996 [00:52<00:34, 236.84 examples/s]Map:  59%|█████▉    | 11807/19996 [00:52<00:38, 211.36 examples/s]Map:  59%|█████▊    | 11701/19996 [00:52<00:36, 226.69 examples/s]Map:  59%|█████▊    | 11725/19996 [00:52<00:36, 229.73 examples/s]Map:  59%|█████▉    | 11833/19996 [00:52<00:37, 220.55 examples/s]Map:  59%|█████▉    | 11787/19996 [00:52<00:37, 220.74 examples/s]Map:  59%|█████▉    | 11754/19996 [00:53<00:33, 242.61 examples/s]Map:  59%|█████▉    | 11861/19996 [00:53<00:34, 232.86 examples/s]Map:  59%|█████▉    | 11822/19996 [00:53<00:36, 221.63 examples/s]Map:  59%|█████▉    | 11886/19996 [00:53<00:34, 232.51 examples/s]Map:  59%|█████▉    | 11786/19996 [00:53<00:36, 226.21 examples/s]Map:  59%|█████▉    | 11848/19996 [00:53<00:35, 228.73 examples/s]Map:  60%|█████▉    | 11910/19996 [00:53<00:35, 229.56 examples/s]Map:  59%|█████▉    | 11876/19996 [00:53<00:34, 234.57 examples/s]Map:  59%|█████▉    | 11820/19996 [00:53<00:37, 220.81 examples/s]Map:  60%|█████▉    | 11941/19996 [00:53<00:37, 217.58 examples/s]Map:  60%|█████▉    | 11900/19996 [00:53<00:34, 233.08 examples/s]Map:  59%|█████▉    | 11846/19996 [00:53<00:35, 229.45 examples/s]Map:  60%|█████▉    | 11964/19996 [00:53<00:37, 216.54 examples/s]Map:  59%|█████▉    | 11874/19996 [00:53<00:34, 236.62 examples/s]Map:  60%|█████▉    | 11933/19996 [00:53<00:35, 225.90 examples/s]Map:  60%|█████▉    | 11991/19996 [00:53<00:34, 230.00 examples/s]Map:  60%|█████▉    | 11908/19996 [00:53<00:35, 226.53 examples/s]Map:  60%|█████▉    | 11964/19996 [00:53<00:37, 215.66 examples/s]Map:  60%|█████▉    | 11992/19996 [00:53<00:35, 227.76 examples/s]Map:  60%|█████▉    | 11940/19996 [00:53<00:37, 217.44 examples/s]Map:  60%|█████▉    | 11974/19996 [00:54<00:36, 219.28 examples/s]Map:  60%|██████    | 12026/19996 [00:54<00:59, 133.79 examples/s]Map:  60%|██████    | 12052/19996 [00:54<00:51, 154.07 examples/s]Map:  60%|██████    | 12026/19996 [00:54<00:57, 137.59 examples/s]Map:  60%|██████    | 12083/19996 [00:54<00:47, 166.15 examples/s]Map:  60%|██████    | 12051/19996 [00:54<00:51, 155.32 examples/s]Map:  61%|██████    | 12107/19996 [00:54<00:43, 179.48 examples/s]Map:  60%|██████    | 12000/19996 [00:54<00:59, 133.62 examples/s]Map:  61%|██████    | 12138/19996 [00:54<00:38, 202.52 examples/s]Map:  60%|██████    | 12080/19996 [00:54<00:48, 164.00 examples/s]Map:  60%|██████    | 12025/19996 [00:54<00:52, 151.45 examples/s]Map:  61%|██████    | 12102/19996 [00:54<00:45, 173.85 examples/s]Map:  60%|██████    | 12049/19996 [00:54<00:47, 167.50 examples/s]Map:  61%|██████    | 12174/19996 [00:54<00:37, 210.78 examples/s]Map:  61%|██████    | 12133/19996 [00:54<00:39, 200.31 examples/s]Map:  60%|██████    | 12071/19996 [00:54<00:45, 174.46 examples/s]Map:  61%|██████    | 12210/19996 [00:54<00:36, 215.48 examples/s]Map:  61%|██████    | 12157/19996 [00:54<00:38, 205.59 examples/s]Map:  60%|██████    | 12096/19996 [00:54<00:41, 189.26 examples/s]Map:  61%|██████    | 12235/19996 [00:55<00:35, 219.12 examples/s]Map:  61%|██████    | 12183/19996 [00:55<00:36, 216.14 examples/s]Map:  61%|██████    | 12123/19996 [00:55<00:38, 206.86 examples/s]Map:  61%|██████    | 12146/19996 [00:55<00:37, 207.52 examples/s]Map:  61%|██████▏   | 12268/19996 [00:55<00:35, 215.66 examples/s]Map:  61%|██████    | 12217/19996 [00:55<00:35, 216.11 examples/s]Map:  61%|██████    | 12170/19996 [00:55<00:36, 212.30 examples/s]Map:  61%|██████    | 12240/19996 [00:55<00:35, 217.40 examples/s]Map:  62%|██████▏   | 12299/19996 [00:55<00:36, 210.20 examples/s]Map:  61%|██████    | 12202/19996 [00:55<00:36, 211.66 examples/s]Map:  62%|██████▏   | 12329/19996 [00:55<00:33, 226.93 examples/s]Map:  61%|██████▏   | 12270/19996 [00:55<00:37, 206.48 examples/s]Map:  61%|██████    | 12227/19996 [00:55<00:35, 218.31 examples/s]Map:  62%|██████▏   | 12356/19996 [00:55<00:33, 230.60 examples/s]Map:  62%|██████▏   | 12304/19996 [00:55<00:36, 208.59 examples/s]Map:  61%|██████▏   | 12259/19996 [00:55<00:36, 212.60 examples/s]Map:  62%|██████▏   | 12381/19996 [00:55<00:32, 231.54 examples/s]Map:  62%|██████▏   | 12335/19996 [00:55<00:33, 230.59 examples/s]Map:  61%|██████▏   | 12282/19996 [00:55<00:36, 213.14 examples/s]Map:  62%|██████▏   | 12415/19996 [00:55<00:34, 222.88 examples/s]Map:  62%|██████▏   | 12370/19996 [00:55<00:33, 229.30 examples/s]Map:  62%|██████▏   | 12304/19996 [00:55<00:36, 210.59 examples/s]Map:  62%|██████▏   | 12334/19996 [00:55<00:32, 233.23 examples/s]Map:  62%|██████▏   | 12396/19996 [00:55<00:32, 230.44 examples/s]Map:  62%|██████▏   | 12444/19996 [00:55<00:35, 211.76 examples/s]Map:  62%|██████▏   | 12360/19996 [00:56<00:32, 237.62 examples/s]Map:  62%|██████▏   | 12470/19996 [00:56<00:34, 220.12 examples/s]Map:  62%|██████▏   | 12427/19996 [00:56<00:35, 213.07 examples/s]Map:  62%|██████▏   | 12495/19996 [00:56<00:33, 224.01 examples/s]Map:  62%|██████▏   | 12393/19996 [00:56<00:33, 228.95 examples/s]Map:  62%|██████▏   | 12450/19996 [00:56<00:35, 211.14 examples/s]Map:  63%|██████▎   | 12520/19996 [00:56<00:32, 227.91 examples/s]Map:  62%|██████▏   | 12477/19996 [00:56<00:34, 220.82 examples/s]Map:  62%|██████▏   | 12424/19996 [00:56<00:35, 213.16 examples/s]Map:  63%|██████▎   | 12544/19996 [00:56<00:32, 226.66 examples/s]Map:  63%|██████▎   | 12503/19996 [00:56<00:32, 228.49 examples/s]Map:  63%|██████▎   | 12577/19996 [00:56<00:33, 220.67 examples/s]Map:  62%|██████▏   | 12458/19996 [00:56<00:35, 211.70 examples/s]Map:  63%|██████▎   | 12529/19996 [00:56<00:32, 232.44 examples/s]Map:  62%|██████▏   | 12483/19996 [00:56<00:34, 217.60 examples/s]Map:  63%|██████▎   | 12553/19996 [00:56<00:31, 233.91 examples/s]Map:  63%|██████▎   | 12606/19996 [00:56<00:35, 205.84 examples/s]Map:  63%|██████▎   | 12509/19996 [00:56<00:33, 226.59 examples/s]Map:  63%|██████▎   | 12629/19996 [00:56<00:35, 209.58 examples/s]Map:  63%|██████▎   | 12588/19996 [00:56<00:32, 225.02 examples/s]Map:  63%|██████▎   | 12653/19996 [00:56<00:34, 214.14 examples/s]Map:  63%|██████▎   | 12547/19996 [00:56<00:32, 230.66 examples/s]Map:  63%|██████▎   | 12613/19996 [00:56<00:36, 203.45 examples/s]Map:  63%|██████▎   | 12679/19996 [00:57<00:32, 224.64 examples/s]Map:  63%|██████▎   | 12583/19996 [00:57<00:31, 232.82 examples/s]Map:  63%|██████▎   | 12638/19996 [00:57<00:34, 213.36 examples/s]Map:  64%|██████▎   | 12704/19996 [00:57<00:31, 231.31 examples/s]Map:  63%|██████▎   | 12660/19996 [00:57<00:34, 211.58 examples/s]Map:  64%|██████▎   | 12729/19996 [00:57<00:30, 234.72 examples/s]Map:  63%|██████▎   | 12608/19996 [00:57<00:36, 203.53 examples/s]Map:  64%|██████▍   | 12756/19996 [00:57<00:29, 244.06 examples/s]Map:  63%|██████▎   | 12636/19996 [00:57<00:34, 213.53 examples/s]Map:  64%|██████▍   | 12784/19996 [00:57<00:29, 245.13 examples/s]Map:  63%|██████▎   | 12658/19996 [00:57<00:34, 212.15 examples/s]Map:  63%|██████▎   | 12691/19996 [00:57<00:44, 162.64 examples/s]Map:  64%|██████▍   | 12814/19996 [00:57<00:27, 258.41 examples/s]Map:  64%|██████▎   | 12712/19996 [00:57<00:42, 170.25 examples/s]Map:  64%|██████▎   | 12742/19996 [00:57<00:36, 198.61 examples/s]Map:  64%|██████▍   | 12852/19996 [00:57<00:28, 250.37 examples/s]Map:  63%|██████▎   | 12691/19996 [00:57<00:46, 158.66 examples/s]Map:  64%|██████▍   | 12769/19996 [00:57<00:34, 211.39 examples/s]Map:  64%|██████▍   | 12878/19996 [00:57<00:28, 246.76 examples/s]Map:  64%|██████▎   | 12712/19996 [00:57<00:43, 167.51 examples/s]Map:  64%|██████▍   | 12798/19996 [00:57<00:31, 226.56 examples/s]Map:  65%|██████▍   | 12903/19996 [00:57<00:29, 244.10 examples/s]Map:  64%|██████▎   | 12742/19996 [00:57<00:37, 192.79 examples/s]Map:  64%|██████▍   | 12829/19996 [00:57<00:29, 245.06 examples/s]Map:  65%|██████▍   | 12933/19996 [00:58<00:31, 224.99 examples/s]Map:  64%|██████▍   | 12767/19996 [00:58<00:35, 202.72 examples/s]Map:  64%|██████▍   | 12863/19996 [00:58<00:30, 233.66 examples/s]Map:  65%|██████▍   | 12957/19996 [00:58<00:31, 222.76 examples/s]Map:  64%|██████▍   | 12790/19996 [00:58<00:34, 207.62 examples/s]Map:  64%|██████▍   | 12825/19996 [00:58<00:29, 239.21 examples/s]Map:  65%|██████▍   | 12898/19996 [00:58<00:30, 230.39 examples/s]Map:  65%|██████▍   | 12990/19996 [00:58<00:31, 220.19 examples/s]Map:  64%|██████▍   | 12860/19996 [00:58<00:30, 236.08 examples/s]Map:  65%|██████▍   | 12932/19996 [00:58<00:31, 226.18 examples/s]Map:  65%|██████▍   | 12957/19996 [00:58<00:31, 224.17 examples/s]Map:  64%|██████▍   | 12897/19996 [00:58<00:30, 231.33 examples/s]Map:  65%|██████▍   | 12921/19996 [00:58<00:31, 227.94 examples/s]Map:  65%|██████▍   | 12990/19996 [00:58<00:31, 220.87 examples/s]Map:  65%|██████▌   | 13020/19996 [00:58<00:56, 123.74 examples/s]Map:  65%|██████▍   | 12956/19996 [00:58<00:31, 225.45 examples/s]Map:  65%|██████▌   | 13043/19996 [00:58<00:50, 138.65 examples/s]Map:  65%|██████▌   | 13069/19996 [00:59<00:43, 157.55 examples/s]Map:  65%|██████▍   | 12990/19996 [00:59<00:32, 218.29 examples/s]Map:  65%|██████▌   | 13090/19996 [00:59<00:41, 167.15 examples/s]Map:  65%|██████▌   | 13020/19996 [00:59<00:55, 125.68 examples/s]Map:  65%|██████▌   | 13042/19996 [00:59<00:50, 138.96 examples/s]Map:  66%|██████▌   | 13113/19996 [00:59<00:48, 140.56 examples/s]Map:  65%|██████▌   | 13066/19996 [00:59<00:44, 155.99 examples/s]Map:  66%|██████▌   | 13141/19996 [00:59<00:42, 163.09 examples/s]Map:  65%|██████▌   | 13020/19996 [00:59<00:54, 127.41 examples/s]Map:  65%|██████▌   | 13089/19996 [00:59<00:41, 165.02 examples/s]Map:  66%|██████▌   | 13163/19996 [00:59<00:39, 171.69 examples/s]Map:  65%|██████▌   | 13042/19996 [00:59<00:49, 139.91 examples/s]Map:  66%|██████▌   | 13116/19996 [00:59<00:37, 181.70 examples/s]Map:  66%|██████▌   | 13188/19996 [00:59<00:36, 186.73 examples/s]Map:  65%|██████▌   | 13066/19996 [00:59<00:44, 156.85 examples/s]Map:  66%|██████▌   | 13143/19996 [00:59<00:34, 198.04 examples/s]Map:  66%|██████▌   | 13213/19996 [00:59<00:34, 199.33 examples/s]Map:  65%|██████▌   | 13090/19996 [00:59<00:41, 167.65 examples/s]Map:  66%|██████▌   | 13238/19996 [00:59<00:32, 208.84 examples/s]Map:  66%|██████▌   | 13177/19996 [00:59<00:33, 206.28 examples/s]Map:  66%|██████▌   | 13116/19996 [00:59<00:37, 183.67 examples/s]Map:  66%|██████▋   | 13262/19996 [01:00<00:32, 209.00 examples/s]Map:  66%|██████▌   | 13143/19996 [01:00<00:34, 200.05 examples/s]Map:  66%|██████▌   | 13213/19996 [01:00<00:31, 212.31 examples/s]Map:  66%|██████▋   | 13291/19996 [01:00<00:30, 218.45 examples/s]Map:  66%|██████▌   | 13166/19996 [01:00<00:33, 205.65 examples/s]Map:  66%|██████▌   | 13238/19996 [01:00<00:30, 218.91 examples/s]Map:  66%|██████▌   | 13189/19996 [01:00<00:32, 210.54 examples/s]Map:  67%|██████▋   | 13327/19996 [01:00<00:29, 222.94 examples/s]Map:  66%|██████▋   | 13262/19996 [01:00<00:31, 216.37 examples/s]Map:  66%|██████▌   | 13213/19996 [01:00<00:31, 216.33 examples/s]Map:  66%|██████▋   | 13285/19996 [01:00<00:30, 219.06 examples/s]Map:  67%|██████▋   | 13354/19996 [01:00<00:29, 229.03 examples/s]Map:  66%|██████▌   | 13238/19996 [01:00<00:30, 223.13 examples/s]Map:  67%|██████▋   | 13309/19996 [01:00<00:30, 219.80 examples/s]Map:  67%|██████▋   | 13381/19996 [01:00<00:28, 235.97 examples/s]Map:  67%|██████▋   | 13335/19996 [01:00<00:29, 225.43 examples/s]Map:  66%|██████▋   | 13273/19996 [01:00<00:30, 221.03 examples/s]Map:  67%|██████▋   | 13416/19996 [01:00<00:28, 229.69 examples/s]Map:  67%|██████▋   | 13362/19996 [01:00<00:28, 232.20 examples/s]Map:  66%|██████▋   | 13296/19996 [01:00<00:31, 216.07 examples/s]Map:  67%|██████▋   | 13386/19996 [01:00<00:28, 232.30 examples/s]Map:  67%|██████▋   | 13450/19996 [01:00<00:29, 224.90 examples/s]Map:  67%|██████▋   | 13321/19996 [01:00<00:30, 221.03 examples/s]Map:  67%|██████▋   | 13349/19996 [01:00<00:28, 233.53 examples/s]Map:  67%|██████▋   | 13420/19996 [01:00<00:28, 227.21 examples/s]Map:  67%|██████▋   | 13481/19996 [01:00<00:30, 216.38 examples/s]Map:  67%|██████▋   | 13374/19996 [01:01<00:28, 234.58 examples/s]Map:  68%|██████▊   | 13508/19996 [01:01<00:28, 224.33 examples/s]Map:  67%|██████▋   | 13443/19996 [01:01<00:29, 221.55 examples/s]Map:  67%|██████▋   | 13466/19996 [01:01<00:29, 221.44 examples/s]Map:  68%|██████▊   | 13532/19996 [01:01<00:28, 224.56 examples/s]Map:  67%|██████▋   | 13407/19996 [01:01<00:28, 227.50 examples/s]Map:  67%|██████▋   | 13490/19996 [01:01<00:28, 225.10 examples/s]Map:  68%|██████▊   | 13564/19996 [01:01<00:29, 219.76 examples/s]Map:  67%|██████▋   | 13443/19996 [01:01<00:29, 225.45 examples/s]Map:  68%|██████▊   | 13513/19996 [01:01<00:29, 217.47 examples/s]Map:  68%|██████▊   | 13591/19996 [01:01<00:28, 225.55 examples/s]Map:  67%|██████▋   | 13466/19996 [01:01<00:28, 225.44 examples/s]Map:  68%|██████▊   | 13537/19996 [01:01<00:29, 221.07 examples/s]Map:  68%|██████▊   | 13614/19996 [01:01<00:28, 225.37 examples/s]Map:  67%|██████▋   | 13490/19996 [01:01<00:28, 224.43 examples/s]Map:  68%|██████▊   | 13560/19996 [01:01<00:28, 222.94 examples/s]Map:  68%|██████▊   | 13637/19996 [01:01<00:28, 223.40 examples/s]Map:  68%|██████▊   | 13514/19996 [01:01<00:29, 218.60 examples/s]Map:  68%|██████▊   | 13669/19996 [01:01<00:25, 247.04 examples/s]Map:  68%|██████▊   | 13595/19996 [01:01<00:28, 224.00 examples/s]Map:  68%|██████▊   | 13538/19996 [01:01<00:29, 219.32 examples/s]Map:  68%|██████▊   | 13618/19996 [01:01<00:28, 224.22 examples/s]Map:  69%|██████▊   | 13699/19996 [01:01<00:24, 256.39 examples/s]Map:  68%|██████▊   | 13563/19996 [01:01<00:29, 220.83 examples/s]Map:  68%|██████▊   | 13642/19996 [01:01<00:27, 227.33 examples/s]Map:  68%|██████▊   | 13588/19996 [01:02<00:28, 227.20 examples/s]Map:  69%|██████▊   | 13731/19996 [01:02<00:26, 237.82 examples/s]Map:  68%|██████▊   | 13676/19996 [01:02<00:24, 256.81 examples/s]Map:  69%|██████▉   | 13760/19996 [01:02<00:25, 247.97 examples/s]Map:  68%|██████▊   | 13613/19996 [01:02<00:28, 223.26 examples/s]Map:  69%|██████▊   | 13702/19996 [01:02<00:25, 249.98 examples/s]Map:  69%|██████▉   | 13791/19996 [01:02<00:23, 262.97 examples/s]Map:  68%|██████▊   | 13637/19996 [01:02<00:28, 222.88 examples/s]Map:  69%|██████▊   | 13729/19996 [01:02<00:25, 247.70 examples/s]Map:  68%|██████▊   | 13668/19996 [01:02<00:26, 242.62 examples/s]Map:  69%|██████▉   | 13831/19996 [01:02<00:24, 255.45 examples/s]Map:  69%|██████▉   | 13767/19996 [01:02<00:25, 247.20 examples/s]Map:  68%|██████▊   | 13695/19996 [01:02<00:25, 248.35 examples/s]Map:  69%|██████▉   | 13870/19996 [01:02<00:24, 254.66 examples/s]Map:  69%|██████▉   | 13798/19996 [01:02<00:23, 259.54 examples/s]Map:  69%|██████▊   | 13729/19996 [01:02<00:26, 235.14 examples/s]Map:  70%|██████▉   | 13907/19996 [01:02<00:24, 251.42 examples/s]Map:  69%|██████▉   | 13834/19996 [01:02<00:24, 247.79 examples/s]Map:  69%|██████▉   | 13754/19996 [01:02<00:26, 237.90 examples/s]Map:  69%|██████▉   | 13785/19996 [01:02<00:24, 254.79 examples/s]Map:  69%|██████▉   | 13862/19996 [01:02<00:24, 247.04 examples/s]Map:  70%|██████▉   | 13944/19996 [01:02<00:24, 245.68 examples/s]Map:  69%|██████▉   | 13890/19996 [01:02<00:24, 251.58 examples/s]Map:  70%|██████▉   | 13971/19996 [01:02<00:24, 250.30 examples/s]Map:  69%|██████▉   | 13824/19996 [01:02<00:24, 254.52 examples/s]Map:  70%|██████▉   | 13918/19996 [01:03<00:23, 256.80 examples/s]Map:  69%|██████▉   | 13862/19996 [01:03<00:24, 246.84 examples/s]Map:  70%|██████▉   | 13955/19996 [01:03<00:24, 247.72 examples/s]Map:  69%|██████▉   | 13890/19996 [01:03<00:24, 248.64 examples/s]Map:  70%|██████▉   | 13918/19996 [01:03<00:23, 253.29 examples/s]Map:  70%|██████▉   | 13994/19996 [01:03<00:24, 245.03 examples/s]Map:  70%|███████   | 14000/19996 [01:03<00:41, 143.01 examples/s]Map:  70%|██████▉   | 13955/19996 [01:03<00:24, 247.17 examples/s]Map:  70%|███████   | 14029/19996 [01:03<00:39, 152.49 examples/s]Map:  70%|███████   | 14055/19996 [01:03<00:34, 170.77 examples/s]Map:  70%|██████▉   | 13990/19996 [01:03<00:25, 239.32 examples/s]Map:  70%|███████   | 14077/19996 [01:03<00:33, 178.72 examples/s]Map:  70%|███████   | 14019/19996 [01:03<00:43, 136.36 examples/s]Map:  70%|███████   | 14041/19996 [01:03<00:40, 148.54 examples/s]Map:  71%|███████   | 14109/19996 [01:03<00:31, 185.69 examples/s]Map:  70%|███████   | 14068/19996 [01:04<00:35, 168.93 examples/s]Map:  71%|███████   | 14138/19996 [01:04<00:28, 207.47 examples/s]Map:  70%|███████   | 14090/19996 [01:04<00:33, 178.02 examples/s]Map:  70%|███████   | 14019/19996 [01:04<00:43, 137.17 examples/s]Map:  71%|███████   | 14170/19996 [01:04<00:28, 202.13 examples/s]Map:  70%|███████   | 14040/19996 [01:04<00:40, 147.44 examples/s]Map:  71%|███████   | 14123/19996 [01:04<00:31, 188.91 examples/s]Map:  71%|███████   | 14192/19996 [01:04<00:28, 204.38 examples/s]Map:  70%|███████   | 14066/19996 [01:04<00:35, 166.86 examples/s]Map:  71%|███████   | 14148/19996 [01:04<00:29, 196.67 examples/s]Map:  71%|███████   | 14215/19996 [01:04<00:27, 210.19 examples/s]Map:  70%|███████   | 14090/19996 [01:04<00:33, 178.36 examples/s]Map:  71%|███████   | 14170/19996 [01:04<00:29, 197.25 examples/s]Map:  71%|███████   | 14240/19996 [01:04<00:26, 217.50 examples/s]Map:  71%|███████   | 14122/19996 [01:04<00:31, 187.25 examples/s]Map:  71%|███████▏  | 14263/19996 [01:04<00:26, 219.97 examples/s]Map:  71%|███████   | 14202/19996 [01:04<00:29, 198.99 examples/s]Map:  71%|███████   | 14145/19996 [01:04<00:29, 196.24 examples/s]Map:  71%|███████   | 14225/19996 [01:04<00:28, 205.08 examples/s]Map:  72%|███████▏  | 14299/19996 [01:04<00:26, 214.81 examples/s]Map:  71%|███████▏  | 14250/19996 [01:04<00:26, 215.23 examples/s]Map:  71%|███████   | 14175/19996 [01:04<00:30, 193.67 examples/s]Map:  72%|███████▏  | 14322/19996 [01:04<00:26, 215.44 examples/s]Map:  71%|███████▏  | 14274/19996 [01:04<00:25, 220.22 examples/s]Map:  71%|███████   | 14200/19996 [01:04<00:28, 201.46 examples/s]Map:  72%|███████▏  | 14348/19996 [01:04<00:25, 225.60 examples/s]Map:  71%|███████   | 14224/19996 [01:05<00:27, 209.03 examples/s]Map:  72%|███████▏  | 14306/19996 [01:05<00:26, 212.08 examples/s]Map:  72%|███████▏  | 14377/19996 [01:05<00:27, 207.43 examples/s]Map:  71%|███████▏  | 14250/19996 [01:05<00:26, 217.06 examples/s]Map:  72%|███████▏  | 14330/19996 [01:05<00:26, 217.88 examples/s]Map:  72%|███████▏  | 14403/19996 [01:05<00:25, 217.03 examples/s]Map:  71%|███████▏  | 14274/19996 [01:05<00:25, 222.05 examples/s]Map:  72%|███████▏  | 14355/19996 [01:05<00:25, 219.82 examples/s]Map:  72%|███████▏  | 14438/19996 [01:05<00:25, 215.55 examples/s]Map:  72%|███████▏  | 14306/19996 [01:05<00:26, 211.67 examples/s]Map:  72%|███████▏  | 14383/19996 [01:05<00:27, 206.81 examples/s]Map:  72%|███████▏  | 14463/19996 [01:05<00:25, 221.30 examples/s]Map:  72%|███████▏  | 14330/19996 [01:05<00:26, 217.40 examples/s]Map:  72%|███████▏  | 14406/19996 [01:05<00:26, 208.69 examples/s]Map:  72%|███████▏  | 14355/19996 [01:05<00:25, 219.06 examples/s]Map:  72%|███████▏  | 14495/19996 [01:05<00:25, 216.35 examples/s]Map:  72%|███████▏  | 14441/19996 [01:05<00:26, 207.59 examples/s]Map:  73%|███████▎  | 14522/19996 [01:05<00:24, 226.10 examples/s]Map:  72%|███████▏  | 14384/19996 [01:05<00:26, 207.93 examples/s]Map:  72%|███████▏  | 14467/19996 [01:05<00:25, 219.18 examples/s]Map:  73%|███████▎  | 14547/19996 [01:05<00:23, 227.86 examples/s]Map:  72%|███████▏  | 14408/19996 [01:05<00:26, 212.68 examples/s]Map:  73%|███████▎  | 14572/19996 [01:06<00:23, 227.44 examples/s]Map:  73%|███████▎  | 14505/19996 [01:06<00:24, 225.25 examples/s]Map:  72%|███████▏  | 14430/19996 [01:06<00:26, 209.57 examples/s]Map:  73%|███████▎  | 14595/19996 [01:06<00:24, 224.74 examples/s]Map:  73%|███████▎  | 14528/19996 [01:06<00:24, 225.68 examples/s]Map:  72%|███████▏  | 14453/19996 [01:06<00:26, 211.93 examples/s]Map:  73%|███████▎  | 14619/19996 [01:06<00:23, 226.96 examples/s]Map:  73%|███████▎  | 14554/19996 [01:06<00:23, 231.12 examples/s]Map:  72%|███████▏  | 14480/19996 [01:06<00:24, 223.95 examples/s]Map:  73%|███████▎  | 14645/19996 [01:06<00:22, 232.66 examples/s]Map:  73%|███████▎  | 14504/19996 [01:06<00:24, 226.07 examples/s]Map:  73%|███████▎  | 14587/19996 [01:06<00:24, 221.37 examples/s]Map:  73%|███████▎  | 14674/19996 [01:06<00:22, 238.18 examples/s]Map:  73%|███████▎  | 14528/19996 [01:06<00:24, 226.12 examples/s]Map:  73%|███████▎  | 14611/19996 [01:06<00:24, 221.81 examples/s]Map:  74%|███████▎  | 14698/19996 [01:06<00:22, 235.28 examples/s]Map:  73%|███████▎  | 14553/19996 [01:06<00:23, 229.51 examples/s]Map:  73%|███████▎  | 14636/19996 [01:06<00:24, 222.21 examples/s]Map:  74%|███████▎  | 14723/19996 [01:06<00:22, 230.04 examples/s]Map:  73%|███████▎  | 14584/19996 [01:06<00:24, 216.94 examples/s]Map:  73%|███████▎  | 14665/19996 [01:06<00:22, 238.37 examples/s]Map:  74%|███████▍  | 14750/19996 [01:06<00:22, 228.14 examples/s]Map:  73%|███████▎  | 14607/19996 [01:06<00:24, 217.74 examples/s]Map:  74%|███████▎  | 14698/19996 [01:06<00:23, 227.25 examples/s]Map:  74%|███████▍  | 14775/19996 [01:06<00:22, 227.77 examples/s]Map:  73%|███████▎  | 14631/19996 [01:06<00:24, 220.36 examples/s]Map:  74%|███████▎  | 14723/19996 [01:06<00:23, 226.33 examples/s]Map:  74%|███████▍  | 14800/19996 [01:07<00:22, 229.94 examples/s]Map:  73%|███████▎  | 14662/19996 [01:07<00:22, 240.82 examples/s]Map:  74%|███████▍  | 14832/19996 [01:07<00:20, 250.56 examples/s]Map:  74%|███████▍  | 14750/19996 [01:07<00:23, 227.55 examples/s]Map:  74%|███████▎  | 14698/19996 [01:07<00:22, 231.39 examples/s]Map:  74%|███████▍  | 14861/19996 [01:07<00:19, 257.84 examples/s]Map:  74%|███████▍  | 14775/19996 [01:07<00:22, 227.42 examples/s]Map:  74%|███████▍  | 14889/19996 [01:07<00:19, 259.30 examples/s]Map:  74%|███████▎  | 14723/19996 [01:07<00:23, 229.01 examples/s]Map:  74%|███████▍  | 14800/19996 [01:07<00:22, 230.02 examples/s]Map:  74%|███████▍  | 14831/19996 [01:07<00:20, 249.12 examples/s]Map:  74%|███████▍  | 14750/19996 [01:07<00:22, 228.13 examples/s]Map:  75%|███████▍  | 14926/19996 [01:07<00:20, 250.97 examples/s]Map:  74%|███████▍  | 14859/19996 [01:07<00:20, 253.90 examples/s]Map:  74%|███████▍  | 14774/19996 [01:07<00:23, 224.91 examples/s]Map:  75%|███████▍  | 14952/19996 [01:07<00:20, 251.68 examples/s]Map:  74%|███████▍  | 14885/19996 [01:07<00:20, 248.62 examples/s]Map:  74%|███████▍  | 14799/19996 [01:07<00:22, 228.74 examples/s]Map:  75%|███████▍  | 14989/19996 [01:07<00:20, 240.18 examples/s]Map:  74%|███████▍  | 14829/19996 [01:07<00:21, 244.03 examples/s]Map:  75%|███████▍  | 14914/19996 [01:07<00:20, 250.36 examples/s]Map:  75%|███████▍  | 14947/19996 [01:07<00:18, 268.16 examples/s]Map:  74%|███████▍  | 14858/19996 [01:07<00:20, 250.81 examples/s]Map:  74%|███████▍  | 14885/19996 [01:07<00:20, 248.55 examples/s]Map:  75%|███████▍  | 14979/19996 [01:08<00:20, 244.18 examples/s]Map:  75%|███████▍  | 14914/19996 [01:08<00:20, 250.11 examples/s]Map:  75%|███████▍  | 14946/19996 [01:08<00:18, 266.88 examples/s]Map:  75%|███████▌  | 15026/19996 [01:08<00:34, 144.84 examples/s]Map:  75%|███████▌  | 15047/19996 [01:08<00:32, 153.63 examples/s]Map:  75%|███████▍  | 14979/19996 [01:08<00:20, 243.26 examples/s]Map:  75%|███████▌  | 15075/19996 [01:08<00:30, 160.21 examples/s]Map:  75%|███████▌  | 15011/19996 [01:08<00:36, 138.31 examples/s]Map:  76%|███████▌  | 15102/19996 [01:08<00:27, 179.31 examples/s]Map:  75%|███████▌  | 15035/19996 [01:08<00:32, 151.58 examples/s]Map:  76%|███████▌  | 15136/19996 [01:08<00:25, 187.60 examples/s]Map:  75%|███████▌  | 15065/19996 [01:08<00:30, 160.87 examples/s]Map:  75%|███████▌  | 15011/19996 [01:08<00:36, 135.44 examples/s]Map:  76%|███████▌  | 15159/19996 [01:08<00:24, 193.68 examples/s]Map:  75%|███████▌  | 15088/19996 [01:08<00:28, 171.72 examples/s]Map:  75%|███████▌  | 15036/19996 [01:08<00:32, 151.43 examples/s]Map:  76%|███████▌  | 15183/19996 [01:08<00:23, 202.71 examples/s]Map:  76%|███████▌  | 15115/19996 [01:08<00:25, 190.69 examples/s]Map:  76%|███████▌  | 15208/19996 [01:09<00:23, 206.46 examples/s]Map:  75%|███████▌  | 15065/19996 [01:09<00:30, 159.61 examples/s]Map:  76%|███████▌  | 15151/19996 [01:09<00:24, 198.26 examples/s]Map:  76%|███████▌  | 15234/19996 [01:09<00:21, 217.29 examples/s]Map:  75%|███████▌  | 15088/19996 [01:09<00:28, 170.84 examples/s]Map:  76%|███████▋  | 15258/19996 [01:09<00:21, 222.08 examples/s]Map:  76%|███████▌  | 15183/19996 [01:09<00:24, 199.52 examples/s]Map:  76%|███████▌  | 15115/19996 [01:09<00:25, 190.32 examples/s]Map:  76%|███████▌  | 15208/19996 [01:09<00:23, 204.08 examples/s]Map:  76%|███████▋  | 15292/19996 [01:09<00:21, 218.07 examples/s]Map:  76%|███████▌  | 15151/19996 [01:09<00:24, 199.43 examples/s]Map:  76%|███████▌  | 15234/19996 [01:09<00:22, 214.38 examples/s]Map:  77%|███████▋  | 15327/19996 [01:09<00:21, 219.87 examples/s]Map:  76%|███████▋  | 15257/19996 [01:09<00:21, 215.77 examples/s]Map:  76%|███████▌  | 15183/19996 [01:09<00:24, 198.15 examples/s]Map:  77%|███████▋  | 15352/19996 [01:09<00:20, 221.50 examples/s]Map:  76%|███████▌  | 15208/19996 [01:09<00:23, 201.94 examples/s]Map:  76%|███████▋  | 15289/19996 [01:09<00:22, 210.51 examples/s]Map:  77%|███████▋  | 15380/19996 [01:09<00:19, 232.74 examples/s]Map:  76%|███████▌  | 15232/19996 [01:09<00:22, 208.76 examples/s]Map:  77%|███████▋  | 15404/19996 [01:09<00:19, 233.41 examples/s]Map:  77%|███████▋  | 15325/19996 [01:09<00:21, 215.74 examples/s]Map:  76%|███████▋  | 15257/19996 [01:09<00:21, 216.56 examples/s]Map:  77%|███████▋  | 15429/19996 [01:10<00:19, 234.36 examples/s]Map:  77%|███████▋  | 15349/19996 [01:10<00:21, 218.20 examples/s]Map:  77%|███████▋  | 15457/19996 [01:10<00:18, 246.14 examples/s]Map:  76%|███████▋  | 15289/19996 [01:10<00:22, 209.90 examples/s]Map:  77%|███████▋  | 15375/19996 [01:10<00:20, 226.15 examples/s]Map:  77%|███████▋  | 15482/19996 [01:10<00:18, 246.99 examples/s]Map:  77%|███████▋  | 15405/19996 [01:10<00:19, 235.41 examples/s]Map:  77%|███████▋  | 15324/19996 [01:10<00:21, 214.76 examples/s]Map:  78%|███████▊  | 15507/19996 [01:10<00:18, 246.11 examples/s]Map:  77%|███████▋  | 15429/19996 [01:10<00:19, 234.92 examples/s]Map:  77%|███████▋  | 15349/19996 [01:10<00:21, 217.57 examples/s]Map:  77%|███████▋  | 15456/19996 [01:10<00:18, 242.62 examples/s]Map:  78%|███████▊  | 15537/19996 [01:10<00:20, 222.08 examples/s]Map:  77%|███████▋  | 15375/19996 [01:10<00:20, 224.62 examples/s]Map:  77%|███████▋  | 15481/19996 [01:10<00:18, 244.01 examples/s]Map:  78%|███████▊  | 15561/19996 [01:10<00:19, 225.85 examples/s]Map:  77%|███████▋  | 15404/19996 [01:10<00:19, 232.06 examples/s]Map:  78%|███████▊  | 15506/19996 [01:10<00:18, 244.04 examples/s]Map:  78%|███████▊  | 15586/19996 [01:10<00:19, 228.77 examples/s]Map:  77%|███████▋  | 15429/19996 [01:10<00:19, 233.76 examples/s]Map:  77%|███████▋  | 15458/19996 [01:10<00:18, 243.16 examples/s]Map:  78%|███████▊  | 15535/19996 [01:10<00:20, 218.43 examples/s]Map:  78%|███████▊  | 15622/19996 [01:10<00:18, 231.20 examples/s]Map:  77%|███████▋  | 15485/19996 [01:10<00:18, 246.91 examples/s]Map:  78%|███████▊  | 15560/19996 [01:10<00:19, 222.30 examples/s]Map:  78%|███████▊  | 15652/19996 [01:10<00:19, 217.70 examples/s]Map:  78%|███████▊  | 15585/19996 [01:11<00:19, 228.18 examples/s]Map:  78%|███████▊  | 15518/19996 [01:11<00:19, 228.42 examples/s]Map:  78%|███████▊  | 15680/19996 [01:11<00:18, 228.89 examples/s]Map:  78%|███████▊  | 15622/19996 [01:11<00:18, 230.25 examples/s]Map:  78%|███████▊  | 15555/19996 [01:11<00:19, 229.90 examples/s]Map:  79%|███████▊  | 15718/19996 [01:11<00:18, 233.83 examples/s]Map:  78%|███████▊  | 15652/19996 [01:11<00:20, 216.90 examples/s]Map:  78%|███████▊  | 15583/19996 [01:11<00:18, 234.60 examples/s]Map:  79%|███████▉  | 15753/19996 [01:11<00:18, 229.17 examples/s]Map:  78%|███████▊  | 15680/19996 [01:11<00:18, 228.42 examples/s]Map:  78%|███████▊  | 15616/19996 [01:11<00:19, 223.69 examples/s]Map:  79%|███████▉  | 15786/19996 [01:11<00:19, 218.02 examples/s]Map:  79%|███████▊  | 15718/19996 [01:11<00:18, 230.82 examples/s]Map:  79%|███████▉  | 15815/19996 [01:11<00:18, 231.00 examples/s]Map:  78%|███████▊  | 15646/19996 [01:11<00:20, 211.64 examples/s]Map:  79%|███████▉  | 15753/19996 [01:11<00:18, 227.16 examples/s]Map:  79%|███████▉  | 15845/19996 [01:11<00:16, 245.06 examples/s]Map:  78%|███████▊  | 15674/19996 [01:11<00:19, 222.22 examples/s]Map:  79%|███████▉  | 15875/19996 [01:11<00:16, 256.57 examples/s]Map:  79%|███████▊  | 15701/19996 [01:11<00:18, 228.92 examples/s]Map:  79%|███████▉  | 15786/19996 [01:11<00:19, 217.03 examples/s]Map:  79%|███████▊  | 15726/19996 [01:12<00:18, 233.39 examples/s]Map:  79%|███████▉  | 15815/19996 [01:12<00:18, 230.66 examples/s]Map:  80%|███████▉  | 15912/19996 [01:12<00:16, 246.62 examples/s]Map:  79%|███████▉  | 15845/19996 [01:12<00:16, 244.95 examples/s]Map:  79%|███████▉  | 15758/19996 [01:12<00:19, 221.05 examples/s]Map:  80%|███████▉  | 15951/19996 [01:12<00:16, 247.91 examples/s]Map:  79%|███████▉  | 15875/19996 [01:12<00:16, 256.02 examples/s]Map:  79%|███████▉  | 15782/19996 [01:12<00:19, 217.02 examples/s]Map:  80%|███████▉  | 15987/19996 [01:12<00:16, 238.37 examples/s]Map:  79%|███████▉  | 15810/19996 [01:12<00:18, 229.83 examples/s]Map:  80%|███████▉  | 15912/19996 [01:12<00:16, 247.11 examples/s]Map:  79%|███████▉  | 15838/19996 [01:12<00:17, 239.51 examples/s]Map:  80%|███████▉  | 15950/19996 [01:12<00:16, 245.55 examples/s]Map:  79%|███████▉  | 15870/19996 [01:12<00:15, 258.21 examples/s]Map:  80%|███████▉  | 15987/19996 [01:12<00:17, 235.18 examples/s]Map:  80%|███████▉  | 15903/19996 [01:12<00:16, 242.21 examples/s]Map:  80%|████████  | 16012/19996 [01:12<00:28, 138.91 examples/s]Map:  80%|███████▉  | 15930/19996 [01:12<00:16, 246.82 examples/s]Map:  80%|████████  | 16041/19996 [01:12<00:26, 149.85 examples/s]Map:  80%|███████▉  | 15966/19996 [01:13<00:16, 241.04 examples/s]Map:  80%|████████  | 16066/19996 [01:13<00:23, 165.77 examples/s]Map:  80%|████████  | 16090/19996 [01:13<00:22, 176.29 examples/s]Map:  80%|████████  | 16012/19996 [01:13<00:28, 138.08 examples/s]Map:  81%|████████  | 16123/19996 [01:13<00:20, 186.09 examples/s]Map:  80%|████████  | 16039/19996 [01:13<00:27, 144.94 examples/s]Map:  81%|████████  | 16145/19996 [01:13<00:20, 190.52 examples/s]Map:  80%|████████  | 16063/19996 [01:13<00:24, 160.09 examples/s]Map:  80%|████████  | 16000/19996 [01:13<00:30, 132.72 examples/s]Map:  80%|████████  | 16087/19996 [01:13<00:22, 173.74 examples/s]Map:  81%|████████  | 16174/19996 [01:13<00:20, 186.38 examples/s]Map:  80%|████████  | 16029/19996 [01:13<00:27, 143.38 examples/s]Map:  81%|████████  | 16200/19996 [01:13<00:19, 196.65 examples/s]Map:  81%|████████  | 16121/19996 [01:13<00:21, 181.41 examples/s]Map:  80%|████████  | 16056/19996 [01:13<00:24, 162.96 examples/s]Map:  81%|████████  | 16224/19996 [01:13<00:18, 205.27 examples/s]Map:  81%|████████  | 16145/19996 [01:13<00:20, 191.95 examples/s]Map:  80%|████████  | 16078/19996 [01:13<00:22, 172.78 examples/s]Map:  81%|████████▏ | 16251/19996 [01:13<00:17, 215.64 examples/s]Map:  81%|████████  | 16175/19996 [01:13<00:19, 191.10 examples/s]Map:  81%|████████▏ | 16278/19996 [01:14<00:16, 226.07 examples/s]Map:  81%|████████  | 16109/19996 [01:14<00:21, 180.00 examples/s]Map:  81%|████████  | 16200/19996 [01:14<00:19, 199.42 examples/s]Map:  81%|████████  | 16138/19996 [01:14<00:19, 200.78 examples/s]Map:  82%|████████▏ | 16308/19996 [01:14<00:17, 211.88 examples/s]Map:  81%|████████  | 16223/19996 [01:14<00:18, 204.32 examples/s]Map:  82%|████████▏ | 16334/19996 [01:14<00:16, 219.95 examples/s]Map:  81%|████████  | 16166/19996 [01:14<00:19, 194.98 examples/s]Map:  81%|████████▏ | 16250/19996 [01:14<00:17, 215.49 examples/s]Map:  81%|████████  | 16188/19996 [01:14<00:19, 198.97 examples/s]Map:  81%|████████▏ | 16274/19996 [01:14<00:16, 220.51 examples/s]Map:  82%|████████▏ | 16358/19996 [01:14<00:16, 219.61 examples/s]Map:  81%|████████  | 16212/19996 [01:14<00:18, 203.06 examples/s]Map:  82%|████████▏ | 16304/19996 [01:14<00:17, 210.80 examples/s]Map:  82%|████████▏ | 16388/19996 [01:14<00:17, 206.36 examples/s]Map:  81%|████████  | 16238/19996 [01:14<00:18, 205.34 examples/s]Map:  82%|████████▏ | 16326/19996 [01:14<00:17, 210.00 examples/s]Map:  82%|████████▏ | 16414/19996 [01:14<00:16, 215.79 examples/s]Map:  81%|████████▏ | 16263/19996 [01:14<00:17, 211.91 examples/s]Map:  82%|████████▏ | 16349/19996 [01:14<00:17, 213.17 examples/s]Map:  82%|████████▏ | 16442/19996 [01:14<00:17, 199.25 examples/s]Map:  81%|████████▏ | 16293/19996 [01:14<00:18, 202.43 examples/s]Map:  82%|████████▏ | 16376/19996 [01:14<00:18, 196.54 examples/s]Map:  82%|████████▏ | 16470/19996 [01:14<00:16, 217.15 examples/s]Map:  82%|████████▏ | 16318/19996 [01:15<00:17, 207.94 examples/s]Map:  82%|████████▏ | 16401/19996 [01:15<00:17, 208.32 examples/s]Map:  82%|████████▏ | 16493/19996 [01:15<00:16, 209.61 examples/s]Map:  82%|████████▏ | 16345/19996 [01:15<00:16, 221.51 examples/s]Map:  82%|████████▏ | 16424/19996 [01:15<00:16, 210.61 examples/s]Map:  83%|████████▎ | 16520/19996 [01:15<00:15, 223.56 examples/s]Map:  83%|████████▎ | 16545/19996 [01:15<00:15, 225.74 examples/s]Map:  82%|████████▏ | 16374/19996 [01:15<00:17, 203.72 examples/s]Map:  82%|████████▏ | 16458/19996 [01:15<00:16, 212.72 examples/s]Map:  82%|████████▏ | 16398/19996 [01:15<00:17, 210.00 examples/s]Map:  82%|████████▏ | 16481/19996 [01:15<00:16, 210.27 examples/s]Map:  83%|████████▎ | 16576/19996 [01:15<00:16, 212.33 examples/s]Map:  82%|████████▏ | 16422/19996 [01:15<00:16, 210.81 examples/s]Map:  83%|████████▎ | 16510/19996 [01:15<00:15, 226.62 examples/s]Map:  83%|████████▎ | 16599/19996 [01:15<00:15, 213.13 examples/s]Map:  83%|████████▎ | 16623/19996 [01:15<00:15, 211.78 examples/s]Map:  82%|████████▏ | 16452/19996 [01:15<00:17, 205.07 examples/s]Map:  83%|████████▎ | 16544/19996 [01:15<00:15, 219.08 examples/s]Map:  83%|████████▎ | 16650/19996 [01:15<00:14, 226.26 examples/s]Map:  82%|████████▏ | 16480/19996 [01:15<00:16, 217.84 examples/s]Map:  83%|████████▎ | 16568/19996 [01:15<00:15, 217.40 examples/s]Map:  83%|████████▎ | 16677/19996 [01:15<00:14, 233.23 examples/s]Map:  83%|████████▎ | 16504/19996 [01:15<00:15, 220.96 examples/s]Map:  83%|████████▎ | 16592/19996 [01:15<00:15, 217.04 examples/s]Map:  83%|████████▎ | 16528/19996 [01:15<00:15, 222.16 examples/s]Map:  83%|████████▎ | 16614/19996 [01:16<00:15, 217.15 examples/s]Map:  84%|████████▎ | 16715/19996 [01:16<00:14, 233.96 examples/s]Map:  83%|████████▎ | 16554/19996 [01:16<00:15, 228.79 examples/s]Map:  83%|████████▎ | 16639/19996 [01:16<00:14, 223.85 examples/s]Map:  84%|████████▍ | 16750/19996 [01:16<00:14, 225.27 examples/s]Map:  83%|████████▎ | 16669/19996 [01:16<00:13, 239.81 examples/s]Map:  83%|████████▎ | 16587/19996 [01:16<00:15, 220.20 examples/s]Map:  84%|████████▍ | 16775/19996 [01:16<00:14, 226.12 examples/s]Map:  83%|████████▎ | 16611/19996 [01:16<00:15, 221.34 examples/s]Map:  84%|████████▎ | 16701/19996 [01:16<00:14, 227.71 examples/s]Map:  84%|████████▍ | 16800/19996 [01:16<00:13, 228.45 examples/s]Map:  83%|████████▎ | 16637/19996 [01:16<00:15, 223.06 examples/s]Map:  84%|████████▍ | 16831/19996 [01:16<00:12, 246.57 examples/s]Map:  84%|████████▎ | 16735/19996 [01:16<00:14, 217.50 examples/s]Map:  83%|████████▎ | 16666/19996 [01:16<00:13, 238.84 examples/s]Map:  84%|████████▍ | 16859/19996 [01:16<00:12, 252.11 examples/s]Map:  84%|████████▍ | 16763/19996 [01:16<00:14, 225.63 examples/s]Map:  84%|████████▍ | 16885/19996 [01:16<00:12, 250.19 examples/s]Map:  84%|████████▎ | 16698/19996 [01:16<00:15, 219.19 examples/s]Map:  84%|████████▍ | 16786/19996 [01:16<00:14, 224.30 examples/s]Map:  85%|████████▍ | 16914/19996 [01:16<00:12, 252.09 examples/s]Map:  84%|████████▎ | 16723/19996 [01:16<00:14, 219.41 examples/s]Map:  84%|████████▍ | 16818/19996 [01:16<00:12, 244.57 examples/s]Map:  85%|████████▍ | 16947/19996 [01:16<00:11, 270.39 examples/s]Map:  84%|████████▍ | 16844/19996 [01:16<00:12, 243.42 examples/s]Map:  84%|████████▍ | 16750/19996 [01:16<00:14, 222.04 examples/s]Map:  84%|████████▍ | 16875/19996 [01:17<00:12, 257.40 examples/s]Map:  85%|████████▍ | 16979/19996 [01:17<00:12, 245.12 examples/s]Map:  84%|████████▍ | 16784/19996 [01:17<00:14, 220.08 examples/s]Map:  84%|████████▍ | 16812/19996 [01:17<00:13, 233.16 examples/s]Map:  85%|████████▍ | 16914/19996 [01:17<00:12, 253.74 examples/s]Map:  85%|████████▍ | 16946/19996 [01:17<00:11, 267.75 examples/s]Map:  84%|████████▍ | 16839/19996 [01:17<00:13, 238.11 examples/s]Map:  84%|████████▍ | 16869/19996 [01:17<00:12, 253.13 examples/s]Map:  85%|████████▍ | 16979/19996 [01:17<00:12, 245.61 examples/s]Map:  85%|████████▌ | 17011/19996 [01:17<00:21, 141.00 examples/s]Map:  85%|████████▍ | 16907/19996 [01:17<00:12, 249.91 examples/s]Map:  85%|████████▌ | 17036/19996 [01:17<00:18, 156.11 examples/s]Map:  85%|████████▍ | 16936/19996 [01:17<00:11, 258.04 examples/s]Map:  85%|████████▌ | 17066/19996 [01:17<00:17, 164.37 examples/s]Map:  85%|████████▍ | 16968/19996 [01:17<00:12, 240.30 examples/s]Map:  85%|████████▌ | 17089/19996 [01:17<00:16, 175.85 examples/s]Map:  85%|████████▌ | 17011/19996 [01:17<00:20, 142.22 examples/s]Map:  85%|████████▌ | 16997/19996 [01:17<00:12, 249.23 examples/s]Map:  86%|████████▌ | 17116/19996 [01:18<00:14, 194.60 examples/s]Map:  85%|████████▌ | 17036/19996 [01:18<00:18, 156.93 examples/s]Map:  86%|████████▌ | 17151/19996 [01:18<00:14, 202.04 examples/s]Map:  85%|████████▌ | 17066/19996 [01:18<00:17, 163.85 examples/s]Map:  85%|████████▌ | 17089/19996 [01:18<00:16, 174.84 examples/s]Map:  86%|████████▌ | 17183/19996 [01:18<00:13, 202.47 examples/s]Map:  85%|████████▌ | 17026/19996 [01:18<00:21, 136.75 examples/s]Map:  86%|████████▌ | 17115/19996 [01:18<00:15, 190.31 examples/s]Map:  86%|████████▌ | 17207/19996 [01:18<00:13, 207.15 examples/s]Map:  85%|████████▌ | 17054/19996 [01:18<00:20, 145.06 examples/s]Map:  86%|████████▌ | 17243/19996 [01:18<00:12, 215.78 examples/s]Map:  86%|████████▌ | 17149/19996 [01:18<00:14, 193.77 examples/s]Map:  86%|████████▋ | 17266/19996 [01:18<00:13, 208.15 examples/s]Map:  85%|████████▌ | 17085/19996 [01:18<00:18, 156.10 examples/s]Map:  86%|████████▌ | 17177/19996 [01:18<00:14, 188.47 examples/s]Map:  86%|████████▌ | 17111/19996 [01:18<00:16, 172.82 examples/s]Map:  86%|████████▌ | 17204/19996 [01:18<00:13, 199.72 examples/s]Map:  87%|████████▋ | 17298/19996 [01:18<00:13, 206.02 examples/s]Map:  87%|████████▋ | 17322/19996 [01:18<00:12, 209.54 examples/s]Map:  86%|████████▌ | 17142/19996 [01:19<00:15, 179.28 examples/s]Map:  86%|████████▌ | 17240/19996 [01:19<00:13, 206.42 examples/s]Map:  87%|████████▋ | 17346/19996 [01:19<00:12, 213.94 examples/s]Map:  86%|████████▌ | 17165/19996 [01:19<00:15, 185.47 examples/s]Map:  86%|████████▋ | 17262/19996 [01:19<00:13, 204.32 examples/s]Map:  87%|████████▋ | 17371/19996 [01:19<00:11, 221.61 examples/s]Map:  86%|████████▌ | 17189/19996 [01:19<00:14, 195.63 examples/s]Map:  86%|████████▋ | 17284/19996 [01:19<00:13, 207.39 examples/s]Map:  87%|████████▋ | 17399/19996 [01:19<00:11, 234.01 examples/s]Map:  86%|████████▌ | 17211/19996 [01:19<00:13, 199.33 examples/s]Map:  87%|████████▋ | 17306/19996 [01:19<00:13, 204.76 examples/s]Map:  87%|████████▋ | 17424/19996 [01:19<00:10, 234.92 examples/s]Map:  86%|████████▌ | 17236/19996 [01:19<00:13, 210.46 examples/s]Map:  87%|████████▋ | 17332/19996 [01:19<00:12, 218.29 examples/s]Map:  87%|████████▋ | 17450/19996 [01:19<00:10, 241.46 examples/s]Map:  86%|████████▋ | 17267/19996 [01:19<00:13, 201.77 examples/s]Map:  87%|████████▋ | 17366/19996 [01:19<00:12, 215.85 examples/s]Map:  87%|████████▋ | 17486/19996 [01:19<00:10, 236.56 examples/s]Map:  86%|████████▋ | 17289/19996 [01:19<00:13, 201.78 examples/s]Map:  87%|████████▋ | 17391/19996 [01:19<00:11, 219.57 examples/s]Map:  88%|████████▊ | 17518/19996 [01:19<00:11, 221.39 examples/s]Map:  87%|████████▋ | 17416/19996 [01:19<00:11, 221.75 examples/s]Map:  87%|████████▋ | 17323/19996 [01:19<00:12, 206.70 examples/s]Map:  87%|████████▋ | 17443/19996 [01:19<00:11, 231.13 examples/s]Map:  87%|████████▋ | 17346/19996 [01:19<00:12, 209.63 examples/s]Map:  88%|████████▊ | 17554/19996 [01:20<00:11, 221.61 examples/s]Map:  87%|████████▋ | 17468/19996 [01:20<00:10, 232.43 examples/s]Map:  87%|████████▋ | 17370/19996 [01:20<00:12, 210.38 examples/s]Map:  88%|████████▊ | 17579/19996 [01:20<00:10, 223.78 examples/s]Map:  87%|████████▋ | 17492/19996 [01:20<00:10, 232.14 examples/s]Map:  87%|████████▋ | 17397/19996 [01:20<00:11, 221.14 examples/s]Map:  88%|████████▊ | 17608/19996 [01:20<00:11, 210.44 examples/s]Map:  88%|████████▊ | 17523/19996 [01:20<00:11, 216.88 examples/s]Map:  87%|████████▋ | 17434/19996 [01:20<00:11, 224.59 examples/s]Map:  88%|████████▊ | 17631/19996 [01:20<00:11, 212.83 examples/s]Map:  87%|████████▋ | 17462/19996 [01:20<00:10, 235.38 examples/s]Map:  88%|████████▊ | 17558/19996 [01:20<00:11, 219.85 examples/s]Map:  88%|████████▊ | 17663/19996 [01:20<00:11, 211.55 examples/s]Map:  87%|████████▋ | 17486/19996 [01:20<00:10, 234.07 examples/s]Map:  88%|████████▊ | 17583/19996 [01:20<00:10, 225.77 examples/s]Map:  88%|████████▊ | 17687/19996 [01:20<00:10, 213.36 examples/s]Map:  88%|████████▊ | 17510/19996 [01:20<00:10, 233.20 examples/s]Map:  89%|████████▊ | 17712/19996 [01:20<00:10, 221.30 examples/s]Map:  88%|████████▊ | 17616/19996 [01:20<00:10, 217.21 examples/s]Map:  88%|████████▊ | 17540/19996 [01:20<00:11, 213.90 examples/s]Map:  89%|████████▊ | 17735/19996 [01:20<00:10, 210.90 examples/s]Map:  88%|████████▊ | 17646/19996 [01:20<00:11, 208.05 examples/s]Map:  88%|████████▊ | 17565/19996 [01:20<00:11, 220.13 examples/s]Map:  89%|████████▉ | 17758/19996 [01:20<00:10, 209.59 examples/s]Map:  88%|████████▊ | 17673/19996 [01:21<00:10, 221.76 examples/s]Map:  88%|████████▊ | 17589/19996 [01:21<00:10, 223.01 examples/s]Map:  89%|████████▉ | 17780/19996 [01:21<00:10, 209.56 examples/s]Map:  89%|████████▊ | 17697/19996 [01:21<00:10, 222.55 examples/s]Map:  88%|████████▊ | 17627/19996 [01:21<00:10, 229.31 examples/s]Map:  89%|████████▊ | 17723/19996 [01:21<00:09, 230.01 examples/s]Map:  89%|████████▉ | 17819/19996 [01:21<00:09, 224.31 examples/s]Map:  89%|████████▉ | 17850/19996 [01:21<00:08, 242.85 examples/s]Map:  88%|████████▊ | 17653/19996 [01:21<00:11, 206.61 examples/s]Map:  89%|████████▉ | 17756/19996 [01:21<00:10, 223.49 examples/s]Map:  89%|████████▉ | 17879/19996 [01:21<00:08, 252.26 examples/s]Map:  88%|████████▊ | 17681/19996 [01:21<00:10, 221.89 examples/s]Map:  89%|████████▉ | 17787/19996 [01:21<00:10, 210.14 examples/s]Map:  90%|████████▉ | 17915/19996 [01:21<00:08, 238.94 examples/s]Map:  89%|████████▊ | 17718/19996 [01:21<00:10, 225.22 examples/s]Map:  89%|████████▉ | 17818/19996 [01:21<00:09, 231.56 examples/s]Map:  89%|████████▉ | 17848/19996 [01:21<00:08, 240.33 examples/s]Map:  90%|████████▉ | 17954/19996 [01:21<00:08, 244.53 examples/s]Map:  89%|████████▉ | 17753/19996 [01:21<00:10, 222.28 examples/s]Map:  89%|████████▉ | 17875/19996 [01:21<00:08, 246.90 examples/s]Map:  90%|████████▉ | 17987/19996 [01:21<00:08, 232.89 examples/s]Map:  89%|████████▉ | 17786/19996 [01:21<00:10, 212.77 examples/s]Map:  90%|████████▉ | 17901/19996 [01:21<00:08, 244.18 examples/s]Map:  89%|████████▉ | 17815/19996 [01:22<00:09, 226.60 examples/s]Map:  90%|████████▉ | 17927/19996 [01:22<00:08, 246.00 examples/s]Map:  89%|████████▉ | 17845/19996 [01:22<00:08, 241.16 examples/s]Map:  90%|████████▉ | 17966/19996 [01:22<00:08, 242.81 examples/s]Map:  89%|████████▉ | 17873/19996 [01:22<00:08, 247.04 examples/s]Map:  90%|█████████ | 18011/19996 [01:22<00:14, 135.46 examples/s]Map:  90%|████████▉ | 17899/19996 [01:22<00:08, 241.40 examples/s]Map:  90%|█████████ | 18038/19996 [01:22<00:12, 154.96 examples/s]Map:  90%|████████▉ | 17924/19996 [01:22<00:08, 242.19 examples/s]Map:  90%|█████████ | 18066/19996 [01:22<00:10, 176.15 examples/s]Map:  90%|████████▉ | 17961/19996 [01:22<00:08, 238.72 examples/s]Map:  90%|█████████ | 18091/19996 [01:22<00:10, 189.46 examples/s]Map:  90%|█████████ | 18000/19996 [01:22<00:14, 137.08 examples/s]Map:  91%|█████████ | 18114/19996 [01:22<00:09, 196.66 examples/s]Map:  90%|█████████ | 17997/19996 [01:22<00:08, 230.87 examples/s]Map:  90%|█████████ | 18025/19996 [01:22<00:12, 153.36 examples/s]Map:  91%|█████████ | 18142/19996 [01:22<00:08, 213.68 examples/s]Map:  90%|█████████ | 18048/19996 [01:22<00:11, 166.30 examples/s]Map:  91%|█████████ | 18170/19996 [01:22<00:08, 227.37 examples/s]Map:  90%|█████████ | 18075/19996 [01:23<00:10, 186.89 examples/s]Map:  91%|█████████ | 18196/19996 [01:23<00:07, 232.72 examples/s]Map:  91%|█████████ | 18099/19996 [01:23<00:09, 192.47 examples/s]Map:  91%|█████████ | 18228/19996 [01:23<00:07, 222.02 examples/s]Map:  91%|█████████ | 18127/19996 [01:23<00:08, 212.63 examples/s]Map:  90%|█████████ | 18026/19996 [01:23<00:14, 134.65 examples/s]Map:  91%|█████████ | 18153/19996 [01:23<00:08, 223.62 examples/s]Map:  90%|█████████ | 18052/19996 [01:23<00:12, 153.43 examples/s]Map:  91%|█████████▏| 18264/19996 [01:23<00:07, 224.76 examples/s]Map:  91%|█████████ | 18185/19996 [01:23<00:07, 239.76 examples/s]Map:  90%|█████████ | 18078/19996 [01:23<00:11, 171.50 examples/s]Map:  91%|█████████▏| 18290/19996 [01:23<00:07, 230.06 examples/s]Map:  91%|█████████ | 18113/19996 [01:23<00:10, 187.33 examples/s]Map:  91%|█████████ | 18215/19996 [01:23<00:08, 217.28 examples/s]Map:  92%|█████████▏| 18325/19996 [01:23<00:07, 223.06 examples/s]Map:  91%|█████████ | 18139/19996 [01:23<00:09, 201.62 examples/s]Map:  91%|█████████ | 18241/19996 [01:23<00:07, 224.51 examples/s]Map:  92%|█████████▏| 18351/19996 [01:23<00:07, 230.90 examples/s]Map:  91%|█████████▏| 18265/19996 [01:23<00:07, 226.00 examples/s]Map:  91%|█████████ | 18170/19996 [01:23<00:08, 218.19 examples/s]Map:  92%|█████████▏| 18376/19996 [01:23<00:06, 232.02 examples/s]Map:  91%|█████████▏| 18290/19996 [01:23<00:07, 230.46 examples/s]Map:  91%|█████████ | 18196/19996 [01:23<00:08, 224.73 examples/s]Map:  92%|█████████▏| 18413/19996 [01:24<00:06, 234.47 examples/s]Map:  92%|█████████▏| 18324/19996 [01:24<00:07, 224.32 examples/s]Map:  91%|█████████ | 18229/19996 [01:24<00:08, 219.02 examples/s]Map:  92%|█████████▏| 18437/19996 [01:24<00:06, 233.05 examples/s]Map:  92%|█████████▏| 18347/19996 [01:24<00:07, 222.97 examples/s]Map:  91%|█████████▏| 18262/19996 [01:24<00:08, 216.23 examples/s]Map:  92%|█████████▏| 18464/19996 [01:24<00:07, 209.70 examples/s]Map:  92%|█████████▏| 18371/19996 [01:24<00:07, 224.92 examples/s]Map:  91%|█████████▏| 18286/19996 [01:24<00:07, 218.19 examples/s]Map:  92%|█████████▏| 18488/19996 [01:24<00:07, 214.57 examples/s]Map:  92%|█████████▏| 18408/19996 [01:24<00:07, 225.99 examples/s]Map:  92%|█████████▏| 18309/19996 [01:24<00:07, 215.46 examples/s]Map:  93%|█████████▎| 18521/19996 [01:24<00:06, 210.79 examples/s]Map:  92%|█████████▏| 18433/19996 [01:24<00:06, 225.44 examples/s]Map:  92%|█████████▏| 18333/19996 [01:24<00:07, 219.24 examples/s]Map:  93%|█████████▎| 18549/19996 [01:24<00:06, 226.45 examples/s]Map:  92%|█████████▏| 18357/19996 [01:24<00:07, 220.75 examples/s]Map:  92%|█████████▏| 18464/19996 [01:24<00:07, 209.59 examples/s]Map:  93%|█████████▎| 18573/19996 [01:24<00:06, 224.43 examples/s]Map:  92%|█████████▏| 18382/19996 [01:24<00:07, 226.13 examples/s]Map:  92%|█████████▏| 18489/19996 [01:24<00:06, 215.55 examples/s]Map:  92%|█████████▏| 18408/19996 [01:24<00:06, 230.24 examples/s]Map:  93%|█████████▎| 18606/19996 [01:24<00:06, 220.70 examples/s]Map:  92%|█████████▏| 18434/19996 [01:25<00:06, 233.36 examples/s]Map:  93%|█████████▎| 18522/19996 [01:25<00:06, 214.33 examples/s]Map:  93%|█████████▎| 18634/19996 [01:25<00:05, 232.74 examples/s]Map:  93%|█████████▎| 18551/19996 [01:25<00:06, 230.15 examples/s]Map:  93%|█████████▎| 18658/19996 [01:25<00:06, 215.26 examples/s]Map:  92%|█████████▏| 18464/19996 [01:25<00:07, 209.79 examples/s]Map:  93%|█████████▎| 18684/19996 [01:25<00:05, 223.57 examples/s]Map:  93%|█████████▎| 18584/19996 [01:25<00:06, 225.94 examples/s]Map:  92%|█████████▏| 18488/19996 [01:25<00:07, 214.84 examples/s]Map:  93%|█████████▎| 18623/19996 [01:25<00:05, 231.11 examples/s]Map:  94%|█████████▎| 18715/19996 [01:25<00:06, 210.34 examples/s]Map:  93%|█████████▎| 18521/19996 [01:25<00:06, 213.45 examples/s]Map:  94%|█████████▎| 18742/19996 [01:25<00:05, 223.54 examples/s]Map:  93%|█████████▎| 18550/19996 [01:25<00:06, 229.55 examples/s]Map:  93%|█████████▎| 18658/19996 [01:25<00:06, 214.44 examples/s]Map:  94%|█████████▍| 18769/19996 [01:25<00:05, 206.05 examples/s]Map:  93%|█████████▎| 18585/19996 [01:25<00:06, 226.38 examples/s]Map:  93%|█████████▎| 18684/19996 [01:25<00:05, 222.88 examples/s]Map:  94%|█████████▍| 18795/19996 [01:25<00:05, 216.62 examples/s]Map:  93%|█████████▎| 18623/19996 [01:25<00:05, 230.94 examples/s]Map:  94%|█████████▎| 18715/19996 [01:25<00:06, 210.95 examples/s]Map:  94%|█████████▍| 18821/19996 [01:25<00:05, 224.79 examples/s]Map:  93%|█████████▎| 18647/19996 [01:25<00:05, 229.77 examples/s]Map:  94%|█████████▎| 18743/19996 [01:25<00:05, 225.16 examples/s]Map:  94%|█████████▍| 18851/19996 [01:26<00:05, 205.35 examples/s]Map:  93%|█████████▎| 18673/19996 [01:26<00:05, 220.68 examples/s]Map:  94%|█████████▍| 18772/19996 [01:26<00:05, 209.69 examples/s]Map:  94%|█████████▍| 18879/19996 [01:26<00:05, 222.69 examples/s]Map:  94%|█████████▍| 18797/19996 [01:26<00:05, 218.66 examples/s]Map:  94%|█████████▎| 18704/19996 [01:26<00:06, 211.91 examples/s]Map:  95%|█████████▍| 18909/19996 [01:26<00:05, 211.20 examples/s]Map:  94%|█████████▍| 18823/19996 [01:26<00:05, 226.09 examples/s]Map:  94%|█████████▎| 18727/19996 [01:26<00:06, 209.36 examples/s]Map:  95%|█████████▍| 18939/19996 [01:26<00:04, 231.38 examples/s]Map:  94%|█████████▍| 18753/19996 [01:26<00:05, 218.68 examples/s]Map:  94%|█████████▍| 18851/19996 [01:26<00:05, 207.18 examples/s]Map:  95%|█████████▍| 18965/19996 [01:26<00:04, 237.78 examples/s]Map:  94%|█████████▍| 18878/19996 [01:26<00:05, 220.28 examples/s]Map:  94%|█████████▍| 18781/19996 [01:26<00:05, 205.31 examples/s]Map:  95%|█████████▌| 18999/19996 [01:26<00:04, 221.58 examples/s]Map:  94%|█████████▍| 18808/19996 [01:26<00:05, 216.09 examples/s]Map:  95%|█████████▍| 18912/19996 [01:26<00:04, 218.47 examples/s]Map:  95%|█████████▍| 18944/19996 [01:26<00:04, 238.57 examples/s]Map:  94%|█████████▍| 18840/19996 [01:26<00:05, 212.25 examples/s]Map:  95%|█████████▍| 18970/19996 [01:27<00:04, 234.23 examples/s]Map:  94%|█████████▍| 18874/19996 [01:27<00:05, 211.27 examples/s]Map:  95%|█████████▍| 18898/19996 [01:27<00:05, 215.92 examples/s]Map:  95%|█████████▌| 19035/19996 [01:27<00:07, 131.00 examples/s]Map:  95%|█████████▍| 18924/19996 [01:27<00:04, 225.18 examples/s]Map:  95%|█████████▌| 19054/19996 [01:27<00:06, 139.11 examples/s]Map:  95%|█████████▍| 18952/19996 [01:27<00:04, 233.84 examples/s]Map:  95%|█████████▌| 19080/19996 [01:27<00:05, 159.62 examples/s]Map:  95%|█████████▌| 19000/19996 [01:27<00:07, 127.33 examples/s]Map:  96%|█████████▌| 19107/19996 [01:27<00:04, 178.81 examples/s]Map:  95%|█████████▍| 18986/19996 [01:27<00:04, 226.06 examples/s]Map:  95%|█████████▌| 19021/19996 [01:27<00:07, 135.97 examples/s]Map:  96%|█████████▌| 19140/19996 [01:27<00:04, 184.64 examples/s]Map:  95%|█████████▌| 19042/19996 [01:27<00:06, 147.39 examples/s]Map:  95%|█████████▌| 19068/19996 [01:27<00:05, 169.04 examples/s]Map:  96%|█████████▌| 19171/19996 [01:27<00:04, 182.84 examples/s]Map:  95%|█████████▌| 19093/19996 [01:27<00:04, 183.91 examples/s]Map:  96%|█████████▌| 19194/19996 [01:27<00:04, 191.03 examples/s]Map:  95%|█████████▌| 19009/19996 [01:27<00:08, 120.18 examples/s]Map:  96%|█████████▌| 19118/19996 [01:28<00:04, 194.64 examples/s]Map:  96%|█████████▌| 19219/19996 [01:28<00:03, 202.97 examples/s]Map:  95%|█████████▌| 19034/19996 [01:28<00:06, 138.20 examples/s]Map:  96%|█████████▌| 19140/19996 [01:28<00:04, 195.43 examples/s]Map:  96%|█████████▌| 19245/19996 [01:28<00:03, 215.76 examples/s]Map:  95%|█████████▌| 19054/19996 [01:28<00:06, 147.13 examples/s]Map:  96%|█████████▌| 19171/19996 [01:28<00:04, 188.57 examples/s]Map:  96%|█████████▋| 19276/19996 [01:28<00:03, 210.87 examples/s]Map:  95%|█████████▌| 19082/19996 [01:28<00:05, 172.03 examples/s]Map:  96%|█████████▌| 19193/19996 [01:28<00:04, 194.79 examples/s]Map:  97%|█████████▋| 19305/19996 [01:28<00:03, 229.31 examples/s]Map:  96%|█████████▌| 19108/19996 [01:28<00:04, 187.87 examples/s]Map:  96%|█████████▌| 19217/19996 [01:28<00:03, 203.34 examples/s]Map:  97%|█████████▋| 19341/19996 [01:28<00:02, 230.54 examples/s]Map:  96%|█████████▌| 19139/19996 [01:28<00:04, 191.54 examples/s]Map:  96%|█████████▌| 19245/19996 [01:28<00:03, 216.13 examples/s]Map:  97%|█████████▋| 19372/19996 [01:28<00:02, 219.12 examples/s]Map:  96%|█████████▌| 19164/19996 [01:28<00:04, 182.43 examples/s]Map:  96%|█████████▋| 19276/19996 [01:28<00:03, 210.79 examples/s]Map:  96%|█████████▌| 19187/19996 [01:28<00:04, 191.30 examples/s]Map:  97%|█████████▋| 19396/19996 [01:28<00:02, 215.73 examples/s]Map:  97%|█████████▋| 19305/19996 [01:28<00:03, 229.21 examples/s]Map:  96%|█████████▌| 19212/19996 [01:28<00:03, 204.49 examples/s]Map:  97%|█████████▋| 19420/19996 [01:28<00:02, 217.47 examples/s]Map:  96%|█████████▌| 19239/19996 [01:29<00:03, 217.53 examples/s]Map:  97%|█████████▋| 19342/19996 [01:29<00:02, 224.33 examples/s]Map:  97%|█████████▋| 19447/19996 [01:29<00:02, 222.25 examples/s]Map:  96%|█████████▋| 19270/19996 [01:29<00:03, 209.08 examples/s]Map:  97%|█████████▋| 19375/19996 [01:29<00:02, 219.59 examples/s]Map:  97%|█████████▋| 19479/19996 [01:29<00:02, 215.66 examples/s]Map:  97%|█████████▋| 19298/19996 [01:29<00:03, 224.58 examples/s]Map:  97%|█████████▋| 19400/19996 [01:29<00:02, 224.76 examples/s]Map:  98%|█████████▊| 19509/19996 [01:29<00:02, 233.75 examples/s]Map:  97%|█████████▋| 19323/19996 [01:29<00:02, 226.62 examples/s]Map:  97%|█████████▋| 19423/19996 [01:29<00:02, 223.59 examples/s]Map:  98%|█████████▊| 19537/19996 [01:29<00:01, 241.66 examples/s]Map:  97%|█████████▋| 19446/19996 [01:29<00:02, 223.48 examples/s]Map:  98%|█████████▊| 19563/19996 [01:29<00:01, 244.36 examples/s]Map:  97%|█████████▋| 19354/19996 [01:29<00:02, 214.06 examples/s]Map:  97%|█████████▋| 19477/19996 [01:29<00:02, 211.69 examples/s]Map:  97%|█████████▋| 19380/19996 [01:29<00:02, 220.28 examples/s]Map:  98%|█████████▊| 19598/19996 [01:29<00:01, 230.74 examples/s]Map:  98%|█████████▊| 19507/19996 [01:29<00:02, 231.48 examples/s]Map:  97%|█████████▋| 19404/19996 [01:29<00:02, 222.46 examples/s]Map:  98%|█████████▊| 19625/19996 [01:29<00:01, 239.39 examples/s]Map:  97%|█████████▋| 19428/19996 [01:29<00:02, 225.66 examples/s]Map:  98%|█████████▊| 19547/19996 [01:29<00:01, 240.53 examples/s]Map:  98%|█████████▊| 19657/19996 [01:29<00:01, 223.07 examples/s]Map:  97%|█████████▋| 19452/19996 [01:30<00:02, 225.70 examples/s]Map:  98%|█████████▊| 19683/19996 [01:30<00:01, 228.25 examples/s]Map:  98%|█████████▊| 19584/19996 [01:30<00:01, 229.21 examples/s]Map:  97%|█████████▋| 19482/19996 [01:30<00:02, 213.91 examples/s]Map:  99%|█████████▊| 19707/19996 [01:30<00:01, 225.95 examples/s]Map:  98%|█████████▊| 19614/19996 [01:30<00:01, 240.87 examples/s]Map:  98%|█████████▊| 19509/19996 [01:30<00:02, 223.49 examples/s]Map:  99%|█████████▊| 19738/19996 [01:30<00:01, 246.22 examples/s]Map:  98%|█████████▊| 19536/19996 [01:30<00:01, 233.04 examples/s]Map:  98%|█████████▊| 19645/19996 [01:30<00:01, 225.55 examples/s]Map:  99%|█████████▉| 19768/19996 [01:30<00:00, 258.52 examples/s]Map:  98%|█████████▊| 19563/19996 [01:30<00:01, 239.50 examples/s]Map:  99%|█████████▉| 19795/19996 [01:30<00:00, 259.68 examples/s]Map:  98%|█████████▊| 19682/19996 [01:30<00:01, 223.64 examples/s]Map:  98%|█████████▊| 19597/19996 [01:30<00:01, 229.39 examples/s]Map:  99%|█████████▉| 19838/19996 [01:30<00:00, 265.91 examples/s]Map:  99%|█████████▊| 19706/19996 [01:30<00:01, 225.85 examples/s]Map:  98%|█████████▊| 19624/19996 [01:30<00:01, 234.62 examples/s]Map:  99%|█████████▊| 19734/19996 [01:30<00:01, 236.77 examples/s]Map:  99%|█████████▉| 19865/19996 [01:30<00:00, 256.02 examples/s]Map:  99%|█████████▉| 19763/19996 [01:30<00:00, 249.20 examples/s]Map:  99%|█████████▉| 19892/19996 [01:30<00:00, 252.63 examples/s]Map:  98%|█████████▊| 19656/19996 [01:30<00:01, 220.49 examples/s]Map:  99%|█████████▉| 19792/19996 [01:30<00:00, 258.03 examples/s]Map: 100%|█████████▉| 19919/19996 [01:30<00:00, 255.74 examples/s]Map:  98%|█████████▊| 19679/19996 [01:31<00:01, 218.36 examples/s]Map: 100%|█████████▉| 19945/19996 [01:31<00:00, 251.26 examples/s]Map:  99%|█████████▊| 19704/19996 [01:31<00:01, 224.20 examples/s]Map:  99%|█████████▉| 19835/19996 [01:31<00:00, 265.03 examples/s]Map:  99%|█████████▊| 19733/19996 [01:31<00:01, 239.39 examples/s]Map:  99%|█████████▉| 19863/19996 [01:31<00:00, 264.23 examples/s]Map: 100%|█████████▉| 19981/19996 [01:31<00:00, 239.18 examples/s]Map:  99%|█████████▉| 19762/19996 [01:31<00:00, 249.35 examples/s]Map: 100%|█████████▉| 19902/19996 [01:31<00:00, 261.27 examples/s]Map:  99%|█████████▉| 19791/19996 [01:31<00:00, 258.02 examples/s]Map: 100%|█████████▉| 19941/19996 [01:31<00:00, 252.20 examples/s]Map:  99%|█████████▉| 19832/19996 [01:31<00:00, 259.81 examples/s]Map:  99%|█████████▉| 19860/19996 [01:31<00:00, 260.09 examples/s]Map: 100%|█████████▉| 19971/19996 [01:31<00:00, 232.75 examples/s]Map: 100%|██████████| 19996/19996 [01:31<00:00, 217.86 examples/s]
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map: 100%|█████████▉| 19899/19996 [01:31<00:00, 254.02 examples/s]Map:   2%|▏         | 22/1000 [00:00<00:05, 170.07 examples/s]Map:   5%|▍         | 47/1000 [00:00<00:04, 211.25 examples/s]Map: 100%|█████████▉| 19938/19996 [01:32<00:00, 252.39 examples/s]Map:   7%|▋         | 69/1000 [00:00<00:04, 211.78 examples/s]Map: 100%|█████████▉| 19965/19996 [01:32<00:00, 223.10 examples/s]Map: 100%|██████████| 19996/19996 [01:32<00:00, 127.95 examples/s]Map: 100%|██████████| 19996/19996 [01:32<00:00, 216.90 examples/s]
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map:   9%|▉         | 93/1000 [00:00<00:04, 221.63 examples/s]Map: 100%|█████████▉| 19991/19996 [01:32<00:00, 227.63 examples/s]Map:   2%|▏         | 20/1000 [00:00<00:06, 154.21 examples/s]Map:  12%|█▏        | 123/1000 [00:00<00:04, 209.69 examples/s]Map:   4%|▍         | 43/1000 [00:00<00:04, 192.92 examples/s]Map:   7%|▋         | 69/1000 [00:00<00:04, 213.69 examples/s]Map:  15%|█▌        | 152/1000 [00:00<00:04, 197.73 examples/s]Map:   9%|▉         | 93/1000 [00:00<00:04, 216.91 examples/s]Map:  18%|█▊        | 177/1000 [00:00<00:03, 207.67 examples/s]Map: 100%|██████████| 19996/19996 [01:32<00:00, 215.73 examples/s]
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]Map:  20%|██        | 201/1000 [00:00<00:03, 208.00 examples/s]Map:  12%|█▏        | 124/1000 [00:00<00:04, 208.91 examples/s]Map:   2%|▏         | 20/1000 [00:00<00:06, 153.63 examples/s]Map:  23%|██▎       | 232/1000 [00:01<00:03, 204.44 examples/s]Map:   4%|▍         | 42/1000 [00:00<00:05, 185.52 examples/s]Map:  15%|█▌        | 152/1000 [00:00<00:04, 195.19 examples/s]Map:   7%|▋         | 69/1000 [00:00<00:04, 214.24 examples/s]Map:  18%|█▊        | 181/1000 [00:00<00:03, 213.99 examples/s]Map:  26%|██▌       | 261/1000 [00:01<00:03, 195.96 examples/s]Map:   9%|▉         | 93/1000 [00:00<00:04, 218.78 examples/s]Map:  29%|██▊       | 286/1000 [00:01<00:03, 205.53 examples/s]Map:  21%|██▏       | 213/1000 [00:01<00:03, 210.72 examples/s]Map:  31%|███       | 310/1000 [00:01<00:03, 211.52 examples/s]Map:  12%|█▎        | 125/1000 [00:00<00:04, 211.44 examples/s]Map:  24%|██▍       | 242/1000 [00:01<00:03, 201.91 examples/s]Map:  34%|███▍      | 339/1000 [00:01<00:02, 229.62 examples/s]Map:  15%|█▍        | 147/1000 [00:00<00:04, 210.36 examples/s]Map:  36%|███▋      | 365/1000 [00:01<00:02, 234.92 examples/s]Map:  28%|██▊       | 278/1000 [00:01<00:03, 209.78 examples/s]Map:  18%|█▊        | 181/1000 [00:00<00:03, 215.17 examples/s]Map:  30%|███       | 303/1000 [00:01<00:03, 216.23 examples/s]Map:  40%|███▉      | 399/1000 [00:01<00:02, 227.02 examples/s]Map:  21%|██▏       | 214/1000 [00:01<00:03, 215.30 examples/s]Map:  33%|███▎      | 330/1000 [00:01<00:02, 225.47 examples/s]Map:  44%|████▎     | 435/1000 [00:02<00:02, 229.35 examples/s]Map:  36%|███▌      | 355/1000 [00:01<00:02, 226.19 examples/s]Map:  24%|██▍       | 245/1000 [00:01<00:03, 200.42 examples/s]Map:  46%|████▋     | 465/1000 [00:02<00:02, 242.21 examples/s]Map:  38%|███▊      | 379/1000 [00:01<00:02, 226.49 examples/s]Map:  27%|██▋       | 270/1000 [00:01<00:03, 206.82 examples/s]Map:  50%|████▉     | 499/1000 [00:02<00:02, 232.76 examples/s]Map:  41%|████      | 406/1000 [00:01<00:02, 229.98 examples/s]Map:  30%|██▉       | 296/1000 [00:01<00:03, 218.84 examples/s]Map:  32%|███▏      | 322/1000 [00:01<00:02, 226.72 examples/s]Map:  53%|█████▎    | 533/1000 [00:02<00:02, 229.24 examples/s]Map:  44%|████▍     | 442/1000 [00:02<00:02, 230.89 examples/s]Map:  35%|███▍      | 349/1000 [00:01<00:02, 235.95 examples/s]Map:  47%|████▋     | 471/1000 [00:02<00:02, 242.69 examples/s]Map:  56%|█████▋    | 564/1000 [00:02<00:02, 214.92 examples/s]Map:  37%|███▋      | 374/1000 [00:01<00:02, 236.83 examples/s]Map:  59%|█████▉    | 589/1000 [00:02<00:01, 220.47 examples/s]Map:  51%|█████     | 506/1000 [00:02<00:02, 237.13 examples/s]Map:  40%|███▉      | 399/1000 [00:01<00:02, 229.65 examples/s]Map:  62%|██████▏   | 618/1000 [00:02<00:01, 225.81 examples/s]Map:  54%|█████▍    | 541/1000 [00:02<00:02, 223.79 examples/s]Map:  44%|████▎     | 435/1000 [00:01<00:02, 228.73 examples/s]Map:  65%|██████▍   | 646/1000 [00:02<00:01, 237.84 examples/s]Map:  46%|████▋     | 465/1000 [00:02<00:02, 241.53 examples/s]Map:  57%|█████▋    | 571/1000 [00:02<00:02, 212.69 examples/s]Map:  67%|██████▋   | 673/1000 [00:03<00:01, 238.67 examples/s]Map:  60%|█████▉    | 599/1000 [00:02<00:01, 224.80 examples/s]Map:  50%|████▉     | 499/1000 [00:02<00:02, 232.09 examples/s]Map:  70%|███████   | 703/1000 [00:03<00:01, 223.47 examples/s]Map:  62%|██████▎   | 625/1000 [00:02<00:01, 231.18 examples/s]Map:  52%|█████▏    | 523/1000 [00:02<00:02, 232.30 examples/s]Map:  73%|███████▎  | 732/1000 [00:03<00:01, 238.27 examples/s]Map:  65%|██████▌   | 651/1000 [00:02<00:01, 236.06 examples/s]Map:  55%|█████▌    | 554/1000 [00:02<00:02, 215.52 examples/s]Map:  77%|███████▋  | 769/1000 [00:03<00:00, 236.19 examples/s]Map:  69%|██████▉   | 689/1000 [00:03<00:01, 239.59 examples/s]Map:  58%|█████▊    | 578/1000 [00:02<00:01, 218.78 examples/s]Map:  80%|███████▉  | 795/1000 [00:03<00:00, 239.61 examples/s]Map:  60%|██████    | 605/1000 [00:02<00:01, 229.55 examples/s]Map:  82%|████████▏ | 820/1000 [00:03<00:00, 241.19 examples/s]Map:  72%|███████▏  | 722/1000 [00:03<00:01, 229.44 examples/s]Map:  63%|██████▎   | 631/1000 [00:02<00:01, 229.95 examples/s]Map:  85%|████████▌ | 851/1000 [00:03<00:00, 255.25 examples/s]Map:  75%|███████▍  | 749/1000 [00:03<00:01, 234.94 examples/s]Map:  66%|██████▌   | 657/1000 [00:02<00:01, 234.08 examples/s]Map:  78%|███████▊  | 775/1000 [00:03<00:00, 239.37 examples/s]Map:  88%|████████▊ | 883/1000 [00:03<00:00, 235.06 examples/s]Map:  80%|████████  | 801/1000 [00:03<00:00, 236.93 examples/s]Map:  69%|██████▉   | 692/1000 [00:03<00:01, 222.65 examples/s]Map:  92%|█████████▏| 916/1000 [00:04<00:00, 226.84 examples/s]Map:  83%|████████▎ | 829/1000 [00:03<00:00, 244.74 examples/s]Map:  73%|███████▎  | 732/1000 [00:03<00:01, 235.10 examples/s]Map:  95%|█████████▍| 946/1000 [00:04<00:00, 238.57 examples/s]Map:  85%|████████▌ | 854/1000 [00:03<00:00, 244.81 examples/s]Map:  88%|████████▊ | 880/1000 [00:03<00:00, 239.28 examples/s]Map:  77%|███████▋  | 768/1000 [00:03<00:00, 232.84 examples/s]Map:  98%|█████████▊| 984/1000 [00:04<00:00, 239.89 examples/s]Map:  91%|█████████ | 906/1000 [00:04<00:00, 240.11 examples/s]Map:  79%|███████▉  | 794/1000 [00:03<00:00, 237.24 examples/s]Map:  94%|█████████▎| 936/1000 [00:04<00:00, 249.62 examples/s]Map:  82%|████████▏ | 820/1000 [00:03<00:00, 239.69 examples/s]Map:  96%|█████████▌| 962/1000 [00:04<00:00, 245.83 examples/s]Map:  85%|████████▌ | 851/1000 [00:03<00:00, 254.57 examples/s]Map:  99%|█████████▉| 990/1000 [00:04<00:00, 253.47 examples/s]Map: 100%|██████████| 1000/1000 [00:04<00:00, 209.45 examples/s]
Map:  88%|████████▊ | 882/1000 [00:03<00:00, 232.08 examples/s]Map:  91%|█████████ | 907/1000 [00:04<00:00, 232.34 examples/s]Map:  94%|█████████▎| 936/1000 [00:04<00:00, 242.39 examples/s]Map: 100%|██████████| 1000/1000 [00:04<00:00, 212.01 examples/s]
Map:  97%|█████████▋| 974/1000 [00:04<00:00, 239.21 examples/s]Map: 100%|██████████| 1000/1000 [00:04<00:00, 135.12 examples/s]Map: 100%|██████████| 1000/1000 [00:04<00:00, 211.21 examples/s]
  0%|          | 0/468 [00:00<?, ?it/s]Could not estimate the number of tokens of the input, floating-point operations will not be computed
Could not estimate the number of tokens of the input, floating-point operations will not be computed
Could not estimate the number of tokens of the input, floating-point operations will not be computed
Could not estimate the number of tokens of the input, floating-point operations will not be computed
[2024-05-03 19:58:29,988] [WARNING] [stage3.py:2069:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  0%|          | 1/468 [00:23<2:59:23, 23.05s/it]                                                 {'loss': 0.6931, 'grad_norm': 163.7966373809739, 'learning_rate': 6.666666666666667e-09, 'rewards/chosen': 0.0, 'rewards/rejected': 0.0, 'rewards/accuracies': 0.0, 'rewards/margins': 0.0, 'logps/rejected': -488.9921875, 'logps/chosen': -476.35150146484375, 'logits/rejected': -2.2535531520843506, 'logits/chosen': -2.2779765129089355, 'epoch': 0.01}
  0%|          | 1/468 [00:23<2:59:23, 23.05s/it][2024-05-03 19:58:56,144] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  0%|          | 2/468 [00:49<3:13:11, 24.87s/it][2024-05-03 19:59:21,594] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  1%|          | 3/468 [01:14<3:14:48, 25.14s/it][2024-05-03 19:59:48,437] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  1%|          | 4/468 [01:41<3:19:36, 25.81s/it][2024-05-03 20:00:13,576] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  1%|          | 5/468 [02:06<3:17:18, 25.57s/it][2024-05-03 20:00:39,563] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  1%|▏         | 6/468 [02:32<3:17:58, 25.71s/it][2024-05-03 20:01:06,401] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  1%|▏         | 7/468 [02:59<3:20:22, 26.08s/it][2024-05-03 20:01:32,509] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  2%|▏         | 8/468 [03:25<3:20:00, 26.09s/it][2024-05-03 20:01:59,658] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  2%|▏         | 9/468 [03:52<3:22:06, 26.42s/it][2024-05-03 20:02:27,346] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  2%|▏         | 10/468 [04:20<3:24:39, 26.81s/it]                                                  {'loss': 0.6939, 'grad_norm': 154.18026700990575, 'learning_rate': 6.666666666666667e-08, 'rewards/chosen': 0.004554346203804016, 'rewards/rejected': 0.0038797648157924414, 'rewards/accuracies': 0.3888888955116272, 'rewards/margins': 0.0006745813880115747, 'logps/rejected': -470.9347839355469, 'logps/chosen': -458.18646240234375, 'logits/rejected': -2.4632771015167236, 'logits/chosen': -2.4644014835357666, 'epoch': 0.06}
  2%|▏         | 10/468 [04:20<3:24:39, 26.81s/it][2024-05-03 20:02:52,786] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  2%|▏         | 11/468 [04:45<3:21:00, 26.39s/it][2024-05-03 20:03:19,170] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  3%|▎         | 12/468 [05:12<3:20:33, 26.39s/it][2024-05-03 20:03:44,914] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  3%|▎         | 13/468 [05:37<3:18:38, 26.19s/it][2024-05-03 20:04:12,164] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  3%|▎         | 14/468 [06:05<3:20:36, 26.51s/it][2024-05-03 20:04:38,067] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  3%|▎         | 15/468 [06:31<3:18:46, 26.33s/it][2024-05-03 20:05:03,834] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  3%|▎         | 16/468 [06:56<3:17:04, 26.16s/it][2024-05-03 20:05:30,774] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  4%|▎         | 17/468 [07:23<3:18:24, 26.39s/it][2024-05-03 20:05:57,193] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  4%|▍         | 18/468 [07:50<3:18:00, 26.40s/it][2024-05-03 20:06:24,414] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  4%|▍         | 19/468 [08:17<3:19:25, 26.65s/it][2024-05-03 20:06:50,753] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  4%|▍         | 20/468 [08:43<3:18:16, 26.56s/it]                                                  {'loss': 0.6933, 'grad_norm': 158.94335062773646, 'learning_rate': 1.3333333333333334e-07, 'rewards/chosen': 0.0022250746842473745, 'rewards/rejected': 0.005434595514088869, 'rewards/accuracies': 0.453125, 'rewards/margins': -0.0032095196656882763, 'logps/rejected': -486.5860900878906, 'logps/chosen': -482.326904296875, 'logits/rejected': -2.3862967491149902, 'logits/chosen': -2.4033360481262207, 'epoch': 0.13}
  4%|▍         | 20/468 [08:43<3:18:16, 26.56s/it][2024-05-03 20:07:17,661] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  4%|▍         | 21/468 [09:10<3:18:37, 26.66s/it][2024-05-03 20:07:43,914] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  5%|▍         | 22/468 [09:36<3:17:16, 26.54s/it][2024-05-03 20:08:09,200] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  5%|▍         | 23/468 [10:02<3:14:02, 26.16s/it][2024-05-03 20:08:34,965] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  5%|▌         | 24/468 [10:28<3:12:43, 26.04s/it][2024-05-03 20:09:00,445] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  5%|▌         | 25/468 [10:53<3:11:02, 25.87s/it][2024-05-03 20:09:27,532] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  6%|▌         | 26/468 [11:20<3:13:17, 26.24s/it][2024-05-03 20:09:53,006] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  6%|▌         | 27/468 [11:46<3:11:09, 26.01s/it][2024-05-03 20:10:19,263] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  6%|▌         | 28/468 [12:12<3:11:16, 26.08s/it][2024-05-03 20:10:45,754] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  6%|▌         | 29/468 [12:38<3:11:44, 26.21s/it][2024-05-03 20:11:11,553] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  6%|▋         | 30/468 [13:04<3:10:24, 26.08s/it]                                                  {'loss': 0.6918, 'grad_norm': 161.08150558530667, 'learning_rate': 2e-07, 'rewards/chosen': 0.002738104434683919, 'rewards/rejected': -0.002977166324853897, 'rewards/accuracies': 0.49687498807907104, 'rewards/margins': 0.005715270526707172, 'logps/rejected': -490.0177307128906, 'logps/chosen': -480.793701171875, 'logits/rejected': -2.471505641937256, 'logits/chosen': -2.483910322189331, 'epoch': 0.19}
  6%|▋         | 30/468 [13:04<3:10:24, 26.08s/it][2024-05-03 20:11:38,190] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  7%|▋         | 31/468 [13:31<3:11:11, 26.25s/it][2024-05-03 20:12:05,002] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  7%|▋         | 32/468 [13:58<3:11:58, 26.42s/it][2024-05-03 20:12:31,606] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  7%|▋         | 33/468 [14:24<3:11:56, 26.47s/it][2024-05-03 20:12:58,661] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  7%|▋         | 34/468 [14:51<3:12:45, 26.65s/it][2024-05-03 20:13:24,198] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  7%|▋         | 35/468 [15:17<3:09:54, 26.32s/it][2024-05-03 20:13:51,148] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  8%|▊         | 36/468 [15:44<3:10:50, 26.51s/it][2024-05-03 20:14:18,742] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  8%|▊         | 37/468 [16:11<3:12:44, 26.83s/it][2024-05-03 20:14:44,486] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  8%|▊         | 38/468 [16:37<3:09:57, 26.51s/it][2024-05-03 20:15:10,463] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  8%|▊         | 39/468 [17:03<3:08:22, 26.35s/it][2024-05-03 20:15:37,030] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  9%|▊         | 40/468 [17:30<3:08:24, 26.41s/it]                                                  {'loss': 0.6848, 'grad_norm': 168.19429329785177, 'learning_rate': 2.6666666666666667e-07, 'rewards/chosen': 0.03653236851096153, 'rewards/rejected': 0.009729327633976936, 'rewards/accuracies': 0.518750011920929, 'rewards/margins': 0.026803040876984596, 'logps/rejected': -443.58721923828125, 'logps/chosen': -435.6026916503906, 'logits/rejected': -2.433441638946533, 'logits/chosen': -2.4424800872802734, 'epoch': 0.26}
  9%|▊         | 40/468 [17:30<3:08:24, 26.41s/it][2024-05-03 20:16:03,428] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  9%|▉         | 41/468 [17:56<3:07:56, 26.41s/it][2024-05-03 20:16:30,119] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  9%|▉         | 42/468 [18:23<3:08:06, 26.49s/it][2024-05-03 20:16:56,890] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  9%|▉         | 43/468 [18:49<3:08:15, 26.58s/it][2024-05-03 20:17:22,537] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
  9%|▉         | 44/468 [19:15<3:05:50, 26.30s/it][2024-05-03 20:17:49,013] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 10%|▉         | 45/468 [19:42<3:05:46, 26.35s/it][2024-05-03 20:18:15,098] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 10%|▉         | 46/468 [20:08<3:04:46, 26.27s/it][2024-05-03 20:18:41,117] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 10%|█         | 47/468 [20:34<3:03:48, 26.20s/it][2024-05-03 20:19:07,205] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 10%|█         | 48/468 [21:00<3:03:08, 26.16s/it][2024-05-03 20:19:33,550] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 10%|█         | 49/468 [21:26<3:03:05, 26.22s/it][2024-05-03 20:20:00,850] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 11%|█         | 50/468 [21:53<3:04:54, 26.54s/it]                                                  {'loss': 0.6737, 'grad_norm': 160.79033822492772, 'learning_rate': 3.333333333333333e-07, 'rewards/chosen': 0.08746916055679321, 'rewards/rejected': 0.020879123359918594, 'rewards/accuracies': 0.59375, 'rewards/margins': 0.06659004092216492, 'logps/rejected': -427.83001708984375, 'logps/chosen': -420.24542236328125, 'logits/rejected': -2.4986300468444824, 'logits/chosen': -2.5058741569519043, 'epoch': 0.32}
 11%|█         | 50/468 [21:53<3:04:54, 26.54s/it][2024-05-03 20:20:27,214] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 11%|█         | 51/468 [22:20<3:04:05, 26.49s/it][2024-05-03 20:20:53,542] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 11%|█         | 52/468 [22:46<3:03:19, 26.44s/it][2024-05-03 20:21:20,870] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 11%|█▏        | 53/468 [23:13<3:04:43, 26.71s/it][2024-05-03 20:21:45,546] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 12%|█▏        | 54/468 [23:38<3:00:04, 26.10s/it][2024-05-03 20:22:11,175] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 12%|█▏        | 55/468 [24:04<2:58:40, 25.96s/it][2024-05-03 20:22:36,165] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 12%|█▏        | 56/468 [24:29<2:56:14, 25.67s/it][2024-05-03 20:23:02,277] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 12%|█▏        | 57/468 [24:55<2:56:44, 25.80s/it][2024-05-03 20:23:27,966] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 12%|█▏        | 58/468 [25:21<2:56:04, 25.77s/it][2024-05-03 20:23:53,457] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 13%|█▎        | 59/468 [25:46<2:55:04, 25.68s/it][2024-05-03 20:24:20,059] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 13%|█▎        | 60/468 [26:13<2:56:31, 25.96s/it]                                                  {'loss': 0.6605, 'grad_norm': 167.3014952760846, 'learning_rate': 4e-07, 'rewards/chosen': 0.18544435501098633, 'rewards/rejected': 0.0795520544052124, 'rewards/accuracies': 0.5687500238418579, 'rewards/margins': 0.10589232295751572, 'logps/rejected': -462.4638671875, 'logps/chosen': -456.26348876953125, 'logits/rejected': -2.588430404663086, 'logits/chosen': -2.596078872680664, 'epoch': 0.38}
 13%|█▎        | 60/468 [26:13<2:56:31, 25.96s/it][2024-05-03 20:24:45,385] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 13%|█▎        | 61/468 [26:38<2:54:48, 25.77s/it][2024-05-03 20:25:10,430] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 13%|█▎        | 62/468 [27:03<2:52:54, 25.55s/it][2024-05-03 20:25:36,105] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 13%|█▎        | 63/468 [27:29<2:52:43, 25.59s/it][2024-05-03 20:26:01,994] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 14%|█▎        | 64/468 [27:55<2:52:54, 25.68s/it][2024-05-03 20:26:29,330] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 14%|█▍        | 65/468 [28:22<2:55:48, 26.18s/it][2024-05-03 20:26:56,225] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 14%|█▍        | 66/468 [28:49<2:56:49, 26.39s/it][2024-05-03 20:27:22,074] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 14%|█▍        | 67/468 [29:15<2:55:17, 26.23s/it][2024-05-03 20:27:47,942] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 15%|█▍        | 68/468 [29:40<2:54:08, 26.12s/it][2024-05-03 20:28:15,106] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 15%|█▍        | 69/468 [30:08<2:55:46, 26.43s/it][2024-05-03 20:28:40,974] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 15%|█▍        | 70/468 [30:34<2:54:13, 26.26s/it]                                                  {'loss': 0.6471, 'grad_norm': 170.22846259933078, 'learning_rate': 4.6666666666666666e-07, 'rewards/chosen': 0.22441580891609192, 'rewards/rejected': 0.02128646895289421, 'rewards/accuracies': 0.5406249761581421, 'rewards/margins': 0.2031293362379074, 'logps/rejected': -460.87530517578125, 'logps/chosen': -456.44580078125, 'logits/rejected': -2.5905776023864746, 'logits/chosen': -2.587597370147705, 'epoch': 0.45}
 15%|█▍        | 70/468 [30:34<2:54:13, 26.26s/it][2024-05-03 20:29:08,260] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 15%|█▌        | 71/468 [31:01<2:55:48, 26.57s/it][2024-05-03 20:29:34,548] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 15%|█▌        | 72/468 [31:27<2:54:48, 26.49s/it][2024-05-03 20:30:00,914] [WARNING] [stage3.py:2069:step] 17 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 16%|█▌        | 73/468 [31:53<2:54:07, 26.45s/it][2024-05-03 20:30:27,246] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 16%|█▌        | 74/468 [32:20<2:53:27, 26.41s/it][2024-05-03 20:30:53,250] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 16%|█▌        | 75/468 [32:46<2:52:12, 26.29s/it][2024-05-03 20:31:19,130] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 16%|█▌        | 76/468 [33:12<2:50:57, 26.17s/it][2024-05-03 20:31:45,201] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 16%|█▋        | 77/468 [33:38<2:50:20, 26.14s/it][2024-05-03 20:32:13,274] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 17%|█▋        | 78/468 [34:06<2:53:40, 26.72s/it][2024-05-03 20:32:39,452] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 17%|█▋        | 79/468 [34:32<2:52:10, 26.56s/it][2024-05-03 20:33:04,788] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 17%|█▋        | 80/468 [34:57<2:49:22, 26.19s/it]                                                  {'loss': 0.6177, 'grad_norm': 162.35812456217005, 'learning_rate': 5.333333333333333e-07, 'rewards/chosen': 0.3171120584011078, 'rewards/rejected': -0.05015181377530098, 'rewards/accuracies': 0.625, 'rewards/margins': 0.3672638535499573, 'logps/rejected': -438.6753845214844, 'logps/chosen': -429.961669921875, 'logits/rejected': -2.6641526222229004, 'logits/chosen': -2.6742324829101562, 'epoch': 0.51}
 17%|█▋        | 80/468 [34:57<2:49:22, 26.19s/it][2024-05-03 20:33:30,982] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 17%|█▋        | 81/468 [35:24<2:48:56, 26.19s/it][2024-05-03 20:33:57,366] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 18%|█▊        | 82/468 [35:50<2:48:52, 26.25s/it][2024-05-03 20:34:22,726] [WARNING] [stage3.py:2069:step] 9 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 18%|█▊        | 83/468 [36:15<2:46:43, 25.98s/it][2024-05-03 20:34:48,686] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 18%|█▊        | 84/468 [36:41<2:46:14, 25.98s/it][2024-05-03 20:35:14,202] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 18%|█▊        | 85/468 [37:07<2:44:55, 25.84s/it][2024-05-03 20:35:41,050] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 18%|█▊        | 86/468 [37:34<2:46:25, 26.14s/it][2024-05-03 20:36:07,086] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 19%|█▊        | 87/468 [38:00<2:45:47, 26.11s/it][2024-05-03 20:36:34,386] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 19%|█▉        | 88/468 [38:27<2:47:37, 26.47s/it][2024-05-03 20:37:00,258] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 19%|█▉        | 89/468 [38:53<2:46:03, 26.29s/it][2024-05-03 20:37:26,536] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 19%|█▉        | 90/468 [39:19<2:45:35, 26.29s/it]                                                  {'loss': 0.6099, 'grad_norm': 153.84466291897576, 'learning_rate': 6e-07, 'rewards/chosen': 0.2036937177181244, 'rewards/rejected': -0.10285411775112152, 'rewards/accuracies': 0.5718749761581421, 'rewards/margins': 0.3065478205680847, 'logps/rejected': -490.3680725097656, 'logps/chosen': -477.63348388671875, 'logits/rejected': -2.6848251819610596, 'logits/chosen': -2.689720392227173, 'epoch': 0.58}
 19%|█▉        | 90/468 [39:19<2:45:35, 26.29s/it][2024-05-03 20:37:51,762] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 19%|█▉        | 91/468 [39:44<2:43:09, 25.97s/it][2024-05-03 20:38:17,760] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 20%|█▉        | 92/468 [40:10<2:42:47, 25.98s/it][2024-05-03 20:38:44,224] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 20%|█▉        | 93/468 [40:37<2:43:16, 26.12s/it][2024-05-03 20:39:10,429] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 20%|██        | 94/468 [41:03<2:42:59, 26.15s/it][2024-05-03 20:39:35,677] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 20%|██        | 95/468 [41:28<2:40:52, 25.88s/it][2024-05-03 20:40:01,758] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 21%|██        | 96/468 [41:54<2:40:49, 25.94s/it][2024-05-03 20:40:27,346] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 21%|██        | 97/468 [42:20<2:39:44, 25.83s/it][2024-05-03 20:40:52,816] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 21%|██        | 98/468 [42:45<2:38:38, 25.72s/it][2024-05-03 20:41:19,686] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 21%|██        | 99/468 [43:12<2:40:19, 26.07s/it][2024-05-03 20:41:46,674] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 21%|██▏       | 100/468 [43:39<2:41:34, 26.34s/it]                                                   {'loss': 0.6155, 'grad_norm': 154.23209026142806, 'learning_rate': 6.666666666666666e-07, 'rewards/chosen': 0.14892269670963287, 'rewards/rejected': -0.5271671414375305, 'rewards/accuracies': 0.5687500238418579, 'rewards/margins': 0.6760897636413574, 'logps/rejected': -474.3399963378906, 'logps/chosen': -463.80804443359375, 'logits/rejected': -2.6438145637512207, 'logits/chosen': -2.6533360481262207, 'epoch': 0.64}
 21%|██▏       | 100/468 [43:39<2:41:34, 26.34s/it][2024-05-03 20:42:12,846] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 22%|██▏       | 101/468 [44:05<2:40:49, 26.29s/it][2024-05-03 20:42:38,276] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 22%|██▏       | 102/468 [44:31<2:38:48, 26.03s/it][2024-05-03 20:43:04,754] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 22%|██▏       | 103/468 [44:57<2:39:10, 26.17s/it][2024-05-03 20:43:30,649] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 22%|██▏       | 104/468 [45:23<2:38:15, 26.09s/it][2024-05-03 20:43:57,125] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 22%|██▏       | 105/468 [45:50<2:38:31, 26.20s/it][2024-05-03 20:44:22,898] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 23%|██▎       | 106/468 [46:15<2:37:18, 26.07s/it][2024-05-03 20:44:49,334] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 23%|██▎       | 107/468 [46:42<2:37:31, 26.18s/it][2024-05-03 20:45:14,021] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 23%|██▎       | 108/468 [47:07<2:34:24, 25.73s/it][2024-05-03 20:45:39,437] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 23%|██▎       | 109/468 [47:32<2:33:24, 25.64s/it][2024-05-03 20:46:06,383] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 24%|██▎       | 110/468 [47:59<2:35:19, 26.03s/it]                                                   {'loss': 0.598, 'grad_norm': 147.79716748018143, 'learning_rate': 7.333333333333332e-07, 'rewards/chosen': -0.11971229314804077, 'rewards/rejected': -0.6157398223876953, 'rewards/accuracies': 0.578125, 'rewards/margins': 0.49602755904197693, 'logps/rejected': -491.03564453125, 'logps/chosen': -480.19091796875, 'logits/rejected': -2.7713749408721924, 'logits/chosen': -2.7606194019317627, 'epoch': 0.7}
 24%|██▎       | 110/468 [47:59<2:35:19, 26.03s/it][2024-05-03 20:46:31,345] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 24%|██▎       | 111/468 [48:24<2:32:58, 25.71s/it][2024-05-03 20:46:57,527] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 24%|██▍       | 112/468 [48:50<2:33:23, 25.85s/it][2024-05-03 20:47:22,654] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 24%|██▍       | 113/468 [49:15<2:31:40, 25.63s/it][2024-05-03 20:47:48,666] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 24%|██▍       | 114/468 [49:41<2:31:54, 25.75s/it][2024-05-03 20:48:14,748] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 25%|██▍       | 115/468 [50:07<2:32:04, 25.85s/it][2024-05-03 20:48:40,730] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 25%|██▍       | 116/468 [50:33<2:31:52, 25.89s/it][2024-05-03 20:49:07,426] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 25%|██▌       | 117/468 [51:00<2:32:51, 26.13s/it][2024-05-03 20:49:32,366] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 25%|██▌       | 118/468 [51:25<2:30:20, 25.77s/it][2024-05-03 20:49:58,290] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 25%|██▌       | 119/468 [51:51<2:30:10, 25.82s/it][2024-05-03 20:50:25,614] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 26%|██▌       | 120/468 [52:18<2:32:22, 26.27s/it]                                                   {'loss': 0.5743, 'grad_norm': 151.95015926308267, 'learning_rate': 8e-07, 'rewards/chosen': 0.11119771003723145, 'rewards/rejected': -0.7747716307640076, 'rewards/accuracies': 0.606249988079071, 'rewards/margins': 0.8859692811965942, 'logps/rejected': -495.7344665527344, 'logps/chosen': -481.6414489746094, 'logits/rejected': -2.8178305625915527, 'logits/chosen': -2.821843385696411, 'epoch': 0.77}
 26%|██▌       | 120/468 [52:18<2:32:22, 26.27s/it][2024-05-03 20:50:50,633] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 26%|██▌       | 121/468 [52:43<2:29:45, 25.89s/it][2024-05-03 20:51:16,810] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 26%|██▌       | 122/468 [53:09<2:29:48, 25.98s/it][2024-05-03 20:51:41,750] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 26%|██▋       | 123/468 [53:34<2:27:35, 25.67s/it][2024-05-03 20:52:06,657] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 26%|██▋       | 124/468 [53:59<2:25:51, 25.44s/it][2024-05-03 20:52:31,943] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 27%|██▋       | 125/468 [54:25<2:25:09, 25.39s/it][2024-05-03 20:52:56,460] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 27%|██▋       | 126/468 [54:49<2:23:14, 25.13s/it][2024-05-03 20:53:21,781] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 27%|██▋       | 127/468 [55:14<2:23:09, 25.19s/it][2024-05-03 20:53:47,161] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 27%|██▋       | 128/468 [55:40<2:23:03, 25.25s/it][2024-05-03 20:54:14,018] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 28%|██▊       | 129/468 [56:07<2:25:21, 25.73s/it][2024-05-03 20:54:41,282] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 28%|██▊       | 130/468 [56:34<2:27:32, 26.19s/it]                                                   {'loss': 0.5614, 'grad_norm': 132.22014939827557, 'learning_rate': 8.666666666666667e-07, 'rewards/chosen': 0.11447324603796005, 'rewards/rejected': -0.6226571202278137, 'rewards/accuracies': 0.6187499761581421, 'rewards/margins': 0.7371304035186768, 'logps/rejected': -472.154296875, 'logps/chosen': -460.31903076171875, 'logits/rejected': -2.8455963134765625, 'logits/chosen': -2.8384618759155273, 'epoch': 0.83}
 28%|██▊       | 130/468 [56:34<2:27:32, 26.19s/it][2024-05-03 20:55:07,155] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 28%|██▊       | 131/468 [57:00<2:26:33, 26.09s/it][2024-05-03 20:55:32,589] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 28%|██▊       | 132/468 [57:25<2:25:01, 25.90s/it][2024-05-03 20:56:01,078] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 28%|██▊       | 133/468 [57:54<2:28:55, 26.67s/it][2024-05-03 20:56:26,873] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 29%|██▊       | 134/468 [58:19<2:27:01, 26.41s/it][2024-05-03 20:56:53,287] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 29%|██▉       | 135/468 [58:46<2:26:35, 26.41s/it][2024-05-03 20:57:18,671] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 29%|██▉       | 136/468 [59:11<2:24:26, 26.10s/it][2024-05-03 20:57:45,307] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 29%|██▉       | 137/468 [59:38<2:24:53, 26.26s/it][2024-05-03 20:58:11,130] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 29%|██▉       | 138/468 [1:00:04<2:23:43, 26.13s/it][2024-05-03 20:58:37,810] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 30%|██▉       | 139/468 [1:00:30<2:24:11, 26.30s/it][2024-05-03 20:59:05,122] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 30%|██▉       | 140/468 [1:00:58<2:25:24, 26.60s/it]                                                     {'loss': 0.5645, 'grad_norm': 140.28772803568717, 'learning_rate': 9.333333333333333e-07, 'rewards/chosen': 0.44219812750816345, 'rewards/rejected': -0.5044342279434204, 'rewards/accuracies': 0.612500011920929, 'rewards/margins': 0.9466322660446167, 'logps/rejected': -460.81463623046875, 'logps/chosen': -451.0516662597656, 'logits/rejected': -2.7997756004333496, 'logits/chosen': -2.792102813720703, 'epoch': 0.9}
 30%|██▉       | 140/468 [1:00:58<2:25:24, 26.60s/it][2024-05-03 20:59:30,890] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 30%|███       | 141/468 [1:01:23<2:23:36, 26.35s/it][2024-05-03 20:59:57,273] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 30%|███       | 142/468 [1:01:50<2:23:13, 26.36s/it][2024-05-03 21:00:22,554] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 31%|███       | 143/468 [1:02:15<2:21:01, 26.04s/it][2024-05-03 21:00:48,036] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 31%|███       | 144/468 [1:02:41<2:19:41, 25.87s/it][2024-05-03 21:01:12,843] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 31%|███       | 145/468 [1:03:05<2:17:33, 25.55s/it][2024-05-03 21:01:39,040] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 31%|███       | 146/468 [1:03:32<2:18:09, 25.75s/it][2024-05-03 21:02:04,939] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 31%|███▏      | 147/468 [1:03:57<2:17:59, 25.79s/it][2024-05-03 21:02:31,338] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 32%|███▏      | 148/468 [1:04:24<2:18:31, 25.97s/it][2024-05-03 21:02:57,551] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 32%|███▏      | 149/468 [1:04:50<2:18:28, 26.05s/it][2024-05-03 21:03:24,539] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 32%|███▏      | 150/468 [1:05:17<2:19:32, 26.33s/it]                                                     {'loss': 0.5652, 'grad_norm': 145.33436423388363, 'learning_rate': 1e-06, 'rewards/chosen': 0.3504355251789093, 'rewards/rejected': -0.7557371258735657, 'rewards/accuracies': 0.612500011920929, 'rewards/margins': 1.1061726808547974, 'logps/rejected': -479.55072021484375, 'logps/chosen': -460.16815185546875, 'logits/rejected': -2.7115283012390137, 'logits/chosen': -2.712312698364258, 'epoch': 0.96}
 32%|███▏      | 150/468 [1:05:17<2:19:32, 26.33s/it][2024-05-03 21:03:51,002] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 32%|███▏      | 151/468 [1:05:44<2:19:18, 26.37s/it][2024-05-03 21:04:18,091] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 32%|███▏      | 152/468 [1:06:11<2:20:00, 26.58s/it][2024-05-03 21:04:44,082] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 33%|███▎      | 153/468 [1:06:37<2:18:38, 26.41s/it][2024-05-03 21:05:10,275] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 33%|███▎      | 154/468 [1:07:03<2:17:51, 26.34s/it][2024-05-03 21:05:36,904] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 33%|███▎      | 155/468 [1:07:29<2:17:52, 26.43s/it][2024-05-03 21:06:02,666] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 33%|███▎      | 156/468 [1:07:55<2:16:23, 26.23s/it][2024-05-03 21:06:28,232] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 34%|███▎      | 157/468 [1:08:21<2:14:55, 26.03s/it][2024-05-03 21:06:54,174] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 34%|███▍      | 158/468 [1:08:47<2:14:21, 26.00s/it][2024-05-03 21:07:20,728] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 34%|███▍      | 159/468 [1:09:13<2:14:46, 26.17s/it][2024-05-03 21:07:47,530] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 34%|███▍      | 160/468 [1:09:40<2:15:18, 26.36s/it]                                                     {'loss': 0.4021, 'grad_norm': 19.4005515489354, 'learning_rate': 9.685534591194968e-07, 'rewards/chosen': 0.9577617645263672, 'rewards/rejected': -2.2308573722839355, 'rewards/accuracies': 0.706250011920929, 'rewards/margins': 3.188619375228882, 'logps/rejected': -493.3143615722656, 'logps/chosen': -458.73626708984375, 'logits/rejected': -2.7749974727630615, 'logits/chosen': -2.7656173706054688, 'epoch': 1.02}
 34%|███▍      | 160/468 [1:09:40<2:15:18, 26.36s/it][2024-05-03 21:08:12,937] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 34%|███▍      | 161/468 [1:10:05<2:13:24, 26.07s/it][2024-05-03 21:08:39,548] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 35%|███▍      | 162/468 [1:10:32<2:13:47, 26.23s/it][2024-05-03 21:09:06,414] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 35%|███▍      | 163/468 [1:10:59<2:14:19, 26.42s/it][2024-05-03 21:09:32,843] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 35%|███▌      | 164/468 [1:11:25<2:13:53, 26.43s/it][2024-05-03 21:09:59,350] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 35%|███▌      | 165/468 [1:11:52<2:13:34, 26.45s/it][2024-05-03 21:10:25,631] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 35%|███▌      | 166/468 [1:12:18<2:12:52, 26.40s/it][2024-05-03 21:10:51,988] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 36%|███▌      | 167/468 [1:12:45<2:12:22, 26.39s/it][2024-05-03 21:11:18,287] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 36%|███▌      | 168/468 [1:13:11<2:11:48, 26.36s/it][2024-05-03 21:11:44,548] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 36%|███▌      | 169/468 [1:13:37<2:11:12, 26.33s/it][2024-05-03 21:12:10,517] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 36%|███▋      | 170/468 [1:14:03<2:10:14, 26.22s/it]                                                     {'loss': 0.1174, 'grad_norm': 32.47824999930262, 'learning_rate': 9.371069182389937e-07, 'rewards/chosen': 1.639845848083496, 'rewards/rejected': -4.564446926116943, 'rewards/accuracies': 0.887499988079071, 'rewards/margins': 6.204293251037598, 'logps/rejected': -515.1597900390625, 'logps/chosen': -443.83489990234375, 'logits/rejected': -2.7072675228118896, 'logits/chosen': -2.6993935108184814, 'epoch': 1.09}
 36%|███▋      | 170/468 [1:14:03<2:10:14, 26.22s/it][2024-05-03 21:12:37,512] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 37%|███▋      | 171/468 [1:14:30<2:10:56, 26.45s/it][2024-05-03 21:13:03,602] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 37%|███▋      | 172/468 [1:14:56<2:09:57, 26.34s/it][2024-05-03 21:13:30,856] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 37%|███▋      | 173/468 [1:15:23<2:10:52, 26.62s/it][2024-05-03 21:13:58,289] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 37%|███▋      | 174/468 [1:15:51<2:11:37, 26.86s/it][2024-05-03 21:14:23,901] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 37%|███▋      | 175/468 [1:16:16<2:09:20, 26.49s/it][2024-05-03 21:14:49,959] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 38%|███▊      | 176/468 [1:16:43<2:08:16, 26.36s/it][2024-05-03 21:15:16,549] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 38%|███▊      | 177/468 [1:17:09<2:08:10, 26.43s/it][2024-05-03 21:15:42,347] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 38%|███▊      | 178/468 [1:17:35<2:06:49, 26.24s/it][2024-05-03 21:16:07,867] [WARNING] [stage3.py:2069:step] 9 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 38%|███▊      | 179/468 [1:18:00<2:05:20, 26.02s/it][2024-05-03 21:16:34,267] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 38%|███▊      | 180/468 [1:18:27<2:05:27, 26.14s/it]                                                     {'loss': 0.1128, 'grad_norm': 30.934718702623154, 'learning_rate': 9.056603773584905e-07, 'rewards/chosen': 1.446824312210083, 'rewards/rejected': -5.125567436218262, 'rewards/accuracies': 0.921875, 'rewards/margins': 6.572391510009766, 'logps/rejected': -507.07586669921875, 'logps/chosen': -428.17108154296875, 'logits/rejected': -2.680523157119751, 'logits/chosen': -2.6690025329589844, 'epoch': 1.15}
 38%|███▊      | 180/468 [1:18:27<2:05:27, 26.14s/it][2024-05-03 21:17:00,538] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 39%|███▊      | 181/468 [1:18:53<2:05:12, 26.18s/it][2024-05-03 21:17:27,440] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 39%|███▉      | 182/468 [1:19:20<2:05:48, 26.39s/it][2024-05-03 21:17:53,290] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 39%|███▉      | 183/468 [1:19:46<2:04:35, 26.23s/it][2024-05-03 21:18:20,066] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 39%|███▉      | 184/468 [1:20:13<2:04:56, 26.39s/it][2024-05-03 21:18:45,742] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|███▉      | 185/468 [1:20:38<2:03:28, 26.18s/it][2024-05-03 21:19:12,416] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|███▉      | 186/468 [1:21:05<2:03:44, 26.33s/it][2024-05-03 21:19:36,823] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|███▉      | 187/468 [1:21:29<2:00:36, 25.75s/it][2024-05-03 21:20:02,961] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|████      | 188/468 [1:21:56<2:00:42, 25.87s/it][2024-05-03 21:20:29,148] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|████      | 189/468 [1:22:22<2:00:43, 25.96s/it][2024-05-03 21:20:55,222] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 41%|████      | 190/468 [1:22:48<2:00:26, 26.00s/it]                                                     {'loss': 0.1083, 'grad_norm': 20.365831047368577, 'learning_rate': 8.742138364779874e-07, 'rewards/chosen': 1.3633657693862915, 'rewards/rejected': -5.913730621337891, 'rewards/accuracies': 0.8999999761581421, 'rewards/margins': 7.277096748352051, 'logps/rejected': -519.0677490234375, 'logps/chosen': -440.9857482910156, 'logits/rejected': -2.6656718254089355, 'logits/chosen': -2.652682065963745, 'epoch': 1.22}
 41%|████      | 190/468 [1:22:48<2:00:26, 26.00s/it][2024-05-03 21:21:22,426] [WARNING] [stage3.py:2069:step] 17 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 41%|████      | 191/468 [1:23:15<2:01:41, 26.36s/it][2024-05-03 21:21:49,001] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 41%|████      | 192/468 [1:23:42<2:01:32, 26.42s/it][2024-05-03 21:22:15,230] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 41%|████      | 193/468 [1:24:08<2:00:50, 26.37s/it][2024-05-03 21:22:41,098] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 41%|████▏     | 194/468 [1:24:34<1:59:43, 26.22s/it][2024-05-03 21:23:07,707] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 42%|████▏     | 195/468 [1:25:00<1:59:49, 26.33s/it][2024-05-03 21:23:34,558] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 42%|████▏     | 196/468 [1:25:27<2:00:04, 26.49s/it][2024-05-03 21:24:00,866] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 42%|████▏     | 197/468 [1:25:53<1:59:23, 26.43s/it][2024-05-03 21:24:26,702] [WARNING] [stage3.py:2069:step] 9 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 42%|████▏     | 198/468 [1:26:19<1:58:08, 26.26s/it][2024-05-03 21:24:54,174] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 43%|████▎     | 199/468 [1:26:47<1:59:20, 26.62s/it][2024-05-03 21:25:21,102] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 43%|████▎     | 200/468 [1:27:14<1:59:18, 26.71s/it]                                                     {'loss': 0.1072, 'grad_norm': 23.031995516216767, 'learning_rate': 8.427672955974843e-07, 'rewards/chosen': 1.0766239166259766, 'rewards/rejected': -6.119524002075195, 'rewards/accuracies': 0.878125011920929, 'rewards/margins': 7.196148872375488, 'logps/rejected': -529.9933471679688, 'logps/chosen': -455.1607971191406, 'logits/rejected': -2.65413498878479, 'logits/chosen': -2.661721706390381, 'epoch': 1.28}
 43%|████▎     | 200/468 [1:27:14<1:59:18, 26.71s/it][2024-05-03 21:25:47,258] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 43%|████▎     | 201/468 [1:27:40<1:58:07, 26.55s/it][2024-05-03 21:26:13,587] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 43%|████▎     | 202/468 [1:28:06<1:57:23, 26.48s/it][2024-05-03 21:26:38,928] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 43%|████▎     | 203/468 [1:28:31<1:55:26, 26.14s/it][2024-05-03 21:27:05,137] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 44%|████▎     | 204/468 [1:28:58<1:55:06, 26.16s/it][2024-05-03 21:27:31,027] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 44%|████▍     | 205/468 [1:29:24<1:54:18, 26.08s/it][2024-05-03 21:27:57,357] [WARNING] [stage3.py:2069:step] 23 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 44%|████▍     | 206/468 [1:29:50<1:54:12, 26.15s/it][2024-05-03 21:28:24,746] [WARNING] [stage3.py:2069:step] 20 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 44%|████▍     | 207/468 [1:30:17<1:55:22, 26.52s/it][2024-05-03 21:28:50,558] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 44%|████▍     | 208/468 [1:30:43<1:54:00, 26.31s/it][2024-05-03 21:29:16,076] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 45%|████▍     | 209/468 [1:31:09<1:52:32, 26.07s/it][2024-05-03 21:29:41,240] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 45%|████▍     | 210/468 [1:31:34<1:50:56, 25.80s/it]                                                     {'loss': 0.116, 'grad_norm': 28.533253208970194, 'learning_rate': 8.113207547169812e-07, 'rewards/chosen': 0.26449552178382874, 'rewards/rejected': -7.368919372558594, 'rewards/accuracies': 0.871874988079071, 'rewards/margins': 7.633415222167969, 'logps/rejected': -541.6796264648438, 'logps/chosen': -455.06024169921875, 'logits/rejected': -2.630563735961914, 'logits/chosen': -2.6093664169311523, 'epoch': 1.34}
 45%|████▍     | 210/468 [1:31:34<1:50:56, 25.80s/it][2024-05-03 21:30:09,118] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 45%|████▌     | 211/468 [1:32:02<1:53:10, 26.42s/it][2024-05-03 21:30:34,065] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 45%|████▌     | 212/468 [1:32:27<1:50:51, 25.98s/it][2024-05-03 21:31:00,866] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 46%|████▌     | 213/468 [1:32:53<1:51:27, 26.23s/it][2024-05-03 21:31:27,104] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 46%|████▌     | 214/468 [1:33:20<1:51:02, 26.23s/it][2024-05-03 21:31:52,487] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 46%|████▌     | 215/468 [1:33:45<1:49:31, 25.98s/it][2024-05-03 21:32:17,198] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 46%|████▌     | 216/468 [1:34:10<1:47:30, 25.60s/it][2024-05-03 21:32:42,561] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 46%|████▋     | 217/468 [1:34:35<1:46:47, 25.53s/it][2024-05-03 21:33:07,049] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 47%|████▋     | 218/468 [1:35:00<1:45:03, 25.21s/it][2024-05-03 21:33:32,674] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 47%|████▋     | 219/468 [1:35:25<1:45:09, 25.34s/it][2024-05-03 21:33:57,638] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 47%|████▋     | 220/468 [1:35:50<1:44:15, 25.23s/it]                                                     {'loss': 0.1078, 'grad_norm': 28.80926329530085, 'learning_rate': 7.79874213836478e-07, 'rewards/chosen': 0.27602291107177734, 'rewards/rejected': -6.983822822570801, 'rewards/accuracies': 0.887499988079071, 'rewards/margins': 7.259844779968262, 'logps/rejected': -536.2532958984375, 'logps/chosen': -452.4481506347656, 'logits/rejected': -2.6738221645355225, 'logits/chosen': -2.6559343338012695, 'epoch': 1.41}
 47%|████▋     | 220/468 [1:35:50<1:44:15, 25.23s/it][2024-05-03 21:34:22,458] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 47%|████▋     | 221/468 [1:36:15<1:43:20, 25.10s/it][2024-05-03 21:34:47,667] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 47%|████▋     | 222/468 [1:36:40<1:43:03, 25.14s/it][2024-05-03 21:35:13,162] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 48%|████▊     | 223/468 [1:37:06<1:43:04, 25.24s/it][2024-05-03 21:35:37,461] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 48%|████▊     | 224/468 [1:37:30<1:41:30, 24.96s/it][2024-05-03 21:36:02,762] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 48%|████▊     | 225/468 [1:37:55<1:41:30, 25.06s/it][2024-05-03 21:36:28,232] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 48%|████▊     | 226/468 [1:38:21<1:41:34, 25.18s/it][2024-05-03 21:36:54,106] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 49%|████▊     | 227/468 [1:38:47<1:41:59, 25.39s/it][2024-05-03 21:37:21,026] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 49%|████▊     | 228/468 [1:39:14<1:43:23, 25.85s/it][2024-05-03 21:37:47,484] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 49%|████▉     | 229/468 [1:39:40<1:43:41, 26.03s/it][2024-05-03 21:38:13,987] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 49%|████▉     | 230/468 [1:40:07<1:43:49, 26.17s/it]                                                     {'loss': 0.1067, 'grad_norm': 26.859095745123092, 'learning_rate': 7.484276729559747e-07, 'rewards/chosen': 0.09155650436878204, 'rewards/rejected': -7.9183149337768555, 'rewards/accuracies': 0.859375, 'rewards/margins': 8.009871482849121, 'logps/rejected': -568.0750122070312, 'logps/chosen': -483.4818420410156, 'logits/rejected': -2.6030869483947754, 'logits/chosen': -2.5873987674713135, 'epoch': 1.47}
 49%|████▉     | 230/468 [1:40:07<1:43:49, 26.17s/it][2024-05-03 21:38:39,579] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 49%|████▉     | 231/468 [1:40:32<1:42:41, 26.00s/it][2024-05-03 21:39:05,508] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 50%|████▉     | 232/468 [1:40:58<1:42:10, 25.98s/it][2024-05-03 21:39:30,805] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 50%|████▉     | 233/468 [1:41:23<1:40:56, 25.77s/it][2024-05-03 21:39:56,668] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 50%|█████     | 234/468 [1:41:49<1:40:37, 25.80s/it][2024-05-03 21:40:22,265] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 50%|█████     | 235/468 [1:42:15<1:39:57, 25.74s/it][2024-05-03 21:40:48,326] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 50%|█████     | 236/468 [1:42:41<1:39:53, 25.84s/it][2024-05-03 21:41:13,865] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 51%|█████     | 237/468 [1:43:06<1:39:07, 25.75s/it][2024-05-03 21:41:39,834] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 51%|█████     | 238/468 [1:43:32<1:38:57, 25.81s/it][2024-05-03 21:42:05,225] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 51%|█████     | 239/468 [1:43:58<1:38:02, 25.69s/it][2024-05-03 21:42:30,886] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 51%|█████▏    | 240/468 [1:44:23<1:37:34, 25.68s/it]                                                     {'loss': 0.1055, 'grad_norm': 36.83339501066532, 'learning_rate': 7.169811320754716e-07, 'rewards/chosen': -0.2608788311481476, 'rewards/rejected': -8.817167282104492, 'rewards/accuracies': 0.8656250238418579, 'rewards/margins': 8.55628776550293, 'logps/rejected': -565.6041870117188, 'logps/chosen': -471.95001220703125, 'logits/rejected': -2.5704174041748047, 'logits/chosen': -2.5395054817199707, 'epoch': 1.54}
 51%|█████▏    | 240/468 [1:44:23<1:37:34, 25.68s/it][2024-05-03 21:42:57,025] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 51%|█████▏    | 241/468 [1:44:50<1:37:40, 25.82s/it][2024-05-03 21:43:23,000] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 52%|█████▏    | 242/468 [1:45:16<1:37:25, 25.86s/it][2024-05-03 21:43:49,174] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 52%|█████▏    | 243/468 [1:45:42<1:37:20, 25.96s/it][2024-05-03 21:44:15,578] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 52%|█████▏    | 244/468 [1:46:08<1:37:24, 26.09s/it][2024-05-03 21:44:41,213] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 52%|█████▏    | 245/468 [1:46:34<1:36:27, 25.95s/it][2024-05-03 21:45:07,454] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 53%|█████▎    | 246/468 [1:47:00<1:36:20, 26.04s/it][2024-05-03 21:45:34,948] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 53%|█████▎    | 247/468 [1:47:28<1:37:31, 26.48s/it][2024-05-03 21:46:00,442] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 53%|█████▎    | 248/468 [1:47:53<1:36:00, 26.18s/it][2024-05-03 21:46:26,511] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 53%|█████▎    | 249/468 [1:48:19<1:35:26, 26.15s/it][2024-05-03 21:46:52,590] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 53%|█████▎    | 250/468 [1:48:45<1:34:55, 26.13s/it]                                                     {'loss': 0.0984, 'grad_norm': 47.3186905522101, 'learning_rate': 6.855345911949685e-07, 'rewards/chosen': -0.18151450157165527, 'rewards/rejected': -9.478799819946289, 'rewards/accuracies': 0.90625, 'rewards/margins': 9.297285079956055, 'logps/rejected': -555.1434326171875, 'logps/chosen': -453.09381103515625, 'logits/rejected': -2.592134952545166, 'logits/chosen': -2.5850398540496826, 'epoch': 1.6}
 53%|█████▎    | 250/468 [1:48:45<1:34:55, 26.13s/it][2024-05-03 21:47:19,844] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 54%|█████▎    | 251/468 [1:49:12<1:35:42, 26.47s/it][2024-05-03 21:47:44,926] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 54%|█████▍    | 252/468 [1:49:37<1:33:46, 26.05s/it][2024-05-03 21:48:10,614] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 54%|█████▍    | 253/468 [1:50:03<1:32:57, 25.94s/it][2024-05-03 21:48:36,090] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 54%|█████▍    | 254/468 [1:50:29<1:32:01, 25.80s/it][2024-05-03 21:49:03,018] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 54%|█████▍    | 255/468 [1:50:56<1:32:47, 26.14s/it][2024-05-03 21:49:29,047] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 55%|█████▍    | 256/468 [1:51:22<1:32:14, 26.11s/it][2024-05-03 21:49:57,550] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 55%|█████▍    | 257/468 [1:51:50<1:34:20, 26.83s/it][2024-05-03 21:50:24,461] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 55%|█████▌    | 258/468 [1:52:17<1:33:58, 26.85s/it][2024-05-03 21:50:49,385] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 55%|█████▌    | 259/468 [1:52:42<1:31:31, 26.27s/it][2024-05-03 21:51:15,778] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 56%|█████▌    | 260/468 [1:53:08<1:31:12, 26.31s/it]                                                     {'loss': 0.1046, 'grad_norm': 43.307987405932586, 'learning_rate': 6.540880503144653e-07, 'rewards/chosen': -1.116771936416626, 'rewards/rejected': -9.777070999145508, 'rewards/accuracies': 0.8656250238418579, 'rewards/margins': 8.660299301147461, 'logps/rejected': -562.6290283203125, 'logps/chosen': -468.2837829589844, 'logits/rejected': -2.6236724853515625, 'logits/chosen': -2.6036953926086426, 'epoch': 1.66}
 56%|█████▌    | 260/468 [1:53:08<1:31:12, 26.31s/it][2024-05-03 21:51:41,775] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 56%|█████▌    | 261/468 [1:53:34<1:30:26, 26.22s/it][2024-05-03 21:52:07,633] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 56%|█████▌    | 262/468 [1:54:00<1:29:38, 26.11s/it][2024-05-03 21:52:35,198] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 56%|█████▌    | 263/468 [1:54:28<1:30:41, 26.55s/it][2024-05-03 21:53:00,541] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 56%|█████▋    | 264/468 [1:54:53<1:29:01, 26.18s/it][2024-05-03 21:53:26,532] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 57%|█████▋    | 265/468 [1:55:19<1:28:23, 26.13s/it][2024-05-03 21:53:51,690] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 57%|█████▋    | 266/468 [1:55:44<1:26:58, 25.84s/it][2024-05-03 21:54:17,789] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 57%|█████▋    | 267/468 [1:56:10<1:26:48, 25.91s/it][2024-05-03 21:54:43,607] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 57%|█████▋    | 268/468 [1:56:36<1:26:17, 25.89s/it][2024-05-03 21:55:09,922] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 57%|█████▋    | 269/468 [1:57:02<1:26:16, 26.01s/it][2024-05-03 21:55:36,224] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 58%|█████▊    | 270/468 [1:57:29<1:26:08, 26.10s/it]                                                     {'loss': 0.1123, 'grad_norm': 19.668211901257088, 'learning_rate': 6.226415094339622e-07, 'rewards/chosen': -0.7038992047309875, 'rewards/rejected': -9.71460247039795, 'rewards/accuracies': 0.8968750238418579, 'rewards/margins': 9.010702133178711, 'logps/rejected': -558.8767700195312, 'logps/chosen': -462.4925842285156, 'logits/rejected': -2.629798412322998, 'logits/chosen': -2.6086363792419434, 'epoch': 1.73}
 58%|█████▊    | 270/468 [1:57:29<1:26:08, 26.10s/it][2024-05-03 21:56:02,237] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 58%|█████▊    | 271/468 [1:57:55<1:25:36, 26.07s/it][2024-05-03 21:56:28,422] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 58%|█████▊    | 272/468 [1:58:21<1:25:17, 26.11s/it][2024-05-03 21:56:54,830] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 58%|█████▊    | 273/468 [1:58:47<1:25:08, 26.20s/it][2024-05-03 21:57:21,871] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 59%|█████▊    | 274/468 [1:59:14<1:25:31, 26.45s/it][2024-05-03 21:57:48,636] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 59%|█████▉    | 275/468 [1:59:41<1:25:23, 26.55s/it][2024-05-03 21:58:15,069] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 59%|█████▉    | 276/468 [2:00:08<1:24:50, 26.51s/it][2024-05-03 21:58:42,268] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 59%|█████▉    | 277/468 [2:00:35<1:25:03, 26.72s/it][2024-05-03 21:59:07,470] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 59%|█████▉    | 278/468 [2:01:00<1:23:09, 26.26s/it][2024-05-03 21:59:33,844] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 60%|█████▉    | 279/468 [2:01:26<1:22:50, 26.30s/it][2024-05-03 22:00:00,514] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 60%|█████▉    | 280/468 [2:01:53<1:22:44, 26.41s/it]                                                     {'loss': 0.1087, 'grad_norm': 24.815489571561447, 'learning_rate': 5.911949685534591e-07, 'rewards/chosen': -0.16739515960216522, 'rewards/rejected': -9.359950065612793, 'rewards/accuracies': 0.878125011920929, 'rewards/margins': 9.192554473876953, 'logps/rejected': -560.091796875, 'logps/chosen': -462.5787658691406, 'logits/rejected': -2.541245937347412, 'logits/chosen': -2.527975082397461, 'epoch': 1.79}
 60%|█████▉    | 280/468 [2:01:53<1:22:44, 26.41s/it][2024-05-03 22:00:27,545] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 60%|██████    | 281/468 [2:02:20<1:22:53, 26.60s/it][2024-05-03 22:00:53,450] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 60%|██████    | 282/468 [2:02:46<1:21:48, 26.39s/it][2024-05-03 22:01:19,886] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 60%|██████    | 283/468 [2:03:12<1:21:24, 26.40s/it][2024-05-03 22:01:46,138] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 61%|██████    | 284/468 [2:03:39<1:20:49, 26.36s/it][2024-05-03 22:02:12,084] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 61%|██████    | 285/468 [2:04:05<1:20:00, 26.23s/it][2024-05-03 22:02:38,594] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 61%|██████    | 286/468 [2:04:31<1:19:49, 26.32s/it][2024-05-03 22:03:04,327] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 61%|██████▏   | 287/468 [2:04:57<1:18:51, 26.14s/it][2024-05-03 22:03:30,006] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 62%|██████▏   | 288/468 [2:05:23<1:18:00, 26.00s/it][2024-05-03 22:03:55,898] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 62%|██████▏   | 289/468 [2:05:48<1:17:28, 25.97s/it][2024-05-03 22:04:22,849] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 62%|██████▏   | 290/468 [2:06:15<1:17:54, 26.26s/it]                                                     {'loss': 0.101, 'grad_norm': 22.66401753318048, 'learning_rate': 5.59748427672956e-07, 'rewards/chosen': -0.10241055488586426, 'rewards/rejected': -9.478940963745117, 'rewards/accuracies': 0.8812500238418579, 'rewards/margins': 9.376529693603516, 'logps/rejected': -566.6145629882812, 'logps/chosen': -465.42822265625, 'logits/rejected': -2.5468225479125977, 'logits/chosen': -2.5256667137145996, 'epoch': 1.86}
 62%|██████▏   | 290/468 [2:06:15<1:17:54, 26.26s/it][2024-05-03 22:04:48,683] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 62%|██████▏   | 291/468 [2:06:41<1:17:05, 26.14s/it][2024-05-03 22:05:14,885] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 62%|██████▏   | 292/468 [2:07:07<1:16:43, 26.16s/it][2024-05-03 22:05:40,568] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 63%|██████▎   | 293/468 [2:07:33<1:15:52, 26.01s/it][2024-05-03 22:06:06,585] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 63%|██████▎   | 294/468 [2:07:59<1:15:26, 26.01s/it][2024-05-03 22:06:31,939] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 63%|██████▎   | 295/468 [2:08:24<1:14:26, 25.82s/it][2024-05-03 22:06:58,301] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 63%|██████▎   | 296/468 [2:08:51<1:14:28, 25.98s/it][2024-05-03 22:07:23,441] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 63%|██████▎   | 297/468 [2:09:16<1:13:19, 25.73s/it][2024-05-03 22:07:50,147] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 64%|██████▎   | 298/468 [2:09:43<1:13:43, 26.02s/it][2024-05-03 22:08:16,542] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 64%|██████▍   | 299/468 [2:10:09<1:13:36, 26.13s/it][2024-05-03 22:08:42,450] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 64%|██████▍   | 300/468 [2:10:35<1:12:59, 26.07s/it]                                                     {'loss': 0.1137, 'grad_norm': 38.680326182680375, 'learning_rate': 5.283018867924528e-07, 'rewards/chosen': -0.8130729794502258, 'rewards/rejected': -9.424116134643555, 'rewards/accuracies': 0.862500011920929, 'rewards/margins': 8.611043930053711, 'logps/rejected': -568.3060302734375, 'logps/chosen': -477.7255859375, 'logits/rejected': -2.591158628463745, 'logits/chosen': -2.5687813758850098, 'epoch': 1.92}
 64%|██████▍   | 300/468 [2:10:35<1:12:59, 26.07s/it][2024-05-03 22:09:08,005] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 64%|██████▍   | 301/468 [2:11:01<1:12:07, 25.91s/it][2024-05-03 22:09:33,506] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 65%|██████▍   | 302/468 [2:11:26<1:11:20, 25.79s/it][2024-05-03 22:09:59,137] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 65%|██████▍   | 303/468 [2:11:52<1:10:47, 25.74s/it][2024-05-03 22:10:25,692] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 65%|██████▍   | 304/468 [2:12:18<1:11:01, 25.99s/it][2024-05-03 22:10:51,289] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 65%|██████▌   | 305/468 [2:12:44<1:10:16, 25.87s/it][2024-05-03 22:11:17,299] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 65%|██████▌   | 306/468 [2:13:10<1:09:57, 25.91s/it][2024-05-03 22:11:43,130] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 66%|██████▌   | 307/468 [2:13:36<1:09:27, 25.89s/it][2024-05-03 22:12:09,274] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 66%|██████▌   | 308/468 [2:14:02<1:09:14, 25.96s/it][2024-05-03 22:12:35,558] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 66%|██████▌   | 309/468 [2:14:28<1:09:03, 26.06s/it][2024-05-03 22:13:02,403] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 66%|██████▌   | 310/468 [2:14:55<1:09:14, 26.30s/it]                                                     {'loss': 0.115, 'grad_norm': 38.079278594195316, 'learning_rate': 4.968553459119496e-07, 'rewards/chosen': -0.31517475843429565, 'rewards/rejected': -9.533149719238281, 'rewards/accuracies': 0.875, 'rewards/margins': 9.217974662780762, 'logps/rejected': -545.5089111328125, 'logps/chosen': -445.599853515625, 'logits/rejected': -2.542264223098755, 'logits/chosen': -2.5289416313171387, 'epoch': 1.98}
 66%|██████▌   | 310/468 [2:14:55<1:09:14, 26.30s/it][2024-05-03 22:13:27,758] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 66%|██████▋   | 311/468 [2:15:20<1:08:04, 26.01s/it][2024-05-03 22:13:54,010] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 67%|██████▋   | 312/468 [2:15:47<1:07:49, 26.09s/it][2024-05-03 22:14:21,009] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 67%|██████▋   | 313/468 [2:16:14<1:08:05, 26.36s/it][2024-05-03 22:14:45,789] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 67%|██████▋   | 314/468 [2:16:38<1:06:26, 25.89s/it][2024-05-03 22:15:13,456] [WARNING] [stage3.py:2069:step] 17 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 67%|██████▋   | 315/468 [2:17:06<1:07:22, 26.42s/it][2024-05-03 22:15:38,091] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 68%|██████▊   | 316/468 [2:17:31<1:05:34, 25.88s/it][2024-05-03 22:16:03,992] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 68%|██████▊   | 317/468 [2:17:57<1:05:09, 25.89s/it][2024-05-03 22:16:29,371] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 68%|██████▊   | 318/468 [2:18:22<1:04:20, 25.74s/it][2024-05-03 22:16:55,118] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 68%|██████▊   | 319/468 [2:18:48<1:03:55, 25.74s/it][2024-05-03 22:17:22,182] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 68%|██████▊   | 320/468 [2:19:15<1:04:28, 26.14s/it]                                                     {'loss': 0.0924, 'grad_norm': 3.888905860264353, 'learning_rate': 4.654088050314465e-07, 'rewards/chosen': -0.3786126971244812, 'rewards/rejected': -9.506958961486816, 'rewards/accuracies': 0.8843749761581421, 'rewards/margins': 9.12834644317627, 'logps/rejected': -556.4442138671875, 'logps/chosen': -461.3277282714844, 'logits/rejected': -2.5937702655792236, 'logits/chosen': -2.6023621559143066, 'epoch': 2.05}
 68%|██████▊   | 320/468 [2:19:15<1:04:28, 26.14s/it][2024-05-03 22:17:47,621] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 69%|██████▊   | 321/468 [2:19:40<1:03:31, 25.93s/it][2024-05-03 22:18:14,345] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 69%|██████▉   | 322/468 [2:20:07<1:03:40, 26.17s/it][2024-05-03 22:18:39,374] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 69%|██████▉   | 323/468 [2:20:32<1:02:24, 25.83s/it][2024-05-03 22:19:05,684] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 69%|██████▉   | 324/468 [2:20:58<1:02:19, 25.97s/it][2024-05-03 22:19:32,152] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 69%|██████▉   | 325/468 [2:21:25<1:02:15, 26.12s/it][2024-05-03 22:19:58,643] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 70%|██████▉   | 326/468 [2:21:51<1:02:04, 26.23s/it][2024-05-03 22:20:25,298] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 70%|██████▉   | 327/468 [2:22:18<1:01:56, 26.36s/it][2024-05-03 22:20:51,533] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 70%|███████   | 328/468 [2:22:44<1:01:24, 26.32s/it][2024-05-03 22:21:18,166] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 70%|███████   | 329/468 [2:23:11<1:01:11, 26.41s/it][2024-05-03 22:21:43,890] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 71%|███████   | 330/468 [2:23:36<1:00:16, 26.21s/it]                                                     {'loss': 0.077, 'grad_norm': 2.813551708775551, 'learning_rate': 4.339622641509434e-07, 'rewards/chosen': -0.01591692864894867, 'rewards/rejected': -9.763400077819824, 'rewards/accuracies': 0.925000011920929, 'rewards/margins': 9.747482299804688, 'logps/rejected': -540.3265991210938, 'logps/chosen': -436.6021423339844, 'logits/rejected': -2.581364870071411, 'logits/chosen': -2.575495481491089, 'epoch': 2.11}
 71%|███████   | 330/468 [2:23:36<1:00:16, 26.21s/it][2024-05-03 22:22:10,001] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 71%|███████   | 331/468 [2:24:03<59:46, 26.18s/it]  [2024-05-03 22:22:36,958] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 71%|███████   | 332/468 [2:24:30<59:52, 26.41s/it][2024-05-03 22:23:03,109] [WARNING] [stage3.py:2069:step] 21 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 71%|███████   | 333/468 [2:24:56<59:15, 26.33s/it][2024-05-03 22:23:29,769] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 71%|███████▏  | 334/468 [2:25:22<59:01, 26.43s/it][2024-05-03 22:23:56,425] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 72%|███████▏  | 335/468 [2:25:49<58:44, 26.50s/it][2024-05-03 22:24:20,738] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 72%|███████▏  | 336/468 [2:26:13<56:51, 25.84s/it][2024-05-03 22:24:46,038] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 72%|███████▏  | 337/468 [2:26:39<56:04, 25.68s/it][2024-05-03 22:25:10,402] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 72%|███████▏  | 338/468 [2:27:03<54:47, 25.29s/it][2024-05-03 22:25:36,202] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 72%|███████▏  | 339/468 [2:27:29<54:41, 25.44s/it][2024-05-03 22:26:00,878] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 73%|███████▎  | 340/468 [2:27:53<53:46, 25.21s/it]                                                   {'loss': 0.0761, 'grad_norm': 2.6193303879558214, 'learning_rate': 4.0251572327044023e-07, 'rewards/chosen': -0.5177940130233765, 'rewards/rejected': -10.36143684387207, 'rewards/accuracies': 0.8968750238418579, 'rewards/margins': 9.84364128112793, 'logps/rejected': -575.654296875, 'logps/chosen': -468.865478515625, 'logits/rejected': -2.6108388900756836, 'logits/chosen': -2.6016223430633545, 'epoch': 2.18}
 73%|███████▎  | 340/468 [2:27:53<53:46, 25.21s/it][2024-05-03 22:26:25,589] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 73%|███████▎  | 341/468 [2:28:18<53:02, 25.06s/it][2024-05-03 22:26:51,062] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 73%|███████▎  | 342/468 [2:28:44<52:53, 25.18s/it][2024-05-03 22:27:15,810] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 73%|███████▎  | 343/468 [2:29:08<52:11, 25.05s/it][2024-05-03 22:27:40,142] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 74%|███████▎  | 344/468 [2:29:33<51:19, 24.84s/it][2024-05-03 22:28:05,590] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 74%|███████▎  | 345/468 [2:29:58<51:17, 25.02s/it][2024-05-03 22:28:31,503] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 74%|███████▍  | 346/468 [2:30:24<51:25, 25.29s/it][2024-05-03 22:28:56,362] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 74%|███████▍  | 347/468 [2:30:49<50:44, 25.16s/it][2024-05-03 22:29:22,255] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 74%|███████▍  | 348/468 [2:31:15<50:45, 25.38s/it][2024-05-03 22:29:47,699] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 75%|███████▍  | 349/468 [2:31:40<50:22, 25.40s/it][2024-05-03 22:30:12,971] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 75%|███████▍  | 350/468 [2:32:06<49:52, 25.36s/it]                                                   {'loss': 0.07, 'grad_norm': 1.724341092663234, 'learning_rate': 3.7106918238993707e-07, 'rewards/chosen': -0.25896745920181274, 'rewards/rejected': -10.624506950378418, 'rewards/accuracies': 0.918749988079071, 'rewards/margins': 10.36553955078125, 'logps/rejected': -553.377685546875, 'logps/chosen': -448.19390869140625, 'logits/rejected': -2.6245875358581543, 'logits/chosen': -2.638786792755127, 'epoch': 2.24}
 75%|███████▍  | 350/468 [2:32:06<49:52, 25.36s/it][2024-05-03 22:30:37,840] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 75%|███████▌  | 351/468 [2:32:30<49:09, 25.21s/it][2024-05-03 22:31:02,454] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 75%|███████▌  | 352/468 [2:32:55<48:23, 25.03s/it][2024-05-03 22:31:27,628] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 75%|███████▌  | 353/468 [2:33:20<48:03, 25.08s/it][2024-05-03 22:31:53,130] [WARNING] [stage3.py:2069:step] 9 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 76%|███████▌  | 354/468 [2:33:46<47:53, 25.20s/it][2024-05-03 22:32:17,982] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 76%|███████▌  | 355/468 [2:34:11<47:16, 25.10s/it][2024-05-03 22:32:43,821] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 76%|███████▌  | 356/468 [2:34:36<47:15, 25.32s/it][2024-05-03 22:33:07,941] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 76%|███████▋  | 357/468 [2:35:00<46:10, 24.96s/it][2024-05-03 22:33:34,564] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 76%|███████▋  | 358/468 [2:35:27<46:40, 25.46s/it][2024-05-03 22:33:59,774] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 77%|███████▋  | 359/468 [2:35:52<46:06, 25.38s/it][2024-05-03 22:34:24,217] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 77%|███████▋  | 360/468 [2:36:17<45:11, 25.10s/it]                                                   {'loss': 0.0701, 'grad_norm': 2.9815186560296167, 'learning_rate': 3.396226415094339e-07, 'rewards/chosen': -0.3942919373512268, 'rewards/rejected': -10.58832836151123, 'rewards/accuracies': 0.903124988079071, 'rewards/margins': 10.194037437438965, 'logps/rejected': -560.2435302734375, 'logps/chosen': -451.124755859375, 'logits/rejected': -2.551030397415161, 'logits/chosen': -2.531702995300293, 'epoch': 2.3}
 77%|███████▋  | 360/468 [2:36:17<45:11, 25.10s/it][2024-05-03 22:34:48,758] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 77%|███████▋  | 361/468 [2:36:41<44:27, 24.93s/it][2024-05-03 22:35:14,462] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 77%|███████▋  | 362/468 [2:37:07<44:27, 25.16s/it][2024-05-03 22:35:39,394] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 78%|███████▊  | 363/468 [2:37:32<43:54, 25.09s/it][2024-05-03 22:36:04,309] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 78%|███████▊  | 364/468 [2:37:57<43:24, 25.04s/it][2024-05-03 22:36:30,078] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 78%|███████▊  | 365/468 [2:38:23<43:21, 25.26s/it][2024-05-03 22:36:54,710] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 78%|███████▊  | 366/468 [2:38:47<42:37, 25.07s/it][2024-05-03 22:37:19,793] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 78%|███████▊  | 367/468 [2:39:12<42:12, 25.07s/it][2024-05-03 22:37:44,345] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 79%|███████▊  | 368/468 [2:39:37<41:31, 24.92s/it][2024-05-03 22:38:09,272] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 79%|███████▉  | 369/468 [2:40:02<41:07, 24.92s/it][2024-05-03 22:38:34,075] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 79%|███████▉  | 370/468 [2:40:27<40:38, 24.89s/it]                                                   {'loss': 0.079, 'grad_norm': 1.7353183577715139, 'learning_rate': 3.081761006289308e-07, 'rewards/chosen': -1.1305614709854126, 'rewards/rejected': -10.413296699523926, 'rewards/accuracies': 0.875, 'rewards/margins': 9.282735824584961, 'logps/rejected': -587.22509765625, 'logps/chosen': -490.5231018066406, 'logits/rejected': -2.616725206375122, 'logits/chosen': -2.6021876335144043, 'epoch': 2.37}
 79%|███████▉  | 370/468 [2:40:27<40:38, 24.89s/it][2024-05-03 22:38:57,757] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 79%|███████▉  | 371/468 [2:40:50<39:38, 24.52s/it][2024-05-03 22:39:24,706] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 79%|███████▉  | 372/468 [2:41:17<40:24, 25.25s/it][2024-05-03 22:39:49,246] [WARNING] [stage3.py:2069:step] 9 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 80%|███████▉  | 373/468 [2:41:42<39:38, 25.04s/it][2024-05-03 22:40:14,237] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 80%|███████▉  | 374/468 [2:42:07<39:12, 25.02s/it][2024-05-03 22:40:39,000] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 80%|████████  | 375/468 [2:42:32<38:39, 24.95s/it][2024-05-03 22:41:04,505] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 80%|████████  | 376/468 [2:42:57<38:30, 25.11s/it][2024-05-03 22:41:29,552] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 81%|████████  | 377/468 [2:43:22<38:03, 25.09s/it][2024-05-03 22:41:54,716] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 81%|████████  | 378/468 [2:43:47<37:40, 25.11s/it][2024-05-03 22:42:19,478] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 81%|████████  | 379/468 [2:44:12<37:05, 25.01s/it][2024-05-03 22:42:45,219] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 81%|████████  | 380/468 [2:44:38<37:00, 25.23s/it]                                                   {'loss': 0.0844, 'grad_norm': 4.007910812592036, 'learning_rate': 2.767295597484277e-07, 'rewards/chosen': -1.0037912130355835, 'rewards/rejected': -11.391644477844238, 'rewards/accuracies': 0.887499988079071, 'rewards/margins': 10.387852668762207, 'logps/rejected': -578.5001220703125, 'logps/chosen': -471.66473388671875, 'logits/rejected': -2.6117615699768066, 'logits/chosen': -2.602966785430908, 'epoch': 2.43}
 81%|████████  | 380/468 [2:44:38<37:00, 25.23s/it][2024-05-03 22:43:11,014] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 81%|████████▏ | 381/468 [2:45:04<36:49, 25.40s/it][2024-05-03 22:43:35,122] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 82%|████████▏ | 382/468 [2:45:28<35:50, 25.01s/it][2024-05-03 22:43:59,438] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 82%|████████▏ | 383/468 [2:45:52<35:08, 24.80s/it][2024-05-03 22:44:24,390] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 82%|████████▏ | 384/468 [2:46:17<34:47, 24.85s/it][2024-05-03 22:44:48,713] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 82%|████████▏ | 385/468 [2:46:41<34:09, 24.69s/it][2024-05-03 22:45:14,014] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 82%|████████▏ | 386/468 [2:47:07<33:59, 24.87s/it][2024-05-03 22:45:40,523] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 83%|████████▎ | 387/468 [2:47:33<34:14, 25.36s/it][2024-05-03 22:46:05,412] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 83%|████████▎ | 388/468 [2:47:58<33:37, 25.22s/it][2024-05-03 22:46:30,842] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 83%|████████▎ | 389/468 [2:48:23<33:17, 25.28s/it][2024-05-03 22:46:55,573] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 83%|████████▎ | 390/468 [2:48:48<32:39, 25.12s/it]                                                   {'loss': 0.0736, 'grad_norm': 7.6191402432344555, 'learning_rate': 2.452830188679245e-07, 'rewards/chosen': -1.27482271194458, 'rewards/rejected': -12.08979606628418, 'rewards/accuracies': 0.890625, 'rewards/margins': 10.814973831176758, 'logps/rejected': -610.0614013671875, 'logps/chosen': -501.5943298339844, 'logits/rejected': -2.613088607788086, 'logits/chosen': -2.592780590057373, 'epoch': 2.5}
 83%|████████▎ | 390/468 [2:48:48<32:39, 25.12s/it][2024-05-03 22:47:20,638] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 84%|████████▎ | 391/468 [2:49:13<32:12, 25.10s/it][2024-05-03 22:47:45,017] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 84%|████████▍ | 392/468 [2:49:38<31:31, 24.89s/it][2024-05-03 22:48:09,361] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 84%|████████▍ | 393/468 [2:50:02<30:54, 24.72s/it][2024-05-03 22:48:33,592] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 84%|████████▍ | 394/468 [2:50:26<30:18, 24.58s/it][2024-05-03 22:48:59,180] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 84%|████████▍ | 395/468 [2:50:52<30:16, 24.88s/it][2024-05-03 22:49:23,702] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 85%|████████▍ | 396/468 [2:51:16<29:43, 24.77s/it][2024-05-03 22:49:49,630] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 85%|████████▍ | 397/468 [2:51:42<29:43, 25.12s/it][2024-05-03 22:50:15,210] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 85%|████████▌ | 398/468 [2:52:08<29:27, 25.26s/it][2024-05-03 22:50:40,831] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 85%|████████▌ | 399/468 [2:52:33<29:10, 25.37s/it][2024-05-03 22:51:06,354] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 85%|████████▌ | 400/468 [2:52:59<28:48, 25.41s/it]                                                   {'loss': 0.0799, 'grad_norm': 2.2407430221587172, 'learning_rate': 2.1383647798742137e-07, 'rewards/chosen': -1.3940293788909912, 'rewards/rejected': -11.886144638061523, 'rewards/accuracies': 0.925000011920929, 'rewards/margins': 10.49211597442627, 'logps/rejected': -579.8738403320312, 'logps/chosen': -462.4607849121094, 'logits/rejected': -2.595482110977173, 'logits/chosen': -2.583946943283081, 'epoch': 2.56}
 85%|████████▌ | 400/468 [2:52:59<28:48, 25.41s/it][2024-05-03 22:51:30,873] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 86%|████████▌ | 401/468 [2:53:23<28:04, 25.14s/it][2024-05-03 22:51:56,751] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 86%|████████▌ | 402/468 [2:53:49<27:54, 25.36s/it][2024-05-03 22:52:21,707] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 86%|████████▌ | 403/468 [2:54:14<27:20, 25.24s/it][2024-05-03 22:52:46,645] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 86%|████████▋ | 404/468 [2:54:39<26:49, 25.15s/it][2024-05-03 22:53:11,114] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 87%|████████▋ | 405/468 [2:55:04<26:11, 24.95s/it][2024-05-03 22:53:36,355] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 87%|████████▋ | 406/468 [2:55:29<25:52, 25.03s/it][2024-05-03 22:54:01,914] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 87%|████████▋ | 407/468 [2:55:54<25:36, 25.19s/it][2024-05-03 22:54:26,078] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 87%|████████▋ | 408/468 [2:56:19<24:53, 24.88s/it][2024-05-03 22:54:51,190] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 87%|████████▋ | 409/468 [2:56:44<24:32, 24.95s/it][2024-05-03 22:55:15,753] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 88%|████████▊ | 410/468 [2:57:08<24:00, 24.84s/it]                                                   {'loss': 0.0711, 'grad_norm': 2.216217114708844, 'learning_rate': 1.823899371069182e-07, 'rewards/chosen': -1.1703553199768066, 'rewards/rejected': -12.117701530456543, 'rewards/accuracies': 0.903124988079071, 'rewards/margins': 10.947346687316895, 'logps/rejected': -596.2561645507812, 'logps/chosen': -480.85382080078125, 'logits/rejected': -2.5235908031463623, 'logits/chosen': -2.5202159881591797, 'epoch': 2.62}
 88%|████████▊ | 410/468 [2:57:08<24:00, 24.84s/it][2024-05-03 22:55:40,164] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 88%|████████▊ | 411/468 [2:57:33<23:28, 24.71s/it][2024-05-03 22:56:05,230] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 88%|████████▊ | 412/468 [2:57:58<23:09, 24.82s/it][2024-05-03 22:56:30,634] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 88%|████████▊ | 413/468 [2:58:23<22:54, 24.99s/it][2024-05-03 22:56:55,906] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 88%|████████▊ | 414/468 [2:58:48<22:34, 25.08s/it][2024-05-03 22:57:20,434] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 89%|████████▊ | 415/468 [2:59:13<22:00, 24.91s/it][2024-05-03 22:57:46,299] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 89%|████████▉ | 416/468 [2:59:39<21:50, 25.20s/it][2024-05-03 22:58:10,806] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 89%|████████▉ | 417/468 [3:00:03<21:14, 24.99s/it][2024-05-03 22:58:36,994] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 89%|████████▉ | 418/468 [3:00:30<21:07, 25.35s/it][2024-05-03 22:59:02,078] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 90%|████████▉ | 419/468 [3:00:55<20:38, 25.27s/it][2024-05-03 22:59:26,267] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 90%|████████▉ | 420/468 [3:01:19<19:57, 24.95s/it]                                                   {'loss': 0.0723, 'grad_norm': 1.6958725611136451, 'learning_rate': 1.509433962264151e-07, 'rewards/chosen': -1.283238172531128, 'rewards/rejected': -11.977348327636719, 'rewards/accuracies': 0.890625, 'rewards/margins': 10.694108963012695, 'logps/rejected': -574.8218383789062, 'logps/chosen': -455.62432861328125, 'logits/rejected': -2.542541027069092, 'logits/chosen': -2.5472588539123535, 'epoch': 2.69}
 90%|████████▉ | 420/468 [3:01:19<19:57, 24.95s/it][2024-05-03 22:59:52,135] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 90%|████████▉ | 421/468 [3:01:45<19:45, 25.22s/it][2024-05-03 23:00:17,450] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 90%|█████████ | 422/468 [3:02:10<19:21, 25.25s/it][2024-05-03 23:00:42,525] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 90%|█████████ | 423/468 [3:02:35<18:53, 25.20s/it][2024-05-03 23:01:07,101] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 91%|█████████ | 424/468 [3:03:00<18:20, 25.01s/it][2024-05-03 23:01:32,723] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 91%|█████████ | 425/468 [3:03:25<18:03, 25.19s/it][2024-05-03 23:01:57,494] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 91%|█████████ | 426/468 [3:03:50<17:32, 25.07s/it][2024-05-03 23:02:22,817] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 91%|█████████ | 427/468 [3:04:15<17:10, 25.14s/it][2024-05-03 23:02:48,741] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 91%|█████████▏| 428/468 [3:04:41<16:55, 25.38s/it][2024-05-03 23:03:13,777] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 92%|█████████▏| 429/468 [3:05:06<16:25, 25.28s/it][2024-05-03 23:03:39,673] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 92%|█████████▏| 430/468 [3:05:32<16:07, 25.46s/it]                                                   {'loss': 0.0798, 'grad_norm': 2.199863726174215, 'learning_rate': 1.1949685534591195e-07, 'rewards/chosen': -1.190587043762207, 'rewards/rejected': -12.092434883117676, 'rewards/accuracies': 0.903124988079071, 'rewards/margins': 10.901847839355469, 'logps/rejected': -586.9234619140625, 'logps/chosen': -466.88946533203125, 'logits/rejected': -2.5813183784484863, 'logits/chosen': -2.5617878437042236, 'epoch': 2.75}
 92%|█████████▏| 430/468 [3:05:32<16:07, 25.46s/it][2024-05-03 23:04:04,997] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 92%|█████████▏| 431/468 [3:05:58<15:40, 25.42s/it][2024-05-03 23:04:30,089] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 92%|█████████▏| 432/468 [3:06:23<15:11, 25.32s/it][2024-05-03 23:04:55,373] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 93%|█████████▎| 433/468 [3:06:48<14:45, 25.31s/it][2024-05-03 23:05:20,529] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 93%|█████████▎| 434/468 [3:07:13<14:18, 25.26s/it][2024-05-03 23:05:44,806] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 93%|█████████▎| 435/468 [3:07:37<13:43, 24.97s/it][2024-05-03 23:06:09,826] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 93%|█████████▎| 436/468 [3:08:02<13:19, 24.98s/it][2024-05-03 23:06:35,050] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 93%|█████████▎| 437/468 [3:08:28<12:56, 25.06s/it][2024-05-03 23:06:58,954] [WARNING] [stage3.py:2069:step] 4 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 94%|█████████▎| 438/468 [3:08:52<12:21, 24.71s/it][2024-05-03 23:07:25,306] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 94%|█████████▍| 439/468 [3:09:18<12:10, 25.20s/it][2024-05-03 23:07:50,309] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 94%|█████████▍| 440/468 [3:09:43<11:43, 25.14s/it]                                                   {'loss': 0.08, 'grad_norm': 2.34351840109825, 'learning_rate': 8.805031446540879e-08, 'rewards/chosen': -1.780013084411621, 'rewards/rejected': -12.442665100097656, 'rewards/accuracies': 0.8999999761581421, 'rewards/margins': 10.662652969360352, 'logps/rejected': -601.145263671875, 'logps/chosen': -487.5895080566406, 'logits/rejected': -2.612196445465088, 'logits/chosen': -2.5991499423980713, 'epoch': 2.82}
 94%|█████████▍| 440/468 [3:09:43<11:43, 25.14s/it][2024-05-03 23:08:15,457] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 94%|█████████▍| 441/468 [3:10:08<11:18, 25.14s/it][2024-05-03 23:08:40,804] [WARNING] [stage3.py:2069:step] 8 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 94%|█████████▍| 442/468 [3:10:33<10:55, 25.21s/it][2024-05-03 23:09:05,353] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 95%|█████████▍| 443/468 [3:10:58<10:25, 25.01s/it][2024-05-03 23:09:30,050] [WARNING] [stage3.py:2069:step] 10 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 95%|█████████▍| 444/468 [3:11:23<09:57, 24.91s/it][2024-05-03 23:09:54,880] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 95%|█████████▌| 445/468 [3:11:47<09:32, 24.89s/it][2024-05-03 23:10:19,537] [WARNING] [stage3.py:2069:step] 16 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 95%|█████████▌| 446/468 [3:12:12<09:06, 24.82s/it][2024-05-03 23:10:45,003] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 96%|█████████▌| 447/468 [3:12:38<08:45, 25.01s/it][2024-05-03 23:11:09,381] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 96%|█████████▌| 448/468 [3:13:02<08:16, 24.82s/it][2024-05-03 23:11:34,325] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 96%|█████████▌| 449/468 [3:13:27<07:52, 24.86s/it][2024-05-03 23:11:59,930] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 96%|█████████▌| 450/468 [3:13:52<07:31, 25.08s/it]                                                   {'loss': 0.0741, 'grad_norm': 3.670358259239425, 'learning_rate': 5.660377358490566e-08, 'rewards/chosen': -1.5254961252212524, 'rewards/rejected': -12.437764167785645, 'rewards/accuracies': 0.8968750238418579, 'rewards/margins': 10.91226863861084, 'logps/rejected': -595.5743408203125, 'logps/chosen': -479.26544189453125, 'logits/rejected': -2.5667507648468018, 'logits/chosen': -2.5424697399139404, 'epoch': 2.88}
 96%|█████████▌| 450/468 [3:13:52<07:31, 25.08s/it][2024-05-03 23:12:25,451] [WARNING] [stage3.py:2069:step] 15 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 96%|█████████▋| 451/468 [3:14:18<07:08, 25.21s/it][2024-05-03 23:12:49,882] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 97%|█████████▋| 452/468 [3:14:42<06:39, 24.98s/it][2024-05-03 23:13:15,402] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 97%|█████████▋| 453/468 [3:15:08<06:17, 25.14s/it][2024-05-03 23:13:40,462] [WARNING] [stage3.py:2069:step] 11 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 97%|█████████▋| 454/468 [3:15:33<05:51, 25.12s/it][2024-05-03 23:14:05,415] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 97%|█████████▋| 455/468 [3:15:58<05:25, 25.07s/it][2024-05-03 23:14:31,586] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 97%|█████████▋| 456/468 [3:16:24<05:04, 25.40s/it][2024-05-03 23:14:55,938] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 98%|█████████▊| 457/468 [3:16:48<04:35, 25.08s/it][2024-05-03 23:15:20,507] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 98%|█████████▊| 458/468 [3:17:13<04:09, 24.93s/it][2024-05-03 23:15:45,854] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 98%|█████████▊| 459/468 [3:17:38<03:45, 25.06s/it][2024-05-03 23:16:10,922] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 98%|█████████▊| 460/468 [3:18:03<03:20, 25.06s/it]                                                   {'loss': 0.0804, 'grad_norm': 4.458138107269257, 'learning_rate': 2.5157232704402515e-08, 'rewards/chosen': -1.821293592453003, 'rewards/rejected': -12.2022123336792, 'rewards/accuracies': 0.875, 'rewards/margins': 10.380919456481934, 'logps/rejected': -603.6468505859375, 'logps/chosen': -489.551513671875, 'logits/rejected': -2.5820558071136475, 'logits/chosen': -2.5644402503967285, 'epoch': 2.94}
 98%|█████████▊| 460/468 [3:18:03<03:20, 25.06s/it][2024-05-03 23:16:35,405] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 99%|█████████▊| 461/468 [3:18:28<02:54, 24.89s/it][2024-05-03 23:17:00,217] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 99%|█████████▊| 462/468 [3:18:53<02:29, 24.86s/it][2024-05-03 23:17:25,834] [WARNING] [stage3.py:2069:step] 14 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 99%|█████████▉| 463/468 [3:19:18<02:05, 25.09s/it][2024-05-03 23:17:51,502] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 99%|█████████▉| 464/468 [3:19:44<01:41, 25.26s/it][2024-05-03 23:18:15,403] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 99%|█████████▉| 465/468 [3:20:08<01:14, 24.85s/it][2024-05-03 23:18:42,190] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
100%|█████████▉| 466/468 [3:20:35<00:50, 25.43s/it][2024-05-03 23:19:06,282] [WARNING] [stage3.py:2069:step] 12 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
100%|█████████▉| 467/468 [3:20:59<00:25, 25.03s/it][2024-05-03 23:19:32,284] [WARNING] [stage3.py:2069:step] 13 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
100%|██████████| 468/468 [3:21:25<00:00, 25.32s/it]                                                   {'train_runtime': 12085.6175, 'train_samples_per_second': 4.964, 'train_steps_per_second': 0.039, 'train_loss': 0.27144518074316853, 'epoch': 3.0}
100%|██████████| 468/468 [3:21:25<00:00, 25.32s/it]100%|██████████| 468/468 [3:21:25<00:00, 25.82s/it]
[93m [WARNING] [0m async_io requires the dev libaio .so object and headers but these were not found.
[93m [WARNING] [0m async_io: please install the libaio-dev package with apt
[93m [WARNING] [0m If libaio is already installed (perhaps from source), try setting the CFLAGS and LDFLAGS environment variables to where it can be found.
[93m [WARNING] [0m Please specify the CUTLASS repo directory as environment variable $CUTLASS_PATH
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
[93m [WARNING] [0m sparse_attn requires a torch version >= 1.5 and < 2.0 but detected 2.2
[93m [WARNING] [0m using untested triton version (2.2.0), only 1.0.0 is known to be compatible
[93m [WARNING] [0m On Ampere and higher architectures please use CUDA 11+
